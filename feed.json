{
    "version": "https://jsonfeed.org/version/1",
    "title": "ay的博客",
    "subtitle": "ay的博客",
    "icon": "https://aynya.github.io/images/favicon.ico",
    "description": "ay的博客",
    "home_page_url": "https://aynya.github.io",
    "items": [
        {
            "id": "https://aynya.github.io/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%AE%9E%E7%8E%B0%E8%8A%82%E7%82%B9%E9%97%B4%E7%9A%84%E4%BC%98%E9%9B%85%E8%BF%9E%E7%BA%BF/",
            "url": "https://aynya.github.io/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%AE%9E%E7%8E%B0%E8%8A%82%E7%82%B9%E9%97%B4%E7%9A%84%E4%BC%98%E9%9B%85%E8%BF%9E%E7%BA%BF/",
            "title": "贝塞尔曲线实现节点间的优雅连线",
            "date_published": "2025-04-11T08:58:11.000Z",
            "content_html": "<h1 id=\"构造二次贝塞尔曲线轻松实现节点间的优雅连线\"><a class=\"anchor\" href=\"#构造二次贝塞尔曲线轻松实现节点间的优雅连线\">#</a> 📐 构造二次贝塞尔曲线：轻松实现节点间的优雅连线</h1>\n<p>在开发思维导图或树状结构应用时，如何优雅地连接节点并绘制平滑的线条</p>\n<hr />\n<h2 id=\"贝塞尔曲线简介\"><a class=\"anchor\" href=\"#贝塞尔曲线简介\">#</a> ✨ 贝塞尔曲线简介</h2>\n<p>贝塞尔曲线是一种用于生成平滑曲线的数学工具 。它广泛应用于图形设计、动画、UI 开发等领域。贝塞尔曲线的特点是可以通过控制点来调整曲线的形状，从而生成各种平滑的路径。<br />\n多个贝塞尔曲线的组合可以生成各种复杂的曲线，如圆弧、曲线、贝塞尔曲线等。<br />\n一次贝塞尔曲线的公式是： <code>B(t) = (1 - t) * P₀ + t * P₁</code></p>\n<h2 id=\"二次贝塞尔曲线\"><a class=\"anchor\" href=\"#二次贝塞尔曲线\">#</a> 二次贝塞尔曲线</h2>\n<p>二次贝塞尔曲线是最简单的贝塞尔曲线类型之一，它由以下三个点定义：</p>\n<ul>\n<li><strong>起点 (P₀)</strong>：曲线的起始点。</li>\n<li><strong>控制点 (P₁)</strong>：决定曲线的弯曲方向和程度。</li>\n<li><strong>终点 (P₂)</strong>：曲线的结束点。<br />\n通过这三个点，我们可以构造出一条平滑的曲线。其公式如下：<br />\n <code>B(t) = (1 - t) ^ 2 * P₀ + 2 * t * (1 - t) * P₁ + t ^ 2 * P₂</code>  t ∈ [0, 1]</li>\n</ul>\n<h3 id=\"使用二次贝塞尔曲线连接节点\"><a class=\"anchor\" href=\"#使用二次贝塞尔曲线连接节点\">#</a> 🛠 使用二次贝塞尔曲线连接节点</h3>\n<p>这里采用 <code>react-konva</code>  中的 <code>Shape</code>  组件来绘制二次贝塞尔曲线。 <code>Shape</code>  提供了一个 <code>sceneFunc</code>  属性，允许我们直接操作 Canvas 上下文</p>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Shape</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token attr-name\">sceneFunc</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">beginPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span>startX<span class=\"token punctuation\">,</span> startY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移动到起点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">quadraticCurveTo</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            startX<span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 控制点 X 坐标</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            endY<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 控制点 Y 坐标</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            endX<span class=\"token punctuation\">,</span>     <span class=\"token comment\">// 终点 X 坐标</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            endY      <span class=\"token comment\">// 终点 Y 坐标</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillStrokeShape</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 应用填充和描边</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token attr-name\">stroke</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blue<span class=\"token punctuation\">\"</span></span>       <span class=\"token comment\">// 线条颜色</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token attr-name\">strokeWidth</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span></span>     <span class=\"token comment\">// 线条宽度</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><h2 id=\"参考资料多次也可以参考如下\"><a class=\"anchor\" href=\"#参考资料多次也可以参考如下\">#</a> 📚 参考资料 (多次也可以参考如下)</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rb252YWpzLm9yZy9kb2NzL3NhbmRib3gvTW9kaWZ5X0N1cnZlc193aXRoX0FuY2hvcl9Qb2ludHMuaHRtbA==\">konva 官方文档</span></li>\n</ul>\n",
            "tags": [
                "canvas",
                "konva",
                "贝塞尔曲线"
            ]
        },
        {
            "id": "https://aynya.github.io/%E8%80%83%E8%99%91%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%A4%9A%E5%8F%89%E6%A0%91%E5%88%86%E5%B1%82%E9%80%92%E5%BD%92%E5%B8%83%E5%B1%80%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/",
            "url": "https://aynya.github.io/%E8%80%83%E8%99%91%E5%B0%BA%E5%AF%B8%E7%9A%84%E5%A4%9A%E5%8F%89%E6%A0%91%E5%88%86%E5%B1%82%E9%80%92%E5%BD%92%E5%B8%83%E5%B1%80%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/",
            "title": "考虑尺寸的多叉树分层递归布局算法详解",
            "date_published": "2025-04-11T07:57:44.000Z",
            "content_html": "<h1 id=\"带尺寸多叉树分层递归布局算法详解\"><a class=\"anchor\" href=\"#带尺寸多叉树分层递归布局算法详解\">#</a> 🌳 带尺寸多叉树分层递归布局算法详解</h1>\n<p><strong>这里主要应用与思维导图，树的方向是从左到右</strong><br />\n让你的树形结构「严丝合缝」！✨ 本算法可实现：<br />\n✅ 父节点垂直居中于子节点区域<br />\n✅ 子节点右侧竖直排列不重叠<br />\n✅ 支持动态尺寸和折叠状态<br />\n✅ O (n) 时间复杂度</p>\n<hr />\n<h2 id=\"核心思想\"><a class=\"anchor\" href=\"#核心思想\">#</a> 🧩 核心思想</h2>\n<p>分为<strong>两阶段</strong></p>\n<ol>\n<li><strong>📏 预计算阶段</strong>：自底向上统计子树尺寸</li>\n<li><strong>🎯 定位阶段</strong>：自顶向下递归布局</li>\n</ol>\n<hr />\n<h2 id=\"️-实现\"><a class=\"anchor\" href=\"#️-实现\">#</a> 🛠️ 实现</h2>\n<h3 id=\"1-数据结构定义\"><a class=\"anchor\" href=\"#1-数据结构定义\">#</a> 1. 📦 数据结构定义</h3>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  position<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 节点中心坐标</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  size<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// [宽度，高度]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  children<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 子节点 ID 列表</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  collapsed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 折叠状态</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"2-️-配置参数\"><a class=\"anchor\" href=\"#2-️-配置参数\">#</a> 2. ⚙️ 配置参数</h3>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  horizontalSpacing<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//  父子水平间距</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  verticalSpacing<span class=\"token operator\">:</span> <span class=\"token number\">30</span>     <span class=\"token comment\">//  兄弟垂直间距</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"3-预计算子树尺寸\"><a class=\"anchor\" href=\"#3-预计算子树尺寸\">#</a> 3. 📐 预计算子树尺寸</h3>\n<p>通过递归的方式，计算每个节点子树的尺寸 (包括自身)<br />\n<strong> 算法原理</strong></p>\n<ul>\n<li><strong>自底向上递归</strong>：从叶子节点开始，逐步向上计算每个节点的子树尺寸。</li>\n<li><strong>考虑折叠状态</strong>：如果节点被折叠，它的子节点将不参与布局，直接返回节点自身的尺寸。</li>\n<li><strong>合并子节点尺寸</strong>：对于非叶子节点，需要计算其所有子节点的高度总和 (并与自身高度取最大值)，并找出最大子节点的宽度。</li>\n</ul>\n<p>图解连接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aWV3ZXIuZGlhZ3JhbXMubmV0Lz90YWdzPSU3QiU3RCZhbXA7bGlnaHRib3g9MSZhbXA7aGlnaGxpZ2h0PTAwMDBmZiZhbXA7ZWRpdD1fYmxhbmsmYW1wO2xheWVycz0xJmFtcDtuYXY9MSZhbXA7dGl0bGU9JUU2JTlDJUFBJUU1JTkxJUJEJUU1JTkwJThEJUU3JUJCJTk4JUU1JTlCJUJFLmRyYXdpbyZhbXA7ZGFyaz1hdXRvI1IlM0NteGZpbGUlM0UlM0NkaWFncmFtJTIwbmFtZSUzRCUyMiVFNyVBQyVBQyUyMDElMjAlRTklQTElQjUlMjIlMjBpZCUzRCUyMkk0S0VmanRHV1IxX1E0cjZZUmNPJTIyJTNFN1poZGI1c3dGSVolMkZqUzhiWWZQcHk1RFFkbHJYVGFxbVNiMWo0SUpYQnpQSGFaTDklMkJwbGdFcjdhWkJxMHk3YXIySzhQWUo3WDUyQUhtTFBGNWtxRWVmcUJ4NFFCWk1RYllNNEJRaEJCUyUyRjBVeXJaVVhOc29oVVRRV0FjZGhEdjZnMml4Q2x2Um1Dd2JnWkp6Sm1uZUZDT2VaU1NTRFMwVWdxJTJCYllRJTJCY05aJTJCYWh3bnBDSGRSeUxycUZ4ckx0RlE5NUI3MGEwS1R0SG95ZEhBNXNnaXJZUDBteXpTTSUyQmJvbW1RRXdaNEp6V2JZV214bGhCYnlLUzNuZDVUT2olMkI0a0prc2xUTHZDdjUyTDJIdWVYQ1dMM241ZTNVZkp4ZGFIdjhoU3lsWDVoUFZtNXJRZ0l2c3BpVXR6RUFLYSUyRlRxa2tkM2tZRmFOcjViblNVcmxncWdkVnN6dXA2Z2xFU0xLcFNYcVNWNFF2aUJSYkZWS05ZZzFNcnhqbzZ2NjZ4bDlMYVEyOW83VlFPNTdzNzN5QW9ocWF5eTh3UW44ZUk5TnFNdks2aUNBYWlkRzN4JTJCQW0lMkJmeVVmT2UzOXh2bjVwM0pieDlIV2tjZElEM1lUbWEwZiUyRmszZ3pUMFFucWdqTTA0NDBMMU01NlJZYmkxODY5bmJTRzNCeHV5eHVKbUhlZW1pbXRlTktPVllGdGZoTkVqa2NjQkhtanZjREthWCUyQnMyQzc4Uzlva3ZxYVE4VTVvbzM5TXZ5RkwxZGJocGpTOW9IQmR6OFVOR2swSmc1S0VlUDlYeVBrNXdHZXByY1dIMXN2enlHUk43R0JjUnRwdXJ2JTJCclhiZXh4MFIzTFJMdHJZdUFBM3dDJTJCQlFJYiUyQkJqNEpnZ3d3TzVPOFlEdkFqenZHSzJJeUthSkZmRklrU0hpSmVaOXE2R1pjRU9BZDV2ZzkyV29CdDdwQVclMkJPQmQ3NXU3Tm5qT1N4bk5ZV3BNZkR2dVFaelVPM0ozbHNnQVBncVliS0UzJTJCWE0lMkJlZlBKWjNIUHlySm8lMkYzajRMZkUzMHI4UGglMkYxZnJkcXRYbjRhdFdyZW9NUDdhSmJlTmFQaHoxclczMFM4WmQ0TUgyQ2RiRTlGcUdvWWtOTzU1QkEwNlEzZlVOdWVhazJtd003MTNQaVU1VnZ1a2NLQUJxNHpZMUFJWTdKUUQlMkJmTGVEbTRLcGMzNlZUMjJNSndacyUyQkdDaE55NSUyQjhJU1Q0dGtsRHZTRyUyQmxZNVJ3JTJCb3o2Yk1hR2RVYUo2VUx4aE1mWUM5TTg0WDJ6bWdyWFpwWHZkc09WQyUyQnFPN2hIOUxkV08xJTJGWmpQNENRJTNEJTNEJTNDJTJGZGlhZ3JhbSUzRSUzQyUyRm14ZmlsZSUzRQ==\">计算尺寸</span></p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 预计每个节点树尺寸，并返回总宽度和总高度 (后序遍历)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param nodeId 当前节点 ID</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param nodes 所有节点对象</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @param sizes 每个节点树尺寸的一个映射</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @returns 当前节点树的尺寸 &#123;width: number, height: number&#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> calculateSubtreeSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  sizes<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// 折叠状态或叶子节点</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\">// 递归计算子节点尺寸</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">let</span> totalChildHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">let</span> maxChildWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    totalChildHeight <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    maxChildWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxChildWidth<span class=\"token punctuation\">,</span> childSize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token comment\">// 计算总高度（包含间距）</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeHeight <span class=\"token operator\">=</span> totalChildHeight <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token comment\">// 当前节点宽度 = 自身宽度 + 最大子节点宽度 + 水平间距</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeWidth <span class=\"token operator\">=</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> maxChildWidth <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token comment\">// 计算总高度（取自身高度和子树高度中的较大值）</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">const</span> totalHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subtreeHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">// 设置当前节点树尺寸</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> totalHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> totalHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"4-节点树布局\"><a class=\"anchor\" href=\"#4-节点树布局\">#</a> 4. 📈 节点树布局</h3>\n<p>根据计算出的子树尺寸，递归地设置每个节点的位置<br />\n<strong>算法原理</strong>：</p>\n<ul>\n<li><strong>自顶向下递归</strong>：从根节点开始，根据父节点的位置和子树尺寸，确定每个子节点的位置。</li>\n<li><strong>垂直居中对齐</strong>：为了保持视觉上的平衡，子节点相对于父节点垂直居中对齐。</li>\n<li><strong>忽略折叠节点</strong>：如果某个节点被折叠，则不处理其子节点。</li>\n</ul>\n<p>兄弟节点需要累加垂直位移才保证不会重叠<br />\n并且注意父节点是更具节点树的高度来确定垂直位置的偏移量，而子节点则是根据自身高度来确定垂直位置的偏移量。</p>\n<p>图解：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aWV3ZXIuZGlhZ3JhbXMubmV0Lz90YWdzPSU3QiU3RCZhbXA7bGlnaHRib3g9MSZhbXA7aGlnaGxpZ2h0PTAwMDBmZiZhbXA7ZWRpdD1fYmxhbmsmYW1wO2xheWVycz0xJmFtcDtuYXY9MSZhbXA7dGl0bGU9JUU2JTlDJUFBJUU1JTkxJUJEJUU1JTkwJThEJUU3JUJCJTk4JUU1JTlCJUJFLmRyYXdpbyZhbXA7ZGFyaz1hdXRvI1IlM0NteGZpbGUlM0UlM0NkaWFncmFtJTIwbmFtZSUzRCUyMiVFNyVBQyVBQyUyMDElMjAlRTklQTElQjUlMjIlMjBpZCUzRCUyMkk0S0VmanRHV1IxX1E0cjZZUmNPJTIyJTNFN1psYmI1c3dHSVolMkZqUyUyQkx3TVNBTDBPU3R0TzZybEpWVGVvZEE0ZXdPbkZtbkNiWnI1OEpKZ1J3RHRWQ0RsTjdVJTJGUGhFOCUyRkxhJTJCd3Z3TzZORjNjOG1JNiUyQnNZaFFBTTFvQWV3JTJCZ05DQ1ZrZiUyQnl5TExQT0lpTXclMkZFUElsVXBUTHduUHdoS2xoVW15VVJTU3NWQldOVUpOTnFNR1NUQ1FsRkpSWnd6dWJWYWtOR3E2Tk9nNWcwQXM5aFFKdlJIMGtrUm5uVWcyNFp2eWRKUENwR3RoeWMzeGtIUldYMUpPa29pTmg4STJRUGdOM2pqSW04TkY3MENNM2dGVnp5ZHJkYjdxNG54c2xFSE5MQXYlMkIlMkZ6M2xjOHZZMGhmWDFKSDhQNCUyQiUyQnhHOWZJZTBKbDZZRFZac1N3SWNEYWJSQ1RyeEFTMlB4OGxnanhQZ3pDN081ZWF5OWhJakttOHNtU3hPYWxpQk1JRldXeUUxQ1R2Q0JzVHdaZXlpcnJyS0Y3cWhiRmNkVDNmd0s5Q293M3lSYk5BQ1I2dk95Nlp5SUxDOGdGRThQSVFyZDJ4ZzVFRlc0TDA2MjN3RUwlMkI4eDclMkZaNCUyQnZDZWZoaXM4ZTNsdDZqQmhFTnQ0TWgyZWpja0k3OUpnMFRTbnVNTWk2dkoyeENqc1B0QVA5QlY0TU5kdHJpMXRuUFRTNnUwNndZempoZCUyQmp3STM0allEN0NrdmNKSmslMkJtOUt0UGdKNkZQTEUxRXdpWXl4dlBuOURPeWlmdzZQTlR1ajVNb3l1YmlCelNKc3dBbHc4MzZYUlZlMSUyQk5NQktvdHpxUk84eSUyQmZhYUFqcVdpWmhnT3JCdkJRVTBtTmtHNWJPcUttamdNSCUyQkNid08yQ0FnSSUyQkJiNE1CQnRoZFJUemd1d0QzRzFwTEtLS3FZd0U5bEhBSTM0VmQ5MEpVUFhjRTlnZzMySGZzcG9zY0RYdTdMZmJPJTJGJTJCMmhOaXprdXNod0xGeiUyQlZSU0ZHa1YxYm1wTlVWZmpKZ1R3QUhpeUlJM2pyMHgwJTJGVzV5OFVkbE9LbXh2RThaTXJ6d3pETGd6JTJGWHR1T3ViVHRHVHJtJTJGRjlyMXRTZXN5MWxUWnEySmQ5bDB5M3VEamJURnFha0VEV1EzQkxOTXlJR3FLQmwzYmNGRmJ3bWtPZzNKSjdQYUJuTFRjOEhWTmdLMVZaQUQ4JTJGbXJuMXdWZDUlMkZxV3hOVWUyNjdvZ0t3enI0UFdBWWZNcTNPTjVSM3JJN1p6eWRPbVViWTVxTFhUcm1VZlpCOE11ajdBM2hYYngzTWR3M08yYnV6YzVtbjF0RTdTSEZlM09XbEl5YUtiWlpzbEdUS0pWTEVmMGlCTmszQ2JqMHFPSkdwa29mZFMzT0NDTkZ5S0dDZFUlMkJ1aTkycjBPbGhyaGlTVnk0TFZJZGkwZEJEMXNJRmp0SldVekhoTFZFRzVrb0d0OWRkRCUyQnZrVEFZeUlhZmEwVVhEJTJGOFA0aXFPVFhWUlQxMW9oS1pOU3hPY3hscUslMkJPdGg2UTUwNXdia2xON2R5NGc1WDNBa2VQY2xDNGc1MzNBTHY0Q2t0NTFEN2FhOVphWDVjOSUyQiUyQmNwVyUyRm5ocUQlMkY0QyUzQyUyRmRpYWdyYW0lM0UlM0MlMkZteGZpbGUlM0U=\">布局</span></p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 递归设置每个节点的位置 (前序遍历)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param nodeId 当前节点的 ID</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param nodes 所有节点对象</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @param sizes 每个节点树尺寸的隐射</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @param parentX 父节点的 X 坐标</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @param parentY 父节点的 Y 坐标</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  sizes<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> sizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">// 设置当前节点位置（根据该点的节点树的尺寸，垂直居中）</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">const</span> currentX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">setNodePosition</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\">// 折叠状态不处理子节点</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 计算子节点起始位置</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> sizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 子节点水平位置</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">const</span> childX <span class=\"token operator\">=</span> currentX <span class=\"token operator\">+</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 递归布局</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">,</span> childX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">// 更新累积 Y 坐标（包含间距）</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    childY <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<h2 id=\"优化建议\"><a class=\"anchor\" href=\"#优化建议\">#</a> ⚡优化建议</h2>\n<ul>\n<li>如果父节点的高度就是该节点树的高度时，子节点会在父节点 Y 坐标的开始处开始排列 (待解决)</li>\n<li>缓存子树的尺寸，避免重复计算</li>\n<li>增量更新节点位置，减少重绘次数</li>\n</ul>\n<h2 id=\"适用场景\"><a class=\"anchor\" href=\"#适用场景\">#</a> 🌟 适用场景</h2>\n<ul>\n<li>思维导图工具 🧠</li>\n<li>文件目录可视化 📂</li>\n<li>组织架构图 👥</li>\n</ul>\n<hr />\n<p>💡 小贴士：调整  <code>horizontalSpacing</code>  和  <code>verticalSpacing</code>  可获得不同风格的布局效果！🎨</p>\n<hr />\n<p>✨优化更新：2025-04-13<br />\n 优化内容：</p>\n<ul>\n<li>将布局代码放到主函数中，用 <code>map</code>  去记录更新后的节点位置，布局结束后统一更新节点位置，减少渲染次数。</li>\n</ul>\n<p>优化原因：</p>\n<ul>\n<li>原来的代码在布局的时候每次算出的位置都直接调用 <code>setNodePosition</code>  去更新，会导致组件重渲染多次，导致性能下降。</li>\n</ul>\n<p><strong>实测可以大大减少重绘次数，提升性能。</strong></p>\n<p>代码：</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 计算整个树的布局</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculateTreeLayout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> nodes <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootX <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootY <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 1. 创建临时位置存储对象</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">const</span> newPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 2. 清空位置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token comment\">// 计算子树尺寸</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeSizes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> subtreeSizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// 3. 修改后的布局函数（不再直接更新状态）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">const</span> currentX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储到临时对象</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token keyword\">const</span> childX <span class=\"token operator\">=</span> currentX <span class=\"token operator\">+</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> childX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      childY <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token comment\">// 4. 计算位置偏移并批量更新</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootX <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootY <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> computedRootX <span class=\"token operator\">-</span> originalRootX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> computedRootY <span class=\"token operator\">-</span> originalRootY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token comment\">// 应用偏移并准备最终位置</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token keyword\">const</span> finalPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    finalPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">-</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> dy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token comment\">// 5. 一次性更新所有位置</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">setNodePositions</span><span class=\"token punctuation\">(</span>finalPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<p>✨优化更新：2025-04-16<br />\n 更新内容：</p>\n<ul>\n<li>使用思维导图的树布局算法，实现了 <code>right-to-left</code>  &amp;  <code>center</code>  &amp;  <code>top-to-bottom</code>  树布局结构，现在一共有四种树布局结构</li>\n</ul>\n<p>更新原因：</p>\n<ul>\n<li>原来的布局结构太单一</li>\n</ul>\n<p>步骤：</p>\n<ol>\n<li><strong>状态管理中添加布局结构选择</strong></li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    position<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    children<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新增尺寸字段 [width, height]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    collapsed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 新增折叠状态</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新增方向属性 (只在 center 布局中使用)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">State</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> Node<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    connections<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    selectedNodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    layoutStyle<span class=\"token operator\">:</span> <span class=\"token string\">'left-to-right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right-to-left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'center'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'top-to-bottom'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新增布局风格属性</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>对于 center 布局需要一个特定的 direction 属性</strong><br />\n <code>center</code>  布局我采用的是只对于根节点的子节点进行左右区分，一半在左一半在右边，其他的子节点就直接继承其父节点的 <code>direction</code>  属性。这样就可以划分出左子树和右子树。<br />\n当然！在每次对根节点进行操作时都需要从新计算 <code>direction</code>  属性.<br />\n 因此在状态管理中添加以下函数：</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 更新 center 布局的 direction</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function-variable function\">updateChildrenDirections</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">const</span> updateNodeDirection <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> parentDirection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 如果父节点有方向，继承父节点的方向</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parentDirection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                node<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> parentDirection<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 递归更新子节点的方向</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token function\">updateNodeDirection</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">.</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// console.log(JSON.parse(JSON.stringify(rootNode.children)))</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>rootNode <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span>childId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>layoutStyle <span class=\"token operator\">===</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    child<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        index <span class=\"token operator\">&lt;</span> rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>layoutStyle <span class=\"token operator\">===</span> <span class=\"token string\">'left-to-right'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    child<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>layoutStyle <span class=\"token operator\">===</span> <span class=\"token string\">'right-to-left'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    child<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">=</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// console.log(JSON.parse(JSON.stringify(rooFtNode.children)))</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">// 调用函数更新所有子节点的方向</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">[</span>childId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token function\">updateNodeDirection</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">.</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>left-to-right &amp; right-to-left 布局代码</strong><br />\n只需要将之前的布局代码区分为左右，修改 <code>childX</code>  的计算方法即可实现</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useMindmapStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../store/useMindmapStore'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  position<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  size<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  children<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  collapsed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 辅助函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeWidth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeHeight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> horizontalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 父子节点水平间距</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> verticalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 兄弟节点垂直间距</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * 计算整个树的布局</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculateTreeLayout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> nodes <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">const</span> layoutStyle <span class=\"token operator\">=</span> useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>layoutStyle<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootX <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootY <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token comment\">// 1. 创建临时位置存储对象</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">const</span> newPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">// 2. 修改清空位置的方式</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token comment\">// 计算子树尺寸</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeSizes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> subtreeSizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token comment\">// 3. 修改后的布局函数（不再直接更新状态）</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">const</span> currentX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储到临时对象</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token keyword\">let</span> childX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>layoutStyle <span class=\"token operator\">===</span> <span class=\"token string\">'left-to-right'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 加</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        childX <span class=\"token operator\">=</span> currentX <span class=\"token operator\">+</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>layoutStyle <span class=\"token operator\">===</span> <span class=\"token string\">'right-to-left'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 减</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        childX <span class=\"token operator\">=</span> currentX <span class=\"token operator\">-</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">[</span>childId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> childX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      childY <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token comment\">// 4. 计算位置偏移并批量更新</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootX <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootY <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> computedRootX <span class=\"token operator\">-</span> originalRootX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> computedRootY <span class=\"token operator\">-</span> originalRootY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token comment\">// 应用偏移并准备最终位置</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token keyword\">const</span> finalPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    finalPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">-</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> dy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token comment\">// 5. 一次性更新所有位置</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">setNodePositions</span><span class=\"token punctuation\">(</span>finalPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"88\"></td><td><pre> * 预计每个节点树尺寸，并返回总宽度和总高度 (后序遍历)</pre></td></tr><tr><td data-num=\"89\"></td><td><pre> * @param nodeId 当前节点 ID</pre></td></tr><tr><td data-num=\"90\"></td><td><pre> * @param nodes 所有节点对象</pre></td></tr><tr><td data-num=\"91\"></td><td><pre> * @param sizes 每个节点树尺寸的一个映射</pre></td></tr><tr><td data-num=\"92\"></td><td><pre> * @returns 当前节点树的尺寸 &#123;width: number, height: number&#125;</pre></td></tr><tr><td data-num=\"93\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">const</span> calculateSubtreeSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  sizes<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  <span class=\"token comment\">// 折叠状态或叶子节点</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token comment\">// 递归计算子节点尺寸</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  <span class=\"token keyword\">let</span> totalChildHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token keyword\">let</span> maxChildWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    totalChildHeight <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    maxChildWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxChildWidth<span class=\"token punctuation\">,</span> childSize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  <span class=\"token comment\">// 计算总高度（包含间距）</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeHeight <span class=\"token operator\">=</span> totalChildHeight <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>  <span class=\"token comment\">// 当前节点宽度 = 自身宽度 + 最大子节点宽度 + 水平间距</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeWidth <span class=\"token operator\">=</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> maxChildWidth <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>  <span class=\"token comment\">// 计算总高度（取自身高度和子树高度中的较大值）</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token keyword\">const</span> totalHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subtreeHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>  <span class=\"token comment\">// 设置当前节点树尺寸</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> totalHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> totalHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> calculateTreeLayout<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li><strong>center 布局代码</strong><br />\n划分为左子树和右子树，左子树按照 <code>right-to-left</code>  布局，右子树按照 <code>left-to-right</code>  布局。注意计算子树尺寸的时候也需要将两个子树分开计算。总的来说就是将左右子树分别执行两次布局算法就可以实现。</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useMindmapStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../store/useMindmapStore'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    position<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    size<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    children<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    collapsed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    direction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 使用 Store 中的 direction 属性</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 辅助函数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeWidth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeHeight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> horizontalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 父子节点水平间距</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">const</span> verticalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 兄弟节点垂直间距</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * 计算整个树的布局（从中间向左右布局）</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculateCenterLayout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> nodes <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>collapsed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">const</span> originalRootX <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">const</span> originalRootY <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// 临时存储每个节点的新位置</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">const</span> newPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 初始化所有节点位置为 [0, 0]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// 子树尺寸缓存（全局共享）</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">const</span> subtreeSizes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 分离左右子树</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">const</span> leftChildren <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> nodes<span class=\"token punctuation\">[</span>childId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">const</span> rightChildren <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> nodes<span class=\"token punctuation\">[</span>childId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">// 布局左侧子树</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutLeftTree</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> subtreeSizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutTree</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">let</span> currentX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                currentX <span class=\"token operator\">-=</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY <span class=\"token operator\">+</span> nodeSize<span class=\"token operator\">?.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token function\">layoutTree</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> currentX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                childY <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        leftChildren<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token function\">layoutTree</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> originalRootX<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            sum <span class=\"token operator\">+=</span> childSize<span class=\"token operator\">?.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token comment\">// 布局右侧子树</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutRightTree</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> subtreeSizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutTree</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            parentId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token keyword\">let</span> currentX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>direction <span class=\"token operator\">===</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                currentX <span class=\"token operator\">+=</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">[</span>parentId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY <span class=\"token operator\">+</span> nodeSize<span class=\"token operator\">?.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Setting position for </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>nodeId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">:</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                <span class=\"token function\">layoutTree</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> currentX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">,</span> nodeId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                childY <span class=\"token operator\">+=</span> childSize<span class=\"token operator\">?.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        rightChildren<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token function\">layoutTree</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> originalRootX<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">,</span> rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            sum <span class=\"token operator\">+=</span> childSize<span class=\"token operator\">?.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token comment\">// 布局左右子树</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token function\">layoutLeftTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token function\">layoutRightTree</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">let</span> minY <span class=\"token operator\">=</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">let</span> maxY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> nodeId <span class=\"token keyword\">in</span> newPositions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        minY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>minY<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        maxY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxY<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>minY<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>maxY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        minY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        maxY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">minY: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>minY<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">, maxY: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>maxY<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token comment\">// 设置根节点位置</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>originalRootX<span class=\"token punctuation\">,</span> maxY <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token comment\">// 4. 计算位置偏移并批量更新</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token keyword\">const</span> computedRootX <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token keyword\">const</span> computedRootY <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> computedRootX <span class=\"token operator\">-</span> originalRootX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> computedRootY <span class=\"token operator\">-</span> originalRootY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token comment\">// 应用偏移并准备最终位置</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token keyword\">const</span> finalPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        finalPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">-</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> dy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token comment\">// 更新所有节点的位置</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">setNodePositions</span><span class=\"token punctuation\">(</span>finalPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"165\"></td><td><pre> * 预计每个节点树尺寸，并返回总宽度和总高度 (后序遍历)</pre></td></tr><tr><td data-num=\"166\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token keyword\">const</span> calculateSubtreeSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    sizes<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token keyword\">let</span> totalHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token keyword\">let</span> maxWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        totalHeight <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        maxWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxWidth<span class=\"token punctuation\">,</span> childSize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token keyword\">const</span> subtreeHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> totalHeight <span class=\"token operator\">-</span> verticalSpacing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">const</span> subtreeWidth <span class=\"token operator\">=</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> maxWidth <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> subtreeHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> subtreeWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> subtreeHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> calculateCenterLayout<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li><strong>top-to-bottom 的布局代码</strong><br />\n只需要将原来的布局算法，宽度改为高度，高度改为宽度即可。核心的计算思想也是不变，先尺寸再布局，也可以看成是 <code>left-to-right</code>  顺时针旋改变 <code>x</code>  和 <code>y</code>  坐标得来的。</li>\n</ol>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useMindmapStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../store/useMindmapStore'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">interface</span> <span class=\"token class-name\">TreeNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  id<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  position<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  size<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  children<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  collapsed<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// 辅助函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeWidth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNodeHeight</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>node<span class=\"token operator\">:</span> TreeNode<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> horizontalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 父子节点水平间距</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">const</span> verticalSpacing <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 兄弟节点垂直间距</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * 计算整个树的布局</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calculateVerticaLayout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> nodes <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootX <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRootY <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token comment\">// 1. 创建临时位置存储对象</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">const</span> newPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token comment\">// 2. 修改清空位置的方式</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token comment\">// 计算子树尺寸</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeSizes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> subtreeSizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>subtreeSizes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token comment\">// 3. 修改后的布局函数（不再直接更新状态）</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">layoutNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    parentX<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    parentY<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">const</span> nodeSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">const</span> currentX <span class=\"token operator\">=</span> parentX <span class=\"token operator\">+</span> nodeSize<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> parentY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    newPositions<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>currentX<span class=\"token punctuation\">,</span> currentY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储到临时对象</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">let</span> childX <span class=\"token operator\">=</span> parentX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>      <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> subtreeSizes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      <span class=\"token keyword\">let</span> childY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      childY <span class=\"token operator\">=</span> currentY <span class=\"token operator\">+</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> childX<span class=\"token punctuation\">,</span> childY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      childX <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token function\">layoutNode</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token comment\">// 4. 计算位置偏移并批量更新</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootX <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">const</span> computedRootY <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>rootNode<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token keyword\">const</span> dx <span class=\"token operator\">=</span> computedRootX <span class=\"token operator\">-</span> originalRootX<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">const</span> dy <span class=\"token operator\">=</span> computedRootY <span class=\"token operator\">-</span> originalRootY<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token comment\">// 应用偏移并准备最终位置</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">const</span> finalPositions<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>newPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    finalPositions<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">-</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-</span> dy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  <span class=\"token comment\">// 5. 一次性更新所有位置</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  useMindmapStore<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">.</span><span class=\"token function\">setNodePositions</span><span class=\"token punctuation\">(</span>finalPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"85\"></td><td><pre> * 预计每个节点树尺寸，并返回总宽度和总高度 (后序遍历)</pre></td></tr><tr><td data-num=\"86\"></td><td><pre> * @param nodeId 当前节点 ID</pre></td></tr><tr><td data-num=\"87\"></td><td><pre> * @param nodes 所有节点对象</pre></td></tr><tr><td data-num=\"88\"></td><td><pre> * @param sizes 每个节点树尺寸的一个映射</pre></td></tr><tr><td data-num=\"89\"></td><td><pre> * @returns 当前节点树的尺寸 &#123;width: number, height: number&#125;</pre></td></tr><tr><td data-num=\"90\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">const</span> calculateSubtreeSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  nodeId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  nodes<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> TreeNode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  sizes<span class=\"token operator\">:</span> Map<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token keyword\">const</span> node <span class=\"token operator\">=</span> nodes<span class=\"token punctuation\">[</span>nodeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  <span class=\"token comment\">// 折叠状态或叶子节点</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>collapsed <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> <span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token comment\">// 递归计算子节点尺寸</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token keyword\">let</span> totalChildHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token keyword\">let</span> maxChildWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>childId <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">const</span> childSize <span class=\"token operator\">=</span> <span class=\"token function\">calculateSubtreeSize</span><span class=\"token punctuation\">(</span>childId<span class=\"token punctuation\">,</span> nodes<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    maxChildWidth <span class=\"token operator\">+=</span> childSize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    totalChildHeight <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>totalChildHeight<span class=\"token punctuation\">,</span> childSize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeHeight <span class=\"token operator\">=</span> <span class=\"token function\">getNodeHeight</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> totalChildHeight <span class=\"token operator\">+</span> verticalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  <span class=\"token keyword\">const</span> subtreeWidth <span class=\"token operator\">=</span> maxChildWidth <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> horizontalSpacing<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token keyword\">const</span> totalWidth <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNodeWidth</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> subtreeWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>  <span class=\"token comment\">// 设置当前节点树尺寸</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  sizes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>nodeId<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> totalWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> subtreeHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> width<span class=\"token operator\">:</span> totalWidth<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> subtreeHeight <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> calculateVerticaLayout<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>🍾至此，完成了 <code>left-to-right</code>  &amp;  <code>right-to-left</code>  &amp;  <code>center</code>  &amp;  <code>top-to-bottom</code>  结构的布局，当然！后续也可以添加 <code>时间轴布局结构</code>  &amp;  <code>鱼骨图</code>  &amp;  <code>力导向</code> 等等许多结构布局</p>\n<hr />\n",
            "tags": [
                "canvas",
                "JavaScript",
                "树",
                "思维导图"
            ]
        },
        {
            "id": "https://aynya.github.io/Konva-js%E5%AE%9E%E7%8E%B0%E8%B6%85%E8%87%AA%E7%84%B6%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/",
            "url": "https://aynya.github.io/Konva-js%E5%AE%9E%E7%8E%B0%E8%B6%85%E8%87%AA%E7%84%B6%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91/",
            "title": "Konva.js实现超自然文本编辑",
            "date_published": "2025-04-10T03:38:33.000Z",
            "content_html": "<h1 id=\"当-canvas-遇见-dom在-konva-中实现丝滑文本编辑的技巧\"><a class=\"anchor\" href=\"#当-canvas-遇见-dom在-konva-中实现丝滑文本编辑的技巧\">#</a> 🎨 当 Canvas 遇见 DOM：在 Konva 中实现丝滑文本编辑的技巧</h1>\n<h2 id=\"为什么需要-dom-canvas-的混合方案\"><a class=\"anchor\" href=\"#为什么需要-dom-canvas-的混合方案\">#</a> 💡 为什么需要 DOM + Canvas 的混合方案？</h2>\n<p>konva 的 <code>Text</code>  组件虽然强大，但在处理<strong>复杂文本编辑</strong>时存在局限：</p>\n<ul>\n<li>⌨️ 缺少自动换行、光标控制等原生能力</li>\n<li>🖥️ 复杂样式支持有限</li>\n</ul>\n<p><strong>解决方案</strong>：通过 DOM 元素模拟 Canvas 的文本编辑！</p>\n<hr />\n<h2 id=\"目标\"><a class=\"anchor\" href=\"#目标\">#</a> 📌 目标</h2>\n<p>让 Konva 画布中的节点文本 <strong>双击可编辑</strong>，效果像直接在 Canvas 上输入文字一样丝滑！（无需 Konva 的复杂组件，直接用原生 <code>&lt;textarea&gt;</code>  实现！）</p>\n<h2 id=\"核心思路\"><a class=\"anchor\" href=\"#核心思路\">#</a> 🔧 核心思路</h2>\n<ol>\n<li><strong>双击触发</strong>：监听 konva 节点的 <code>onDblClick</code>  事件</li>\n<li><strong>DOM 定位</strong>：Konva 画布坐标系计算 DOM 元素的绝对位置</li>\n<li><strong>同步样式</strong>：让 <code>&lt;textarea&gt;</code>  完全复刻 Konva 节点的样式 (颜色、字体、字号等)</li>\n<li><strong>数据同步</strong>：输入完成时更新 Konva 节点文本和尺寸</li>\n</ol>\n<hr />\n<h2 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 📝 代码</h2>\n<h3 id=\"1️⃣-监听双击事件\"><a class=\"anchor\" href=\"#1️⃣-监听双击事件\">#</a> 1️⃣ 监听双击事件</h3>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleDoubleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> KonvaEventObject<span class=\"token operator\">&lt;</span>MouseEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> stage <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getStage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">// 计算缩放后的位置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">const</span> areaPosition <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    x<span class=\"token operator\">:</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    y<span class=\"token operator\">:</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">scaleY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 创建 DOM 输入框</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">createTextarea</span><span class=\"token punctuation\">(</span>areaPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"2️⃣-创建-dom-输入框\"><a class=\"anchor\" href=\"#2️⃣-创建-dom-输入框\">#</a> 2️⃣ 创建 DOM 输入框</h3>\n<ol>\n<li>创建  <code>textarea</code></li>\n<li>找到 konva 的位置，并同步到 DOM 中</li>\n<li>复刻样式</li>\n<li>聚焦</li>\n</ol>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建 textarea</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> textarea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"textarea\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"konva-container\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>container<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>container<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>textarea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token string\">\"absolute\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>areaPosition<span class=\"token punctuation\">.</span>y<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>left <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>areaPosition<span class=\"token punctuation\">.</span>x<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> scale<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>node<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> scale<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> scale<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token string\">\"2px solid #4f46e5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Rect 的 stroke</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>borderRadius <span class=\"token operator\">=</span> <span class=\"token string\">\"8px\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Rect 的 cornerRadius</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">\"20px\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Text 的 padding</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>margin <span class=\"token operator\">=</span> <span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>overflow <span class=\"token operator\">=</span> <span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> <span class=\"token string\">\"#ffffff\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Rect 的 fill</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>outline <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>resize <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>wordBreak <span class=\"token operator\">=</span> <span class=\"token string\">\"break-word\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>fontFamily <span class=\"token operator\">=</span> <span class=\"token string\">\"Arial, sans-serif\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Text 的 fontFamily</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transformOrigin <span class=\"token operator\">=</span> <span class=\"token string\">\"left top\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"#000000\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 复刻 Text 的颜色</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>textarea<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"3️⃣-数据同步与销毁\"><a class=\"anchor\" href=\"#3️⃣-数据同步与销毁\">#</a> 3️⃣ 数据同步与销毁</h3>\n<ol>\n<li>监听事件：监听键盘事件、失焦事件</li>\n<li>移除 DOM 元素</li>\n</ol>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">removeTextarea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    textarea<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 监听键盘事件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keydown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">\"Enter\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>e<span class=\"token punctuation\">.</span>shiftKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        textarea<span class=\"token punctuation\">.</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 失去焦点触发保存</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">measureText</span><span class=\"token punctuation\">(</span>textarea<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>width<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    textarea<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>height<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 失焦时保存文本</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>textarea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">const</span> newText <span class=\"token operator\">=</span> textarea<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    actions<span class=\"token punctuation\">.</span><span class=\"token function\">updateNodeText</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> newText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新节点文本</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    actions<span class=\"token punctuation\">.</span><span class=\"token function\">updateNodeSize</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token function\">measureText</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新节点尺寸</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">removeTextarea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移除 textarea</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"4️⃣-测量文本尺寸\"><a class=\"anchor\" href=\"#4️⃣-测量文本尺寸\">#</a> 4️⃣ 测量文本尺寸</h3>\n<p>通过直接在 DOM 中创建一个临时的  <code>Konva.Text</code>  元素，然后获取它的尺寸。由于这边复刻的 <code>padding</code>  是 20px 上下左右都有，所以宽高都要加上 40px。<br />\n如果知识单单的复刻，就不需要加 <code>padding</code>  了，直接返回宽高就行。</p>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 测量文本尺寸</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> measureText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>text<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> tempText <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Konva</span><span class=\"token punctuation\">.</span><span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fontSize<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        text<span class=\"token operator\">:</span> text</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        tempText<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        tempText<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"5️⃣-文本位置获取详解向量运算\"><a class=\"anchor\" href=\"#5️⃣-文本位置获取详解向量运算\">#</a> 5️⃣ 文本位置获取详解 (向量运算)</h3>\n<ol>\n<li><code>stage</code>  的 <code>x &amp; y</code>  是整个画布相对于视口的偏移量</li>\n<li><code>node</code>  的 <code>postion</code>  是当前节点相对于画布的偏移量</li>\n<li>而我们要获取的是当前节点相对于视口的偏移量</li>\n<li>而 <code>node</code>  实际的相对于画布的偏移量是受 <code>scale</code>  影响的</li>\n<li>所以当前节点相对于视口的偏移量就是： <code>stage + node * scale</code></li>\n</ol>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 获取文本位置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> areaPosition <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    x<span class=\"token operator\">:</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    y<span class=\"token operator\">:</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>通过 DOM + Canvas 的混合方案，实现了一个超自然文本编辑的组件。通过监听 <code>onDblClick</code>  事件，在画布上双击时创建一个 <code>textarea</code> ，并同步样式和位置。通过键盘事件和失焦事件，实现了文本的保存和尺寸的更新。</p>\n<h2 id=\"亮点\"><a class=\"anchor\" href=\"#亮点\">#</a> 🌈 亮点</h2>\n<ul>\n<li>纯原生 DOM 操作，轻量高效</li>\n<li><strong>完美融合</strong>：输入框与画布元素无缝衔接</li>\n</ul>\n<hr />\n<p>🎉 <strong>现在，画布节点拥有 “编辑超能力” 了！</strong></p>\n",
            "tags": [
                "canvas",
                "konva",
                "Dom",
                "Text"
            ]
        },
        {
            "id": "https://aynya.github.io/Konva%E5%AE%9E%E7%8E%B0%E4%BB%A5%E9%BC%A0%E6%A0%87%E4%B8%BA%E4%B8%AD%E5%BF%83%E7%9A%84%E7%B2%BE%E5%87%86%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE/",
            "url": "https://aynya.github.io/Konva%E5%AE%9E%E7%8E%B0%E4%BB%A5%E9%BC%A0%E6%A0%87%E4%B8%BA%E4%B8%AD%E5%BF%83%E7%9A%84%E7%B2%BE%E5%87%86%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE/",
            "title": "Konva实现以鼠标为中心的精准画布缩放",
            "date_published": "2025-04-09T02:43:31.000Z",
            "content_html": "<h1 id=\"如何实现以鼠标为中心的精准画布缩放\"><a class=\"anchor\" href=\"#如何实现以鼠标为中心的精准画布缩放\">#</a> 如何实现以鼠标为中心的精准画布缩放？</h1>\n<h2 id=\"一-核心原理坐标系转换\"><a class=\"anchor\" href=\"#一-核心原理坐标系转换\">#</a> 一、核心原理：坐标系转换</h2>\n<p>要实现精准缩放，需要理解两个核心坐标系：</p>\n<ol>\n<li><strong>视口坐标系</strong>：用户当前看到的区域（Viewport）</li>\n<li><strong>内容坐标系</strong>：画布的实际内容（Content）</li>\n</ol>\n<p>缩放的本质就是这两个坐标系的比例变换。我们的目的是：<strong>无论缩放比例如何变化，鼠标点对应的内容位置始终保持不变</strong>。</p>\n<h3 id=\"数学关系\"><a class=\"anchor\" href=\"#数学关系\">#</a> 数学关系</h3>\n<p>设：</p>\n<ul>\n<li>当前缩放比例： <code>S</code></li>\n<li>新缩放比例： <code>S'</code></li>\n<li>鼠标的视口坐标： <code>向量A = (P_x, P_y)</code></li>\n<li>画布偏移量 (相对于视口)： <code>向量B = (O_x, O_y)</code></li>\n</ul>\n<p>将鼠标相对于视口的坐标减去画布的偏移量得到鼠标相对于画布的坐标：<br />\n则内容坐标系下对应的点为向量 C：<br />\n <code>C_x = (P_x - O_x) / S</code> <br />\n <code>C_y = (P_y - O_y) / S</code> <br />\n <code>向量C = 向量B - 向量A</code></p>\n<p>缩放后保持该点的位置不变：<br />\n相对位置要乘以新的缩放比例 <code>S'</code> ：<br />\n可得 (这时候我们要求的就是新的画布偏移量了)<br />\n <code>P_x = O_x' + C_x * S'</code> <br />\n <code>P_y = O_y' + C_y * S'</code> <br />\n <code>向量A = 向量B + 向量C'</code></p>\n<p>就可以解得新的画布偏移量了 <code>(O_x', O_y')</code> <br />\n <code>O_x = Px - C_x * S'</code> <br />\n <code>O_y = Py - C_y * S'</code></p>\n<h2 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现：</h2>\n<ol>\n<li><strong>坐标系转换</strong><br />\n <code>(pointer - stage)</code>  将视口坐标转换为内容绝对坐标，再除以当前缩放比例得到原始内容坐标系的位置。</li>\n<li><strong>缩放方向处理</strong><br />\n通过 <code>deltaY</code>  判断滚轮方向，结合 <code>ctrlKey</code>  处理快捷键</li>\n<li><strong>位置补偿计算</strong><br />\n <code>pointer - mousePointTo * newScale</code>  实现视觉位置的确定，确保缩放后鼠标点对应的内容位置不变。</li>\n</ol>\n<figure class=\"highlight tsx\"><figcaption data-lang=\"React TSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 处理鼠标滚轮缩放</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> handleWheel <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> KonvaEventObject<span class=\"token operator\">&lt;</span>WheelEvent<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 1. 阻止原来的默认滚动事件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        e<span class=\"token punctuation\">.</span>evt<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">const</span> stage <span class=\"token operator\">=</span> stageRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>stage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stage<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 2. 获取当前的缩放状态</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">const</span> oldScale <span class=\"token operator\">=</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">const</span> pointer <span class=\"token operator\">=</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">getPointerPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pointer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 3. 计算鼠标点在内容坐标系的真实位置</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">const</span> mousePointTo <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            x<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> oldScale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            y<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>pointer<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> stage<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> oldScale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 4. 确定缩放方向和比例</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">let</span> direction <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>evt<span class=\"token punctuation\">.</span>deltaY <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 如果按住 Ctrl 键，反转方向</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>evt<span class=\"token punctuation\">.</span>ctrlKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            direction <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>direction<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">const</span> scaleBy <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 每次缩放的比例</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">let</span> newScale <span class=\"token operator\">=</span> direction <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> oldScale <span class=\"token operator\">*</span> scaleBy <span class=\"token operator\">:</span> oldScale <span class=\"token operator\">/</span> scaleBy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// 5. 限制缩放比例</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        newScale <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> newScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// 更新缩放比例</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        stage<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> x<span class=\"token operator\">:</span> newScale<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> newScale <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">// 计算新的偏移量</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">const</span> newPos <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            x<span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> mousePointTo<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> newScale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            y<span class=\"token operator\">:</span> pointer<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> mousePointTo<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> newScale<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 应用变换</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        stage<span class=\"token punctuation\">.</span><span class=\"token function\">position</span><span class=\"token punctuation\">(</span>newPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"可视化理解\"><a class=\"anchor\" href=\"#可视化理解\">#</a> 可视化理解</h2>\n<p>假设：</p>\n<ul>\n<li>当前缩放： <code>1x</code></li>\n<li>画布偏移： <code>(0, 0)</code></li>\n<li>鼠标位置： <code>(500, 300)</code> <br />\n 当放大到 <code>2x</code>  时：</li>\n</ul>\n<ol>\n<li>计算原始内容位置</li>\n</ol>\n<pre><code>(500 - 0) / 1 = 500\n(300 - 0) / 1 = 300\n</code></pre>\n<ol start=\"2\">\n<li>计算新偏移量</li>\n</ol>\n<pre><code>newX = 500 - 500 * 2 = -500\nnewY = 300 - 300 * 2 = -300\n</code></pre>\n<ol start=\"3\">\n<li>结果：内容向左上角偏移，是的原中心点保持可见</li>\n</ol>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>通过坐标系转换和数学关系，实现了以鼠标为中心的精准画布缩放。</p>\n<hr />\n<p>完整项目代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F5bnlhL0RuaU1hcA==\">https://github.com/aynya/DniMap</span></p>\n",
            "tags": [
                "canvas",
                "React",
                "konva",
                "canvas"
            ]
        },
        {
            "id": "https://aynya.github.io/js%E8%A7%A3%E8%AE%B0/",
            "url": "https://aynya.github.io/js%E8%A7%A3%E8%AE%B0/",
            "title": "js解记",
            "date_published": "2025-04-06T02:26:15.000Z",
            "content_html": "<h1 id=\"实现objectassign和completeassign\"><a class=\"anchor\" href=\"#实现objectassign和completeassign\">#</a> 实现 Object.assign () 和 completeAssign ()</h1>\n<h2 id=\"objectassign\"><a class=\"anchor\" href=\"#objectassign\">#</a> Object.assign()</h2>\n<p><code>Object.assign()</code>  方法用于将所有<strong>源对象的可枚举属性</strong>，复制到目标对象。它将返回目标对象。</p>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<p><code>Object.assign(target, ...sources)</code></p>\n<h3 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> returnedTarget <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123; a: 1, b: 4, c: 5 &#125;</span></pre></td></tr></table></figure><h3 id=\"手写实现\"><a class=\"anchor\" href=\"#手写实现\">#</a> 手写实现</h3>\n<p>使用 <code>for...of</code>  循环遍历 <code>sources</code>  数组，然后使用 <code>Object.keys()</code>  和 <code>Object.getOwnPropertySymbols()</code>  获取 <code>source</code>  对象的可枚举属性和 <code>symbol</code>  类型的属性。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">objectAssign</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>sources</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> target <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   target <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> source <span class=\"token keyword\">of</span> sources<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> source <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertySymbols</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取 symbol 的 key</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> source</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">of</span> keys<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"completeassign\"><a class=\"anchor\" href=\"#completeassign\">#</a> completeAssign()</h2>\n<p><code>completeAssign()</code>  处理的是可枚举属性和 <code>symbol</code>  类型的属性， <code>getters</code>  不会被复制，不可枚举属性被忽略。</p>\n<h3 id=\"示例-2\"><a class=\"anchor\" href=\"#示例-2\">#</a> 示例</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> source <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token comment\">// prototype</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 可枚举 data descriptor</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">c</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不可枚举 data descriptor</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">d</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 不可枚举 accessor descriptor </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_d <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">e</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 可枚举 accessor descriptor </span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_e <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token literal-property property\">enumerable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">completeAssign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// &#123;b: 4, c: 5&#125;</span></pre></td></tr></table></figure><h3 id=\"手写实现-2\"><a class=\"anchor\" href=\"#手写实现-2\">#</a> 手写实现</h3>\n<p>使用 <code>Object.getOwnPropertyDescriptors()</code>  获取 <code>source</code>  对象的所有属性描述符。再使用 <code>Object.defineProperties()</code>  设置 <code>target</code>  对象的属性描述符。最后遍历 <code>source</code>  对象的 <code>symbol</code>  类型的属性，设置 <code>target</code>  对象的属性。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">completeAssign</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>sources</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'11'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  target <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> source <span class=\"token keyword\">of</span> sources<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    source <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperties</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptors</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取到特有的</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertySymbols</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// Symbol 属性</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"实现clearalltimeout\"><a class=\"anchor\" href=\"#实现clearalltimeout\">#</a> 实现 clearAllTimeout ()</h1>\n<p><code>clearAllTimeout()</code>  方法用于清除所有的 <code>setTimeout()</code>  定时器。</p>\n<h3 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现</h3>\n<p>开多个定时器，然后依次清除。总能清除所有定时器。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">clearAllTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    id <span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"实现async-helper-sequence-parallel\"><a class=\"anchor\" href=\"#实现async-helper-sequence-parallel\">#</a> 实现 async helper -  <code>sequence()</code>  &amp;  <code>parallel()</code></h1>\n<h2 id=\"parallel\"><a class=\"anchor\" href=\"#parallel\">#</a> parallel</h2>\n<p><code>sequence()</code>  方法用于将异步函数串行化，依次执行异步函数，并返回一个函数，该函数接受一个回调函数作为参数。</p>\n<h3 id=\"代码实现-2\"><a class=\"anchor\" href=\"#代码实现-2\">#</a> 代码实现</h3>\n<ol>\n<li>定义 <code>promisify()</code>  方法，将异步函数转换为 Promise 对象。</li>\n<li>使用 <code>Promise.resolve()</code>  将输入转换为 Promise 对象。</li>\n<li>然后开始链式调用，每次返回的值作为下一个异步函数的输入。</li>\n<li>最后解决时调用回调函数。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>type Callback = (error: Error, data: any) => void</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>type AsyncFunc = (</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   callback: Callback,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   data: any</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>) => void</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @param &#123;AsyncFunc[]&#125; funcs</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @return &#123;(callback: Callback) => void&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">sequence</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">const</span> promiseFuncs <span class=\"token operator\">=</span> funcs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>promisify<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token punctuation\">,</span> input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">let</span> promise <span class=\"token operator\">=</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    promiseFuncs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promiseFunc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      promise <span class=\"token operator\">=</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>promiseFunc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fun</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> newData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"parallel-2\"><a class=\"anchor\" href=\"#parallel-2\">#</a> parallel()</h2>\n<p><code>parallel()</code>  方法用于将异步函数并行化，同时执行异步函数，并返回一个函数，该函数接受一个回调函数作为参数。</p>\n<h3 id=\"代码实现-3\"><a class=\"anchor\" href=\"#代码实现-3\">#</a> 代码实现</h3>\n<ol>\n<li>定义 <code>promisify()</code>  方法，将异步函数转换为 Promise 对象。</li>\n<li>使用 <code>Promise.all()</code>  将异步函数并行执行，并返回一个 Promise 对象。</li>\n<li>最后解决时调用回调函数。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>type Callback = (error: Error, data: any) => void</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>type AsyncFunc = (</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   callback: Callback,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   data: any</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>) => void</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @param &#123;AsyncFunc[]&#125; funcs</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @return &#123;(callback: Callback) => void&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">// const promisiFuncs = funcs.map(promisify);</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token punctuation\">,</span> input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>funcs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span> <span class=\"token operator\">=></span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fun</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> newData</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"实现async-helper-race\"><a class=\"anchor\" href=\"#实现async-helper-race\">#</a> 实现 async helper -  <code>race()</code></h1>\n<h2 id=\"race\"><a class=\"anchor\" href=\"#race\">#</a> race()</h2>\n<p><code>race()</code>  方法会在任何一个 function 结束或者产生 error 的时候调用最终的 callback。</p>\n<h2 id=\"代码实现-4\"><a class=\"anchor\" href=\"#代码实现-4\">#</a> 代码实现</h2>\n<ol>\n<li>为每个 function 都添加一个 flag，如果 flag 为 true，则不再执行后续的 function。</li>\n<li>使用 <code>forEach()</code>  遍历每个 function，并调用其函数。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>type Callback = (error: Error, data: any) => void</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>type AsyncFunc = (</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   callback: Callback,</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   data: any</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>) => void</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @param &#123;AsyncFunc[]&#125; funcs</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @return &#123;(callback: Callback) => void&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">callback<span class=\"token punctuation\">,</span> input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">let</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fun</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> func <span class=\"token keyword\">of</span> funcs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"实现promiseall\"><a class=\"anchor\" href=\"#实现promiseall\">#</a> 实现 <code>Promise.all()</code></h1>\n<h2 id=\"promiseall\"><a class=\"anchor\" href=\"#promiseall\">#</a> Promise.all()</h2>\n<p><code>Promise.all()</code>  方法用于将多个 Promise 对象组合为一个新的 Promise 对象，并返回一个 Promise 对象。该 Promise 对象在传入的所有 Promise 对象都成功时才会成功，一旦有一个 Promise 对象失败，则立即返回一个失败的 Promise 对象。</p>\n<h2 id=\"代码实现-5\"><a class=\"anchor\" href=\"#代码实现-5\">#</a> 代码实现</h2>\n<ol>\n<li>通过一个数组存储每个 Promise 完成后的结果</li>\n<li>调用 <code>Promise.resolve()</code>  将输入转换为 Promise 对象。</li>\n<li>使用 <code>.then(onfulfilled, onrejected)</code>  当 Promise 成功时调用 onfulfilled，当 Promise 失败时调用 onrejected。也就直接 reject 出去了</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Array&lt;any>&#125; promises - notice input might have non-Promises</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Promise&lt;any[]>&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promises</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>promises<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> promises<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> promises<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">===</span> promises<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<h1 id=\"实现promiseallsettled\"><a class=\"anchor\" href=\"#实现promiseallsettled\">#</a> 实现 <code>Promise.allSettled()</code></h1>\n<h2 id=\"promiseallsettled\"><a class=\"anchor\" href=\"#promiseallsettled\">#</a> Promise.allSettled()</h2>\n<p><code>Promise.allSettled()</code>  方法返回一个在所有给定的 <code>promise</code>  都已经 <code>fulfilled</code>  或 <code>rejected</code>  后的 <code>promise</code> ，并带有一个对象数组，每个对象表示对应的 <code>promise</code>  结果。</p>\n<h3 id=\"示例-3\"><a class=\"anchor\" href=\"#示例-3\">#</a> 示例</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">allSettled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">99</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一个错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">values</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// [</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//   &#123; status: 'fulfilled', value: 33 &#125;,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//   &#123; status: 'fulfilled', value: 66 &#125;,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//   &#123; status: 'fulfilled', value: 99 &#125;,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">//   &#123;status: 'rejected', reason: Error: 一个错误&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// ]</span></pre></td></tr></table></figure><h2 id=\"代码实现-6\"><a class=\"anchor\" href=\"#代码实现-6\">#</a> 代码实现</h2>\n<ol>\n<li>通过一个数组存储每个 Promise 完成后的结果</li>\n<li>注意数组中存储的是 <code>resolve</code>  和 <code>reject</code>  后的结果，所以需要分别处理。</li>\n<li>使用 <code>.finally()</code>  方法，当 Promise 完成时调用，并返回一个 Promise 对象。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Array&lt;any>&#125; promises - notice that input might contains non-promises</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Promise&lt;Array&lt;&#123;status: 'fulfilled', value: any&#125; | &#123;status: 'rejected', reason: any&#125;>>&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">allSettled</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promises</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">let</span> results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>promises<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> promises<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> promises<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token string\">'fulfilled'</span><span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reason</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token string\">'rejected'</span><span class=\"token punctuation\">,</span> reason <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">finally</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          idx <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">===</span> promises<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<h1 id=\"实现promiseany\"><a class=\"anchor\" href=\"#实现promiseany\">#</a> 实现 <code>Promise.any()</code></h1>\n<h2 id=\"promiseany\"><a class=\"anchor\" href=\"#promiseany\">#</a> Promise.any()</h2>\n<p><code>Promise.any()</code>  接收一个 <code>Promise</code>  可迭代对象，只要其中的一个  <code>promise</code>  成功，就返回那个已经成功的  <code>promise</code>  。如果可迭代对象中没有一个  <code>promise</code>  成功（即所有的  <code>promises</code>  都失败 / 拒绝），就返回一个失败的  <code>promise</code>  和 <code>AggregateError</code>  类型的实例，它是  <code>Error</code>  的一个子类，用于把单一的错误集合在一起。本质上，这个方法和 <code>Promise.all()</code>  是相反的。</p>\n<h2 id=\"代码实现-7\"><a class=\"anchor\" href=\"#代码实现-7\">#</a> 代码实现</h2>\n<ol>\n<li>数组存储每个 <code>promise</code>  失败的原因。</li>\n<li>使用 <code>.catch()</code>  方法，当 Promise 全部失败时调用，并返回一个 Promise 对象包含 <code>AggregateError</code> 。</li>\n<li>当有一个 <code>promise</code>  成功时直接 <code>resolve</code>  掉</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Array&lt;Promise>&#125; promises</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Promise&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promises</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// your code here</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">let</span> results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> promises<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> promises<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      promise</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          results<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          idx <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">===</span> promises<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AggregateError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "js",
                "js"
            ]
        },
        {
            "id": "https://aynya.github.io/%E7%94%A8Cookie-HttpOnly%E5%AE%9E%E7%8E%B0%E5%8F%8CToken%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%BB%91%E5%8A%A8%E5%88%B7%E6%96%B0/",
            "url": "https://aynya.github.io/%E7%94%A8Cookie-HttpOnly%E5%AE%9E%E7%8E%B0%E5%8F%8CToken%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%BB%91%E5%8A%A8%E5%88%B7%E6%96%B0/",
            "title": "用Cookie+HttpOnly实现双Token认证与滑动刷新",
            "date_published": "2025-04-03T15:21:04.000Z",
            "content_html": "<h1 id=\"用-cookiehttponly-实现双-token-认证与滑动刷新\"><a class=\"anchor\" href=\"#用-cookiehttponly-实现双-token-认证与滑动刷新\">#</a> 用 Cookie+HttpOnly 实现双 Token 认证与滑动刷新</h1>\n<h2 id=\"为什么需要双-token-方案\"><a class=\"anchor\" href=\"#为什么需要双-token-方案\">#</a> 为什么需要双 Token 方案？</h2>\n<p>传统单 Token 方案面临两大痛点：</p>\n<ol>\n<li><strong>安全风险</strong> - Token 泄露等于永久入侵</li>\n<li><strong>体验问题</strong> - 频繁重新登录影响用户体验</li>\n</ol>\n<p>双 Token 方案完美解决：</p>\n<ul>\n<li>🛡️ <strong>Access Token（短时效）</strong>：15-30 分钟有效期，降低被盗风险</li>\n<li>🔄 <strong>Refresh Token（长时效）</strong>：7-30 天有效期，静默刷新会话</li>\n</ul>\n<h2 id=\"技术选型\"><a class=\"anchor\" href=\"#技术选型\">#</a> 技术选型</h2>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>方案</th>\n<th>优势说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Access Token</td>\n<td>JWT + localStorage</td>\n<td>方便前端使用，自动过期</td>\n</tr>\n<tr>\n<td>Refresh Token</td>\n<td>HttpOnly Cookie</td>\n<td>防止 XSS 窃取，服务端可控</td>\n</tr>\n<tr>\n<td>加密算法</td>\n<td>bcrypt</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现核心流程\"><a class=\"anchor\" href=\"#实现核心流程\">#</a> 实现核心流程</h2>\n<pre><code>🔑 认证流程全解析（→ 表示请求，← 表示响应）\n\n1. 【登录阶段】\n用户 → 前端：提交账号密码\n前端 → 后端：POST /login\n后端 ← 前端：\n   │ HTTP Status 200\n   ├─ Headers: Set-Cookie: refreshToken=xxx; HttpOnly\n   └─ Body: &#123; &quot;accessToken&quot;: &quot;jwt_token&quot; &#125;\n\n2. 【正常请求】\n用户 → 前端：发起数据请求\n前端 → 后端：\n   │ Headers: Authorization: Bearer accessToken\n   ├─ 请求敏感数据\n后端 ← 前端：\n   │ HTTP Status 401（Token过期）\n   └─ Body: &#123; &quot;error&quot;: &quot;Token expired&quot; &#125;\n\n3. 【自动刷新】\n前端 → 后端：POST /refresh-token\n   │ 自动携带 Cookie: refreshToken=xxx\n后端 ← 前端：\n   │ HTTP Status 200\n   └─ Body: &#123; &quot;accessToken&quot;: &quot;new_jwt_token&quot; &#125;\n\n4. 【重试请求】\n前端 → 后端：重新发送原始请求\n   │ Headers: Authorization: Bearer new_jwt_token\n后端 ← 前端：\n   │ HTTP Status 200\n   └─ Body: 请求数据\n</code></pre>\n<h2 id=\"核心代码实现\"><a class=\"anchor\" href=\"#核心代码实现\">#</a> 核心代码实现</h2>\n<h3 id=\"后端关键代码\"><a class=\"anchor\" href=\"#后端关键代码\">#</a> 后端关键代码</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 登录接口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\">//... 验证用户名密码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// 生成双 Token</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> accessToken <span class=\"token operator\">=</span> <span class=\"token function\">generateAccessToken</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> refreshToken <span class=\"token operator\">=</span> <span class=\"token function\">generateRefreshToken</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 设置 HttpOnly Cookie（注意安全配置！）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshToken'</span><span class=\"token punctuation\">,</span> refreshToken<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">sameSite</span><span class=\"token operator\">:</span> <span class=\"token string\">'lax'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token comment\">// 7 天</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> accessToken <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 刷新接口</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/refresh'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">const</span> refreshToken <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>refreshToken<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自动携带</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> <span class=\"token function\">verifyRefreshToken</span><span class=\"token punctuation\">(</span>refreshToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">const</span> newAccessToken <span class=\"token operator\">=</span> <span class=\"token function\">generateAccessToken</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">accessToken</span><span class=\"token operator\">:</span> newAccessToken <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    res<span class=\"token punctuation\">.</span><span class=\"token function\">clearCookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshToken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"前端拦截器\"><a class=\"anchor\" href=\"#前端拦截器\">#</a> 前端拦截器</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//axios 实例</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token constant\">API_URL</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 关键配置！</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 响应拦截器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>api<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">const</span> originalRequest <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">401</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>originalRequest<span class=\"token punctuation\">.</span>_retry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    originalRequest<span class=\"token punctuation\">.</span>_retry <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/refresh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'accessToken'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>accessToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">api</span><span class=\"token punctuation\">(</span>originalRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"避坑指南\"><a class=\"anchor\" href=\"#避坑指南\">#</a> 避坑指南🚨</h2>\n<ol>\n<li><strong>CORS 配置</strong>：未启用 CORS 凭证</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 后端必须配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 关键！</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>Cookie 参数</strong>：Cookie 参数配置错误</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>res<span class=\"token punctuation\">.</span><span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshToken'</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生产环境必须 true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">sameSite</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'lax'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>缺少 cookie-parser 中间件</strong></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> cookie-parser</pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> cookieParser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cookie-parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cookieParser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li><strong>前端请求头</strong>：前端请求头配置错误</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//axios 配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr></table></figure><h2 id=\"滑动刷新refreshtoken实现\"><a class=\"anchor\" href=\"#滑动刷新refreshtoken实现\">#</a> 滑动刷新 refreshToken 实现</h2>\n<p><strong>什么是滑动刷新机制？</strong><br />\n滑动刷新机制是指在用户执行某些关键操作（如进入房间、提交表单等）时，服务器会检查并更新 refreshToken 的有效期。这样可以确保用户在一段时间内保持活跃状态，而不会因为 refreshToken 过期而被迫重新登录。</p>\n<ol>\n<li><strong>从请求中获取 refreshToken</strong></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> refreshTokenFromCookie <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>refreshToken<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>refreshTokenFromCookie<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'刷新令牌缺失！'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>验证 refreshToken 是否有效</strong></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> <span class=\"token function\">verifyRefreshToken</span><span class=\"token punctuation\">(</span>refreshTokenFromCookie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>decoded<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'无效的刷新令牌！'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'验证刷新令牌失败！'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>生成新的 refreshToken 并设置到 Cookie</strong><br />\n 这里的 <code>config.jwtRefreshTokenExpiry</code>  是配置文件中的刷新令牌有效期，单位为秒。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">userId</span><span class=\"token operator\">:</span> decoded<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nickname</span><span class=\"token operator\">:</span> decoded<span class=\"token punctuation\">.</span>nickname <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> newRefreshToken <span class=\"token operator\">=</span> <span class=\"token function\">generateRefreshToken</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> jwtExpiryInSeconds <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>jwtRefreshTokenExpiry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> cookieMaxAge <span class=\"token operator\">=</span> jwtExpiryInSeconds <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>res<span class=\"token punctuation\">.</span><span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'refreshToken'</span><span class=\"token punctuation\">,</span> newRefreshToken<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">httpOnly</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">secure</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">sameSite</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'lax'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">domain</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'.yourdomain.com'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token literal-property property\">maxAge</span><span class=\"token operator\">:</span> cookieMaxAge<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>通过 HttpOnly Cookie + JWT 的双 Token 方案，我们实现了：</p>\n<ul>\n<li>✅ 更高的安全性（防 XSS 窃取）</li>\n<li>✅ 无缝的用户体验（静默刷新）</li>\n<li>✅ 灵活的控制能力（强制下线、设备管理）</li>\n</ul>\n<p>完整代码 <a href=\"\">https://github.com/aynya/VoiceChat</a></p>\n",
            "tags": [
                "React",
                "React",
                "Node.js",
                "Cookie",
                "HttpOnly",
                "JWT",
                "Token"
            ]
        },
        {
            "id": "https://aynya.github.io/%E8%81%8A%E5%A4%A9%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E8%B7%B3%E8%BD%AC/",
            "url": "https://aynya.github.io/%E8%81%8A%E5%A4%A9%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E8%B7%B3%E8%BD%AC/",
            "title": "聊天历史记录跳转",
            "date_published": "2025-04-01T15:38:09.000Z",
            "content_html": "<h3 id=\"前置\"><a class=\"anchor\" href=\"#前置\">#</a> 前置</h3>\n<ol>\n<li>我们都知道，聊天记录是滚动的，所以，我们需要知道滚动条的位置，然后，通过滚动条的位置，来定位到聊天记录的位置。</li>\n<li>聊天记录的  <code>flex-direction</code>  是 <code>column-reverse</code>  的，所以最底下的 <code>container.scrollTop</code>  为 0，上滑动减少</li>\n<li><code>getBoundingClientRect</code>  可以获取到元素的位置，包括 <code>top</code> 、 <code>bottom</code> 、 <code>left</code> 、 <code>right</code>  等。这些都是相对于视口的位置。</li>\n</ol>\n<h3 id=\"代码\"><a class=\"anchor\" href=\"#代码\">#</a> 代码</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Scroll to Message Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      body <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        font<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> Arial<span class=\"token punctuation\">,</span> sans<span class=\"token operator\">-</span>serif<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      #message<span class=\"token operator\">-</span>container <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        flex<span class=\"token operator\">-</span>direction<span class=\"token operator\">:</span> column<span class=\"token operator\">-</span>reverse<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 反向排列 */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> 400px<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 固定高度 */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        overflow<span class=\"token operator\">-</span>y<span class=\"token operator\">:</span> auto<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 垂直滚动 */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid #ccc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 16px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        box<span class=\"token operator\">-</span>sizing<span class=\"token operator\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> #f0f0f0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 8px 12px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        margin<span class=\"token operator\">-</span>bottom<span class=\"token operator\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        border<span class=\"token operator\">-</span>radius<span class=\"token operator\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">.</span>highlight<span class=\"token operator\">-</span>message <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        background<span class=\"token operator\">-</span>color<span class=\"token operator\">:</span> yellow <span class=\"token operator\">!</span>important<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 高亮样式 */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Scroll to Message Example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"message-container\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 消息列表 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>Oldest<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">3</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"4\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"5\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">5</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"6\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">6</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"7\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">7</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"8\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">8</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"9\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">9</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"10\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">10</span> <span class=\"token punctuation\">(</span>Newest<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"11\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">11</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"12\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">12</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"13\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">13</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"14\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">14</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"15\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">15</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"16\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">16</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"17\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">17</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"message\"</span> data<span class=\"token operator\">-</span>message<span class=\"token operator\">-</span>id<span class=\"token operator\">=</span><span class=\"token string\">\"18\"</span><span class=\"token operator\">></span>Message <span class=\"token number\">18</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token operator\">&lt;</span>button onclick<span class=\"token operator\">=</span><span class=\"token string\">\"scrollToMessage(18)\"</span><span class=\"token operator\">></span>Scroll to Message <span class=\"token number\">18</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token keyword\">function</span> <span class=\"token function\">scrollToMessage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">messageId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">const</span> targetElement <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[data-message-id=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>messageId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>targetElement<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>          <span class=\"token comment\">// 获取容器和目标元素的位置信息</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>          <span class=\"token keyword\">const</span> containerRect <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 文本矩形相对于视口的信息</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>          <span class=\"token keyword\">const</span> elementRect <span class=\"token operator\">=</span> targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 目标元素相对于视口的矩形信息</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>containerRect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> elementRect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>          <span class=\"token comment\">// 计算需要滚动的距离（考虑反向滚动）</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>          <span class=\"token keyword\">const</span> scrollOffset <span class=\"token operator\">=</span> elementRect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> containerRect<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>          <span class=\"token keyword\">const</span> containerCenter <span class=\"token operator\">=</span> containerRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>containerRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>          <span class=\"token keyword\">const</span> targetScrollTop <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            container<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">+</span> scrollOffset <span class=\"token operator\">-</span> containerCenter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>          <span class=\"token comment\">// 执行平滑滚动</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>          container<span class=\"token punctuation\">.</span><span class=\"token function\">scrollTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token literal-property property\">top</span><span class=\"token operator\">:</span> targetScrollTop<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token literal-property property\">behavior</span><span class=\"token operator\">:</span> <span class=\"token string\">\"smooth\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>          <span class=\"token comment\">// 高亮逻辑</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>          targetElement<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"highlight-message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>          <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> targetElement<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"highlight-message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>          console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Message with ID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>messageId<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> not found.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"图解\"><a class=\"anchor\" href=\"#图解\">#</a> 图解</h3>\n<pre><code>[目标消息]                    target\n\n\n+-----------------------------+\n| 视口顶部                     |\n|                             |\n| [旧消息] &lt;-- 容器顶部   container    |\n| [消息2]                     |\n| [消息3]                     |\n| ...                         |\n| [目标消息]                target |\n| ...                         |\n| [新消息] &lt;-- 容器底部        |\n|                             |\n| 视口底部                     |\n+-----------------------------+\n</code></pre>\n<p>这里的 <code>target</code>  和 <code>container</code>  是容器和消息相对于视口顶部的距离，也就是 <code>container.getBoundingClientRect();</code>  和 <code>targetElement.getBoundingClientRect();</code>  的 <code>top</code>  值。<br />\n用目标的值减去容器的值，就是需要滚动的距离。<br />\n <code>container.scrollTop + target - container</code>  就可以得到把目标元素滚进容器内的滚动条的位置。<br />\n但是我们需要放在中间，所以，需要减去容器的中间位置。也就是减去 <code>containerRect.height / 2;</code> <br />\n 当然，目标消息在视口上方时， <code>getBoundingClientRect</code>  的 <code>top</code>  值是负数，操作也是一样的。<br />\n由此可得，这个解具有普遍性</p>\n",
            "tags": [
                "js",
                "chat",
                "js",
                "scroll"
            ]
        },
        {
            "id": "https://aynya.github.io/a-small-SocketIo-WebRTC-Demo/",
            "url": "https://aynya.github.io/a-small-SocketIo-WebRTC-Demo/",
            "title": "a small SocketIo+WebRTC Demo",
            "date_published": "2025-03-24T03:22:26.000Z",
            "content_html": "<h1 id=\"基于socketio和webrtc的实时语音聊天室demo版本\"><a class=\"anchor\" href=\"#基于socketio和webrtc的实时语音聊天室demo版本\">#</a> 基于 Socket.IO 和 WebRTC 的实时语音聊天室 (Demo 版本)</h1>\n<h2 id=\"功能亮点\"><a class=\"anchor\" href=\"#功能亮点\">#</a> 功能亮点</h2>\n<ul>\n<li>🎙️ 实时语音通话（P2P 直连）</li>\n<li>💬 文字消息群聊（房间隔离）</li>\n<li>🚪 动态房间管理</li>\n<li>🌐 自动 NAT 穿透（STUN 服务）</li>\n</ul>\n<h2 id=\"技术栈\"><a class=\"anchor\" href=\"#技术栈\">#</a> 技术栈</h2>\n<table>\n<thead>\n<tr>\n<th>技术</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL1NvY2tldC5JTw==\">Socket.IO</span></td>\n<td>信令服务器 / 消息中转</td>\n</tr>\n<tr>\n<td>WebRTC</td>\n<td>音视频 P2P 通信</td>\n</tr>\n<tr>\n<td>React</td>\n<td>前端界面框架</td>\n</tr>\n<tr>\n<td>Node.js</td>\n<td>后端服务</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h2 id=\"快速开始\"><a class=\"anchor\" href=\"#快速开始\">#</a> 快速开始</h2>\n<h3 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 前端依赖</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> socket.io-client react react-dom</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 后端依赖</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express socket.io cors</pre></td></tr></table></figure><h3 id=\"代码解析\"><a class=\"anchor\" href=\"#代码解析\">#</a> 代码解析</h3>\n<h4 id=\"系统架构图\"><a class=\"anchor\" href=\"#系统架构图\">#</a> 系统架构图</h4>\n<pre><code>  +----------------+      信令交互       +----------------+\n  |  浏览器客户端  | ←—— Socket.IO ——→ |  信令服务器     |\n  +----------------+                    +----------------+\n        ▲                                   |\n        | WebRTC媒体流（P2P直连）            |\n        ▼                                   ▼\n  +----------------+                    +----------------+\n  |  其他客户端     | ←—— WebRTC ————→ |  其他客户端      |\n  +----------------+                    +----------------+\n</code></pre>\n<h4 id=\"服务端核心逻辑serverjs\"><a class=\"anchor\" href=\"#服务端核心逻辑serverjs\">#</a> 服务端核心逻辑 (server.js)</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 房间管理中间件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'join-room'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">roomId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    socket<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Socket.IO 内置房间管理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-connected'</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// ICE 候选转发管道</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> targetId<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>targetId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">senderId</span><span class=\"token operator\">:</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"服务器初始化\"><a class=\"anchor\" href=\"#服务器初始化\">#</a> 服务器初始化</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> io <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token literal-property property\">cors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">origin</span><span class=\"token operator\">:</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>功能</strong>：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1IVFRQU29ja2V0LTB1MXFtNGNtMTFiZm52bnliYzQ1ZHFkNWRxOTBhdDc0ZS5JTw==\">创建基础 HTTP 服务并配置 Socket.IO</span><br />\n<strong> 关键配置</strong>：</p>\n<ul>\n<li><code>cors</code>  中间件用于解决跨域问题，允许任何来源的请求访问服务器</li>\n<li><code>origin: &quot;*&quot;</code>  允许任何来源的请求访问服务器</li>\n<li>指定使用 WebSocket 传输 (默认包含轮询备用)</li>\n</ul>\n<h4 id=\"连接管理\"><a class=\"anchor\" href=\"#连接管理\">#</a> 连接管理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>io<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connection'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">socket</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">用户 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>socket<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> 已连接</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 后续事件监听代码...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>功能</strong>：处理客户端连接事件<br />\n<strong>生命周期</strong>：</p>\n<ul>\n<li>客户端连接时自动触发</li>\n<li>每个 <code>socket</code>  对象代表一个独立客户端连接</li>\n<li><code>socket.id</code>  是自动生成的唯一标识符，用于标识每个客户端连接</li>\n</ul>\n<h4 id=\"房间管理\"><a class=\"anchor\" href=\"#房间管理\">#</a> 房间管理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'join-room'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">roomId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 加入指定房间</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  socket<span class=\"token punctuation\">.</span>roomId <span class=\"token operator\">=</span> roomId<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 存储房间号到 socket 对象</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myId'</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回客户端 ID</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-connected'</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 广播新人加入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>核心方法</strong>：</p>\n<ul>\n<li><code>socket.join(roomId)</code> ：Socket.IO 内置房间管理。</li>\n<li><code>socket.to(roomId).emit()</code> ：向指定房间广播消息<br />\n<strong>数据流</strong>：</li>\n</ul>\n<pre><code>客户端A --join-room--&gt; 服务端\n服务端 --&gt; 客户端A：发送myId\n服务端 --&gt; 房间其他客户端：发送user-connected\n</code></pre>\n<h4 id=\"信令转发\"><a class=\"anchor\" href=\"#信令转发\">#</a> 信令转发</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> targetId<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>targetId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">senderId</span><span class=\"token operator\">:</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    signal </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>功能</strong>：中转 WebRTC 连接信令<br />\n<strong>场景</strong>：</p>\n<ul>\n<li>转发 Offer/Answer 信令</li>\n<li>转发 ICE 候选信令<br />\n<strong>路由逻辑</strong>：</li>\n</ul>\n<pre><code>客户端A --signal--&gt; 服务端 --&gt; 客户端B\n</code></pre>\n<h4 id=\"聊天消息管理\"><a class=\"anchor\" href=\"#聊天消息管理\">#</a> 聊天消息管理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chat message'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  io<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chat message'</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>广播机制</strong>：</p>\n<ul>\n<li><code>io.to(socket.roomId).emit('chat message', msg);</code> ：向指定房间广播消息</li>\n<li>保证消息仅在房间内传播</li>\n</ul>\n<h4 id=\"断开连接处理\"><a class=\"anchor\" href=\"#断开连接处理\">#</a> 断开连接处理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disconnect'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>roomId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    socket<span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>roomId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-disconnected'</span><span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>触发场景</strong>：</p>\n<ul>\n<li>用户主动关闭网页</li>\n<li>网络断开</li>\n<li>手动刷新</li>\n</ul>\n<h4 id=\"客户端核心逻辑appjs\"><a class=\"anchor\" href=\"#客户端核心逻辑appjs\">#</a> 客户端核心逻辑 (App.js)</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// WebRTC 连接管理器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPeerConnection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">targetId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> pc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCPeerConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">iceServers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token string\">'stun:stun.l.google.com:19302'</span> <span class=\"token comment\">// Google 公共 STUN 服务器</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">// 添加本地音频轨道</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  localStream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track</span> <span class=\"token operator\">=></span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    pc<span class=\"token punctuation\">.</span><span class=\"token function\">addTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span> localStream<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// 处理远程音频流</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontrack</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    remoteAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    remoteAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 兼容 iOS 自动播放限制</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"状态管理\"><a class=\"anchor\" href=\"#状态管理\">#</a> 状态管理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>messages<span class=\"token punctuation\">,</span> setMessages<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 消息列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">,</span> setMessage<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 输入框内容</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>myId<span class=\"token punctuation\">,</span> setMyId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 当前用户 ID</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>roomId<span class=\"token punctuation\">,</span> setRoomId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 房间号</span></pre></td></tr></table></figure><h4 id=\"音视频初始化\"><a class=\"anchor\" href=\"#音视频初始化\">#</a> 音视频初始化</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      localAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 其他初始化代码...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>关键 API</strong>：</p>\n<ul>\n<li><code>getUserMedia</code> ：获取用户媒体（音频 / 视频）</li>\n<li><code>srcObject</code> ：设置媒体流到 <code>&lt;audio&gt;</code>  元素<br />\n<strong>注意</strong>：</li>\n<li>需要 HTTPS 环境（localhost 除外）</li>\n<li>处理用户拒绝权限情况</li>\n</ul>\n<h4 id=\"webrtc连接管理\"><a class=\"anchor\" href=\"#webrtc连接管理\">#</a> WebRTC 连接管理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPeerConnection</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">targetId<span class=\"token punctuation\">,</span> isInitiator <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> pc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RTCPeerConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">iceServers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">urls</span><span class=\"token operator\">:</span> <span class=\"token string\">'stun:stun.l.google.com:19302'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// 添加本地音轨</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  localAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">track</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    pc<span class=\"token punctuation\">.</span><span class=\"token function\">addTrack</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">,</span> localAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 处理远程流</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontrack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    remoteAudioRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// ICE 候选处理</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onicecandidate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> targetId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>candidate<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// 发起方创建 Offer</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isInitiator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    pc<span class=\"token punctuation\">.</span><span class=\"token function\">createOffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">offer</span> <span class=\"token operator\">=></span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalDescription</span><span class=\"token punctuation\">(</span>offer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> targetId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> pc<span class=\"token punctuation\">.</span>localDescription <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>流程解析</strong>：<br />\n&lt;pre class=&quot;mermaid&quot;&gt;sequenceDiagram<br />\n 参与者 A-&gt;&gt; 参与者 A: 创建 PeerConnection<br />\n 参与者 A-&gt;&gt; 参与者 A: 添加本地音轨<br />\n参与者 A-&gt;&gt; 参与者 A: 设置 ontrack 回调<br />\n参与者 A-&gt;&gt;STUN: 获取 ICE 候选<br />\n参与者 A-&gt;&gt; 服务端：发送候选<br />\n服务端 -&gt;&gt; 参与者 B: 转发候选<br />\n参与者 B-&gt;&gt; 参与者 B: 处理候选 &lt;/pre&gt;</p>\n<h4 id=\"信令处理\"><a class=\"anchor\" href=\"#信令处理\">#</a> 信令处理</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleSignal</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> senderId<span class=\"token punctuation\">,</span> signal <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>peersRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">[</span>senderId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">createPeerConnection</span><span class=\"token punctuation\">(</span>senderId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> pc <span class=\"token operator\">=</span> peersRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">[</span>senderId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'offer'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">setRemoteDescription</span><span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">const</span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">createAnswer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">await</span> pc<span class=\"token punctuation\">.</span><span class=\"token function\">setLocalDescription</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">targetId</span><span class=\"token operator\">:</span> senderId<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">signal</span><span class=\"token operator\">:</span> answer <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 处理 answer 和 candidate...</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'信令处理失败:'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><strong>状态转换</strong>：</p>\n<pre><code>stable -&gt; have-local-offer -&gt; have-remote-offer -&gt; stable\n</code></pre>\n<h4 id=\"用户界面注意\"><a class=\"anchor\" href=\"#用户界面注意\">#</a> 用户界面注意</h4>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#123;/* 音频元素 */&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;localAudioRef&#125;</span> <span class=\"token attr-name\">autoPlay</span> <span class=\"token attr-name\">muted</span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>&#123;remoteAudioRef&#125;</span> <span class=\"token attr-name\">autoPlay</span> <span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p><strong>元素说明</strong>：</p>\n<ul>\n<li><code>localAudioRef</code> ：用于显示本地音频流</li>\n<li><code>remoteAudioRef</code> ：用于显示远程音频流</li>\n<li><code>autoPlay</code> ：自动播放音频流</li>\n<li><code>muted</code> ：静音本地音频流</li>\n</ul>\n<h4 id=\"代码细节总结\"><a class=\"anchor\" href=\"#代码细节总结\">#</a> 代码细节总结</h4>\n<ol>\n<li><strong>修改状态的扩展运算符和函数表达式</strong><br />\n在 <code>useEffect</code>  中使用扩展运算符会产生闭包陷阱，因为首次加载时， <code>messages</code>  数组为空，后续的 <code>setMessages</code>  操作会直接修改一个空的数组，而不会更新状态。因此，使用函数表达式来定义 <code>handleChatMessage</code>  函数，可以避免闭包陷阱。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 推荐</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChatMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token function\">setMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prev<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 不推荐</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChatMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token function\">setMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>messages<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>每次挂载结束都要断开 Socket.IO 连接</strong><br />\n如果不断开会导致重复连接，所以每次挂载结束都要断开 Socket.IO 连接。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'signal'</span><span class=\"token punctuation\">,</span> handleSignal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-connected'</span><span class=\"token punctuation\">,</span> handleUserConnected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-disconnected'</span><span class=\"token punctuation\">,</span> handleUserDisconnected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myId'</span><span class=\"token punctuation\">,</span> setMyId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      socket<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chat message'</span><span class=\"token punctuation\">,</span> handleChatMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"系统流程图\"><a class=\"anchor\" href=\"#系统流程图\">#</a> 系统流程图</h3>\n<p>&lt;pre class=&quot;mermaid&quot;&gt;sequenceDiagram<br />\nparticipant A as 用户 A<br />\nparticipant S as 服务端<br />\n participant B as 用户 B</p>\n<p>A-&gt;&gt;S: join-room(101)<br />\nS-&gt;&gt;A: myId(A)<br />\nS-&gt;&gt;B: user-connected(A)<br />\n B-&gt;&gt;B: 创建 PeerConnection<br />\nB-&gt;&gt;S: 发送 Offer<br />\nS-&gt;&gt;A: 转发 Offer<br />\nA-&gt;&gt;S: 发送 Answer<br />\nS-&gt;&gt;B: 转发 Answer<br />\nA-&gt;&gt;B: ICE 候选交换<br />\n B-&gt;&gt;A: ICE 候选交换<br />\n A-&gt;&gt;B: 语音流传输<br />\n A-&gt;&gt;S: 发送文字消息<br />\n S-&gt;&gt;B: 转发消息 &lt;/pre&gt;</p>\n<h3 id=\"使用步骤\"><a class=\"anchor\" href=\"#使用步骤\">#</a> 使用步骤</h3>\n<ol>\n<li><strong>启动后端服务：</strong></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><ol>\n<li><strong>启动前端应用：</strong></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> part1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><ol>\n<li><strong>打开多个浏览器窗口</strong><br />\n访问 <code>http://localhost:5173</code> ，在浏览器中输入房间 ID，点击 “加入房间” 按钮，即可进行实时语音聊天。</li>\n<li><strong>功能验证</strong><br />\n说话：能够听到自己的声音<br />\n输入文字发送：双方窗口同步显示消息<br />\n关闭窗口：对方收到断开通知</li>\n</ol>\n<h3 id=\"关键注意事项\"><a class=\"anchor\" href=\"#关键注意事项\">#</a> 关键注意事项</h3>\n<ol>\n<li><strong>麦克风权限问题</strong><br />\n需要在浏览器中允许麦克风权限，否则无法 发送语音。</li>\n<li><strong>本地开发限制</strong><br />\n确保 Socket.IO 服务端配置 CORS，允许跨域请求，否则无法正常通信。</li>\n<li><strong>NAT 穿透问题</strong><br />\n公共 STUN 服务器可能不稳定</li>\n</ol>\n<h3 id=\"常见问题排查\"><a class=\"anchor\" href=\"#常见问题排查\">#</a> 常见问题排查</h3>\n<table>\n<thead>\n<tr>\n<th>现象</th>\n<th>可能原因</th>\n<th>解决方案</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>无法听到对方声音</td>\n<td>未添加音频轨道</td>\n<td>检查 <code>pc.addTrack</code>  调用</td>\n</tr>\n<tr>\n<td>连接状态卡在 checking</td>\n<td>ICE 候选未交换成功</td>\n<td>检查 STUN 服务器可用性</td>\n</tr>\n<tr>\n<td>文字消息未广播</td>\n<td>未加入相同房间</td>\n<td>验证 <code>join-room</code>  事件处理</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"扩展优化建议\"><a class=\"anchor\" href=\"#扩展优化建议\">#</a> 扩展优化建议</h3>\n<ol>\n<li>增加房间状态显示：当前房间人数、房间列表等。</li>\n<li>优化 UI 体验：如加载动画、错误提示等。</li>\n<li>添加视频聊天功能：使用 WebRTC 的 <code>createOffer</code>  和 <code>createAnswer</code>  方法实现视频聊天。</li>\n</ol>\n<h2 id=\"技术补充2025-4-3更新\"><a class=\"anchor\" href=\"#技术补充2025-4-3更新\">#</a> 技术补充 (2025-4-3 更新)</h2>\n<ol>\n<li><strong>remoteAudioStream 的覆盖问题</strong><br />\n在当前代码中，pc.ontrack 事件会将接收到的远程音频流直接设置到 remoteAudioStream 状态中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontrack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">remoteAudioStream</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这会导致一个问题：当多个用户加入房间时，每次接收到新的远程音频流时，都会覆盖之前的  <code>remoteAudioStream</code> 。因此，最终只会有一个用户的音频流被播放，其他用户的音频流会被丢弃。</p>\n<ol start=\"2\">\n<li><strong>修改前端代码以支持多音频流</strong><br />\n将  <code>remoteAudioStream</code>  替换为  <code>remoteAudioStreams</code> ，并将其设计为一个对象，键为  <code>userId</code> ，值为对应的音频流。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">remoteAudioStreams</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 存储所有远程用户的音频流</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pc<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">ontrack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">remoteAudioStreams</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>remoteAudioStreams<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">[</span>targetId<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 将音频流与目标用户关联</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>修改 user-disconnected 处理：</strong><br />\n当用户断开连接时，从  <code>remoteAudioStreams</code>  中移除对应的音频流：</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>socket<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user-disconnected'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">userId</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> peersRef <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>peersRef<span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    peersRef<span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">delete</span> peersRef<span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token literal-property property\">peersRef</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span>state<span class=\"token punctuation\">.</span>peersRef <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token literal-property property\">users</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>users<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token literal-property property\">remoteAudioStreams</span><span class=\"token operator\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">fromEntries</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>remoteAudioStreams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">!==</span> userId<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li><strong>动态渲染多个 audio 元素</strong><br />\n当前的代码中只使用了一个  <code>remoteAudioStream</code> ，因此只会播放一个远程用户的音频流。如果要支持多个远程用户的音频流，需要将  <code>remoteAudioStream</code>  替换为一个数组或对象（例如  <code>remoteAudioStreams</code> ），并动态渲染多个  <code>audio</code>  元素来播放每个远程用户的音频流。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> useSocketStore <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AudioPlayers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> localAudioStream<span class=\"token punctuation\">,</span> remoteAudioStreams <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSocketStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 本地音频 */</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token operator\">&lt;</span>audio</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        ref<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ref <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> localAudioStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        autoPlay</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        muted</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 远程音频 */</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>remoteAudioStreams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>stream<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果音频流为空，跳过渲染</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token operator\">&lt;</span>audio</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            key<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>userId<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            ref<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ref <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            autoPlay</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AudioPlayers<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"补充总结\"><a class=\"anchor\" href=\"#补充总结\">#</a> 补充总结</h3>\n<ul>\n<li>🚀转远程音频流为远程音频流对象</li>\n<li>🚀动态渲染多个 audio 元素</li>\n</ul>\n<hr />\n<h3 id=\"完整代码获取\"><a class=\"anchor\" href=\"#完整代码获取\">#</a> 完整代码获取</h3>\n<p>访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F5bnlhL1ZvaWNlLUNoYXQtRGVtbw==\"> GitHub 仓库</span>，获取完整代码。</p>\n",
            "tags": [
                "Demo",
                "WebRTC",
                "SocketIo"
            ]
        },
        {
            "id": "https://aynya.github.io/webpack%E6%89%93%E5%8C%85/",
            "url": "https://aynya.github.io/webpack%E6%89%93%E5%8C%85/",
            "title": "webpack打包",
            "date_published": "2025-03-21T11:19:54.000Z",
            "content_html": "<h3 id=\"webpack是什么\"><a class=\"anchor\" href=\"#webpack是什么\">#</a> webpack 是什么？</h3>\n<p>Webpack 是一个现代 JavaScript 应用的静态模块打包工具。它通过分析模块依赖关系，将项目中的所有资源（JS、CSS、图片等）转换为浏览器可识别的静态资源，并支持代码优化与扩展功能</p>\n<h3 id=\"核心概念\"><a class=\"anchor\" href=\"#核心概念\">#</a> 核心概念</h3>\n<ol>\n<li><strong>Entry</strong> (入口)\n<ul>\n<li>定义打包起点，支持单入口（string）、多入口（array 或 object）</li>\n<li>示例：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">index</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/utils.js'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 合并为 1 个 chunk</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">vendor</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/vendor.js'</span> <span class=\"token comment\">// 独立 chunk</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><strong>Output</strong> (输出)\n<ul>\n<li>指定打包文件的输出路径与命名规则，常用 path 和 filename 配置。</li>\n<li>示例：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[name].[contenthash].js'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><strong>Loader</strong> (加载器)\n<ul>\n<li>处理非 JS 文件（如 CSS、图片），需安装对应 Loader。</li>\n<li>示例：通过 css-loader 和 style-loader 处理 CSS 文件：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><strong>Plugin</strong> (插件)\n<ul>\n<li>扩展 Webpack 功能，如生成 HTML 模板、清理构建目录。</li>\n<li>常用插件：\n<ul>\n<li>HtmlWebpackPlugin：自动生成 HTML 并注入 JS 文件</li>\n<li>CopyWebpackPlugin：复制静态文件（如无需打包的配置文件）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Mode</strong> (模式)\n<ul>\n<li>区分开发（development）与生产（production）环境，内置代码压缩等优化</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"核心功能与优化\"><a class=\"anchor\" href=\"#核心功能与优化\">#</a> 核心功能与优化</h3>\n<ol>\n<li><strong>热模块替换</strong> (HMR)\n<ul>\n<li>开发时仅更新修改的模块，提升构建速度。</li>\n<li>配置：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">hot</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">open</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><strong>缓存优化</strong>\n<ul>\n<li>hash 策略：\n<ul>\n<li>hash: 全局唯一哈希，任一文件变动则全部更新。</li>\n<li>chunkhash: 基于 Chunk 生成，同 Chunk 共享哈希。</li>\n<li>contenthash: 基于文件内容生成，文件内容不变则哈希不变。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Tree Shaking</strong>\n<ul>\n<li>移除未使用的代码，需要满足 ES6 模块化规范，且使用 tree-shaking 插件</li>\n</ul>\n</li>\n<li><strong>Source Map</strong>\n<ul>\n<li>映射编译后代码到源码，便于调试。常用配置：\n<ul>\n<li>开发环境： <code>cheap-module-eval-source-map</code> （快速定位行）</li>\n<li>生产环境： <code>cheap-module-source-map</code> （不暴露源码）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"开发与生产环境配置\"><a class=\"anchor\" href=\"#开发与生产环境配置\">#</a> 开发与生产环境配置</h3>\n<ol>\n<li><strong>开发服务器</strong>\n<ul>\n<li>启动本地服务并支持代理，HMR：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">proxy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string-property property\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000'</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><strong>代码分割</strong>\n<ul>\n<li>通过  <code>SplitChunksPlugin</code>  拆分公共代码，减少首屏加载时间</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"常见资源处理示例\"><a class=\"anchor\" href=\"#常见资源处理示例\">#</a> 常见资源处理示例</h3>\n<ol>\n<li>处理图片与字体\n<ul>\n<li>使用  <code>url-loader</code>  或  <code>file-loader</code> ：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(png|jpg|gif)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">limit</span><span class=\"token operator\">:</span> <span class=\"token number\">8192</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 小于 8KB 转为 Base64</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>处理 Less/Sass\n<ul>\n<li>安装 <code>less-loader</code>  和 <code>sass-loader</code> ，配置链式 Loader：<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.less$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'less-loader'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"实际应用示例\"><a class=\"anchor\" href=\"#实际应用示例\">#</a> 实际应用示例</h3>\n<ol>\n<li>安装 <code>webpack</code></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack webpack-cli</pre></td></tr></table></figure><ol start=\"2\">\n<li>在项目根目录创建 <code>webpack.config.js</code> ，并添加以下内容：</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 入口文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 输出路径</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span> <span class=\"token comment\">// 输出文件名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> config</pre></td></tr></table></figure><ol start=\"3\">\n<li>添加脚本到 <code>package.json</code> ：方便执行 <code>npm run build</code></li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>把应用变成一个最小的 React 应用</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> react react-dom</pre></td></tr></table></figure><ol start=\"5\">\n<li>配置加载器，将 Jxx 脚本转换为浏览器可识别的 JavaScript 代码</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 添加加载器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>把加载器和它所需要的包作为开发依赖项来安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @babel/core babel-loader @babel/preset-react --save-dev</pre></td></tr></table></figure><ol start=\"6\">\n<li>把 babel 执行的转置过程设置为预设，并添加一个 babel-loader</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>用命令安装这个预设</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @babel/preset-env --save-dev</pre></td></tr></table></figure><ol start=\"7\">\n<li>使用 CSS 时，我们必须使用 CSS 和 style 加载器</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-react'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>安装加载器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> style-loader css-loader --save-dev</pre></td></tr></table></figure><ol start=\"8\">\n<li>我们需要一个能够对应代码改变的 service，使得不需要从新刷新页面</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack-dev-server</pre></td></tr></table></figure><p>定义一个 npm 脚本来启动</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=development\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>并且在 webpack.config.js 中添加 devServer 配置</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'main.js'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 添加 devServer</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">static</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">compress</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样我们就可以通过 <code>npm start</code>  命令在 3000 端口启动一个服务了</p>\n<ol start=\"9\">\n<li>当我们代码出错时，错误位置与源代码的实际位置不一致<br />\n我们需要 webpack 为 bundle 生成一个所谓的 source map，使得我们可以知道错误位置<br />\n在配置对象中添加一个新的 <code>devtool</code>  属性</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token literal-property property\">devtool</span><span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 添加 devtool</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// ..</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"10\">\n<li>我们可以设置 webpack 在 production 模式下使用一些优化</li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack-part7\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"practising webpack\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode=production\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生产模式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack serve --mode=development\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MIT\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "React",
                "React",
                "webpack"
            ]
        },
        {
            "id": "https://aynya.github.io/%E8%87%AA%E5%AE%9A%E4%B9%89hook/",
            "url": "https://aynya.github.io/%E8%87%AA%E5%AE%9A%E4%B9%89hook/",
            "title": "自定义hook",
            "date_published": "2025-03-21T07:46:09.000Z",
            "content_html": "<h3 id=\"什么是自定义hook\"><a class=\"anchor\" href=\"#什么是自定义hook\">#</a> 什么是自定义 hook？</h3>\n<p>自定义 Hooks 是一个以 <code>use</code>  开头的 JavaScript 函数，它内部可以调用其他的 Hooks，如 <code>useState</code> 、 <code>useEffect</code>  等。</p>\n<h3 id=\"为什么使用自定义hooks\"><a class=\"anchor\" href=\"#为什么使用自定义hooks\">#</a> 为什么使用自定义 Hooks?</h3>\n<ul>\n<li><strong>代码复用</strong>： 当多个组件需要相同的逻辑时，可以通过自定义 Hooks 将这些逻辑封装起来，避免重复编写相同的代码。</li>\n<li><strong>提高代码清晰度</strong>：通过将特定功能的逻辑集中在一个地方，可以使组件更加简洁，易于理解和维护。</li>\n</ul>\n<h3 id=\"如何创建自定义hooks\"><a class=\"anchor\" href=\"#如何创建自定义hooks\">#</a> 如何创建自定义 Hooks？</h3>\n<p>创建自定义 Hooks 非常简单，只需编写一个函数，并根据需要在其内部调用其他 Hooks。<br />\n例如，如果你想创建一个计数器 Hook，可以这样做：</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useState <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">decrement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> count<span class=\"token punctuation\">,</span> increment<span class=\"token punctuation\">,</span> decrement <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在组件中可以这样使用</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> useCounter <span class=\"token keyword\">from</span> <span class=\"token string\">'./useCounter'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">CounterComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> count<span class=\"token punctuation\">,</span> increment<span class=\"token punctuation\">,</span> decrement <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">useCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Count: </span><span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>increment<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Increase</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>decrement<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Decrease</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> CounterComponent<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"自定义hooks的高级应用\"><a class=\"anchor\" href=\"#自定义hooks的高级应用\">#</a> 自定义 hooks 的高级应用</h3>\n<p>自定义 Hooks 还可以用于处理副作用（如数据获取）、组合多个 Hooks、参数化 Hooks 以及包含条件逻辑等</p>\n<ul>\n<li><strong>处理副作用</strong>：比如你可以创建一个专门用于数据获取的 Hook。</li>\n<li><strong>组合多个 Hooks</strong>：比如你可以创建一个 Hook，它接受一个参数，并根据参数返回一个包含多个 Hooks 的组合。</li>\n<li><strong>参数化 Hooks</strong>：比如你可以创建一个 Hook，它接受一个参数，并根据参数返回一个定制化的 Hook。</li>\n<li><strong>包含条件逻辑</strong>：比如你可以创建一个 Hook，它根据条件返回不同的 Hook。</li>\n</ul>\n<h3 id=\"最佳实践\"><a class=\"anchor\" href=\"#最佳实践\">#</a> 最佳实践</h3>\n<ul>\n<li>确保自定义 Hooks 只在顶层无条件地调用其他 Hooks。</li>\n<li>尽量保持自定义 Hooks 的功能单一，每个 Hook 应该专注于解决一个问题。</li>\n<li>在设计自定义 Hooks 时考虑其可测试性和调试便利性。</li>\n</ul>\n",
            "tags": [
                "React",
                "react",
                "hooks"
            ]
        },
        {
            "id": "https://aynya.github.io/React-router%E5%BA%94%E7%94%A8/",
            "url": "https://aynya.github.io/React-router%E5%BA%94%E7%94%A8/",
            "title": "React-router应用",
            "date_published": "2025-03-20T14:37:53.000Z",
            "content_html": "<p><code>React Router </code> 是一个用于在  <code>React</code>  应用中实现动态路由的强大库。它使得单页应用（SPA）能够拥有多个视图，并且可以根据 URL 的变化来显示不同的内容，而无需重新加载整个页面。<br />\n安装库： <code>npm install react-router-dom</code></p>\n<h3 id=\"核心概念\"><a class=\"anchor\" href=\"#核心概念\">#</a> 核心概念</h3>\n<ol>\n<li><code>BrowserRouter </code>\n<ul>\n<li><code>BrowserRouter</code>  使用 HTML5 提供的 History API 来保持 UI 和 URL 同步。</li>\n<li><code>HashRouter</code>  则使用 URL 的 hash 部分（即 # 后面的内容），适用于不支持 HTML5 History API 的旧浏览器。</li>\n</ul>\n</li>\n<li><code>Routes</code>  和  <code>Route</code>\n<ul>\n<li><code>Routes</code>  是一个容器组件，用于包裹多个  <code>Route</code>  组件。</li>\n<li><code>Route</code>  组件用于定义路由规则，包括路径、组件和渲染条件。</li>\n</ul>\n</li>\n<li><code>Link</code>  和  <code>NavLink</code>\n<ul>\n<li><code>Link</code>  组件用于创建链接，点击后导航到指定路径。</li>\n<li><code>NavLink</code>  组件类似于  <code>Link</code> ，但可以添加一些样式，比如添加类名或改变样式。</li>\n</ul>\n</li>\n<li><code>Navigate</code>\n<ul>\n<li>可以编程式地导航到指定路径。它可以替换当前历史记录条目或添加一个新的条目，取决于是否设置了  <code>replace</code>  属性。</li>\n</ul>\n</li>\n<li><code>useNavigate</code>  Hook\n<ul>\n<li><code>useNavigate</code>  是一个  <code>Hook</code> ，用于在组件中获取导航函数。</li>\n</ul>\n</li>\n<li><code>useMatch</code>  Hook\n<ul>\n<li><code>useMatch</code>  是一个  <code>Hook</code> ，用于在组件中获取当前匹配的路由信息。没有匹配的路由时， <code>useMatch</code>  返回  <code>null</code> 。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"示例代码\"><a class=\"anchor\" href=\"#示例代码\">#</a> 示例代码</h3>\n<ol>\n<li><strong>基本使用</strong><br />\n这里的代码是一个简单的 React 应用，它使用  <code>BrowserRouter</code>  和  <code>Routes</code>  来定义路由，并使用  <code>Link</code>  和  <code>Route</code>  来创建链接和路由规则。点击 <code>Link</code>  可以跳转到下面定义的三个页面。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Routes<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Link <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Home</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/notes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Notes</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">About</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 定义路由 */</span><span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/notes<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Notes</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/about<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">About</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Router</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Home</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">Notes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Notes</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">About</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">About</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><strong>编程式导航</strong><br />\n使用 <code>useNavigate</code>  Hook，可以在组件中获取导航函数，并使用它来导航到指定路径。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useNavigate <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">LoginButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">const</span> navigate <span class=\"token operator\">=</span> <span class=\"token function\">useNavigate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token comment\">// 登录逻辑...</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 导航到仪表盘</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      Go to Dashboard</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><strong>路由参数</strong><br />\n处理路由参数，即在路由路径中使用动态参数。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useParams <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">NoteDetail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> <span class=\"token function\">useParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Note ID: </span><span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">&#125;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 在父组件中定义路由</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/notes/:id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NoteDetail</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">&#125;</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Routes</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>当然这里也可以使用 <code>useMatch</code>  Hook 来获取当前匹配的路由信息，比如获取当前匹配的路由的参数。<br />\n路由如果匹配成功， <code>useMatch</code>  会返回一个对象，否则返回 <code>null</code> 。</p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">useMatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/anecdotes/:id'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> anecdote <span class=\"token operator\">=</span> match</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">?</span> anecdotes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">anecdote</span> <span class=\"token operator\">=></span> anecdote<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span></pre></td></tr></table></figure>",
            "tags": [
                "React",
                "React",
                "Router"
            ]
        },
        {
            "id": "https://aynya.github.io/%E5%9C%A8Redux%E4%B8%AD%E4%B8%8E%E5%90%8E%E7%AB%AF%E9%80%9A%E4%BF%A1/",
            "url": "https://aynya.github.io/%E5%9C%A8Redux%E4%B8%AD%E4%B8%8E%E5%90%8E%E7%AB%AF%E9%80%9A%E4%BF%A1/",
            "title": "在Redux中与后端通信",
            "date_published": "2025-03-20T08:42:26.000Z",
            "content_html": "<h3 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h3>\n<p>这里使用 <code>json-server</code>  模拟后端数据， <code>json-server</code>  是一个基于 JSON 的 HTTP 服务器，用于快速创建 RESTful API。</p>\n<p>在 <code>reducer</code>  中，我们使用 <code>redux-thunk</code>  来处理异步操作， <code>redux-thunk</code>  是一个中间件，它允许我们返回一个函数而不是一个对象，并在函数中可以进行异步操作。</p>\n<h3 id=\"示例\"><a class=\"anchor\" href=\"#示例\">#</a> 示例</h3>\n<ol>\n<li>在 <code>noteReducer</code>  中，我们创建 <code>initializenotes</code>  和 <code>createNoteAction</code>  两个函数，分别用于初始化笔记列表和创建新的笔记。都是异步操作，所以使用了 <code>redux-thunk</code> 。调用时直接调用 <code>dispatch</code>  即可。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">initializeNotes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">dispatch</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> noteServiece<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">setNotes</span><span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createNoteAction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">dispatch</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">const</span> newNote <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> noteServiece<span class=\"token punctuation\">.</span><span class=\"token function\">createNew</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">createNote</span><span class=\"token punctuation\">(</span>newNote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>而相对应的函数，在 <code>noteServiece</code>  中，我们使用 <code>axios</code>  来模拟后端数据，并返回相应的数据。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:3001/notes'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getAll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createNew</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">const</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> content<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    getAll<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    createNew<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在 <code>App.js</code>  中，我们使用 <code>useEffect</code>  来初始化笔记列表，并使用 <code>useDispatch</code>  来调用 <code>initializeNotes</code>  函数。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">initializeNotes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>dispatch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NewNote</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">VisibilityFilter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Notes</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>我们把 <code>store</code>  商店注册提取到 <code>index.js</code>  中，简化 <code>main.js</code></li>\n</ol>\n<p><strong>store.js</strong></p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> configureStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> noteReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./reducers/noteReducer'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> filterReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./reducers/filterReducer'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token literal-property property\">reducer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token literal-property property\">notes</span><span class=\"token operator\">:</span> noteReducer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> filterReducer</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</pre></td></tr></table></figure><p><strong>main.js</strong></p>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Provider</span></span> <span class=\"token attr-name\">store</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>store<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Provider</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// document.getElementById('root')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "React",
                "React",
                "Redux",
                "Redux-thunk"
            ]
        },
        {
            "id": "https://aynya.github.io/%E4%BD%BF%E7%94%A8Redux%E8%BF%9B%E8%A1%8C%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/",
            "url": "https://aynya.github.io/%E4%BD%BF%E7%94%A8Redux%E8%BF%9B%E8%A1%8C%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/",
            "title": "使用Redux进行状态管理",
            "date_published": "2025-03-19T08:58:40.000Z",
            "content_html": "<h3 id=\"安装redux\"><a class=\"anchor\" href=\"#安装redux\">#</a> 安装 Redux</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> redux</pre></td></tr></table></figure><h3 id=\"使状态完全从组件中分离开\"><a class=\"anchor\" href=\"#使状态完全从组件中分离开\">#</a> 使状态完全从组件中分离开</h3>\n<ol>\n<li>动作对应用状态的影响是用一个 <code>reducer</code>  来定义的</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">counterReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'INCREMENT'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">return</span> state <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'DECREMENT'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> state <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'ZERO'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token comment\">// if none of the above matches, code comes here</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">return</span> state</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第一个参数是当前状态，第二个参数是动作对象。</p>\n<ol start=\"2\">\n<li><code>Reducer</code>  不应该从应用代码中直接调用，只是作为创建存储的 <code>createStore</code>  函数的参数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">counterReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>counterReducer<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><code>Redux</code>  的 <code>store</code>  对象提供了 <code>getState</code>  方法，用于获取当前状态，以及 <code>dispatch</code>  方法，用于触发动作</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>counterReducer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'INCREMENT'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'INCREMENT'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'INCREMENT'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'ZERO'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'DECREMENT'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -1</span></pre></td></tr></table></figure><h3 id=\"状态管理\"><a class=\"anchor\" href=\"#状态管理\">#</a> 状态管理</h3>\n<ol>\n<li>项目目录：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redux-anecdotes/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── src/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>│   ├── components/          <span class=\"token comment\"># 可复用组件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>│   │   └── AnecdoteList.jsx <span class=\"token comment\"># 展示段子列表组件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>│   │   └── AnecdoteForm.jsx <span class=\"token comment\"># 创建新段子的表单组件</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>│   ├── store/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>│   │   ├── actions/        <span class=\"token comment\"># Redux action creators</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>│   │   │   └── anecdoteActions.js</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>│   │   ├── reducers/       <span class=\"token comment\"># Redux reducers</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>│   │   │   └── anecdoteReducer.js</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>│   │   └── store.js        <span class=\"token comment\"># Redux store 配置</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>│   ├── services/           <span class=\"token comment\"># API 服务层（如果需要后端连接）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>│   ├── App.jsx             <span class=\"token comment\"># 主组件（你现有的文件）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>│   └── main.jsx            <span class=\"token comment\"># 应用入口文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>├── public/</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>│   └── index.html          <span class=\"token comment\"># 主页面模板</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>├── package.json</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>└── README.md</pre></td></tr></table></figure><ol start=\"2\">\n<li>在 <code>app.jsx</code>  中只有封装了</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> AnecdoteForm <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/AnecdoteForm'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> AnecdoteList <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/AnecdoteList'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnecdoteList</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnecdoteForm</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</pre></td></tr></table></figure><ol>\n<li>所有的状态管理放在 <code>Reducer</code>  中，包括了点赞和添加的对象组成</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> anecdotesAtStart <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'If it hurts, do it more often'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'Adding manpower to a late software project makes it later!'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">'Premature optimization is the root of all evil.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token string\">'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getId</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token number\">100000</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">asObject</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">anecdote</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> anecdote<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">votes</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> anecdotesAtStart<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>asObject<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> initialState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'VOTE'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> action<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>id</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">const</span> anecdoteToChange <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">const</span> changeanedote <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token operator\">...</span>anecdoteToChange<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token literal-property property\">votes</span><span class=\"token operator\">:</span> anecdoteToChange<span class=\"token punctuation\">.</span>votes <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> id <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> changeanedote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'ADD'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">const</span> newAnecdote <span class=\"token operator\">=</span> <span class=\"token function\">asObject</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>newAnecdote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token keyword\">return</span> state</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Vote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'VOTE'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      id</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'ADD'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      content</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> reducer</pre></td></tr></table></figure><ol start=\"3\">\n<li>在 <code>AnecdoteList.jsx</code>  中，处理了显示数据和点赞的逻辑<br />\n通过调用 <code>useDispatch</code>  和 <code>useSelector</code>  来获取 <code>store</code>  中的状态和 <code>dispatch</code>  方法</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useDispatch<span class=\"token punctuation\">,</span> useSelector <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-redux\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Vote <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../reducers/anecdoteReducer\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AnecdoteList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">const</span> anecdotes <span class=\"token operator\">=</span> <span class=\"token function\">useSelector</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">vote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">Vote</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    anecdotes<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>votes <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>votes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Anecdotes</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </span><span class=\"token punctuation\">&#123;</span>anecdotes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">anecdote</span> <span class=\"token operator\">=></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>anecdote<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    </span><span class=\"token punctuation\">&#123;</span>anecdote<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    has </span><span class=\"token punctuation\">&#123;</span>anecdote<span class=\"token punctuation\">.</span>votes<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">vote</span><span class=\"token punctuation\">(</span>anecdote<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">vote</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AnecdoteList</pre></td></tr></table></figure><ol start=\"4\">\n<li>在 <code>AnecdoteForm.jsx</code>  中，处理了添加新 anecdote 的逻辑<br />\n通过调用 <code>useDispatch</code>  来获取 <code>store</code>  中的 <code>dispatch</code>  方法</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> useDispatch <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Add <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../reducers/anecdoteReducer'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AnecdoteForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addanect</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>anecdote<span class=\"token punctuation\">.</span>value</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>anecdote<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">create new</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>addanect<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>anecdote<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>submit<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">create</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AnecdoteForm</pre></td></tr></table></figure><ol start=\"5\">\n<li>在 <code>main.jsx</code>  中，将 <code>App</code>  组件渲染到 <code>#root</code>  元素中，并订阅 <code>store</code>  的变化，当 <code>store</code>  发生变化时，重新渲染 <code>App</code>  组件，主要通过 <code>Provider</code>  组件来提供 <code>store</code>  给 <code>App</code>  组件</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createStore <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Provider <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> reducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./reducers/anecdoteReducer'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Provider</span></span> <span class=\"token attr-name\">store</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>store<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Provider</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"再来点更多的reducers\"><a class=\"anchor\" href=\"#再来点更多的reducers\">#</a> 再来点更多的 reducers</h3>\n<p>对于我们的 <code>state</code>  可以有多个子状态，比如 <code>anecdotes</code>  和 <code>filter</code> ，所以我们需要创建多个 <code>reducer</code>  来处理 <code>anecdotes</code>  和 <code>filter</code>  的状态。<br />\n对于各自的 <code>reducer</code>  就写自己的逻辑，比如 <code>anecdotes</code>  的 <code>reducer</code>  可以这样写：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> anecdotesAtStart <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">'If it hurts, do it more often'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string\">'Adding manpower to a late software project makes it later!'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token string\">'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token string\">'Premature optimization is the root of all evil.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token string\">'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getId</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token number\">100000</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">asObject</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">anecdote</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> anecdote<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">votes</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> anecdotesAtStart<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>asObject<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">anecdoteReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> initialState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\">// console.log('state now: ', state)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'VOTE'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> action<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>id</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">const</span> anecdoteToChange <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">const</span> changeanedote <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token operator\">...</span>anecdoteToChange<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token literal-property property\">votes</span><span class=\"token operator\">:</span> anecdoteToChange<span class=\"token punctuation\">.</span>votes <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span> <span class=\"token operator\">=></span> a<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> id <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> changeanedote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'ADD'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">const</span> newAnecdote <span class=\"token operator\">=</span> <span class=\"token function\">asObject</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>newAnecdote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> state</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Vote</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'VOTE'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      id</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'ADD'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      content</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> anecdoteReducer</pre></td></tr></table></figure><p>而对于 <code>notice</code>  的 <code>reducer</code>  可以这样写：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> notificationAtStart <span class=\"token operator\">=</span> <span class=\"token string\">\"you did something\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">notificationReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> notificationAtStart<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token string\">'NOTIFICATION'</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">return</span> action<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">return</span> state</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createNotification</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'NOTIFICATION'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> content</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> notificationReducer</pre></td></tr></table></figure><p>一个是通知一个是显示，两种逻辑<br />\n在 <code>main.js</code>  中我们需要引入两个 <code>reducer</code> ，并创建 <code>store</code> ，然后把 <code>store</code>  传递给 <code>App</code>  组件，这样 <code>App</code>  组件就可以通过 <code>useSelector</code>  和 <code>useDispatch</code>  来获取 <code>store</code>  中的状态和 <code>dispatch</code>  方法。<br />\n这里我们使用 <code>Redux</code>  工具包的 <code>configureStore</code>  函数创建商店</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token literal-property property\">reducer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token literal-property property\">anecdotes</span><span class=\"token operator\">:</span> anecdoteReducer<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">notification</span><span class=\"token operator\">:</span> notificationReducer</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>state</code>  就是一个包含两个子状态的对象， <code>anecdotes</code>  和 <code>notification</code> ，分别对应 <code>anecdoteReducer</code>  和 <code>notificationReducer</code> <br />\n<strong> 在访问的时候就要注意了</strong></p>\n",
            "tags": [
                "React",
                "React",
                "Redux"
            ]
        },
        {
            "id": "https://aynya.github.io/%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E4%B8%8Bhook%E9%87%8D%E7%BD%AEand%E7%88%B6%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%87%BD%E6%95%B0/",
            "url": "https://aynya.github.io/%E6%9D%A1%E4%BB%B6%E6%B8%B2%E6%9F%93%E4%B8%8Bhook%E9%87%8D%E7%BD%AEand%E7%88%B6%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%87%BD%E6%95%B0/",
            "title": "条件渲染下hook重置and父组件调用子组件的函数",
            "date_published": "2025-03-19T02:57:33.000Z",
            "content_html": "<h3 id=\"条件渲染下子组件内部的hook重置\"><a class=\"anchor\" href=\"#条件渲染下子组件内部的hook重置\">#</a> 条件渲染下子组件内部的 hook 重置</h3>\n<ol>\n<li>\n<p>当父组件使用条件渲染（例如通过一个状态或属性决定是否渲染某个子组件）时，如果条件从 <code>true</code>  变为 <code>false</code> ，然后又变回 <code>true</code> ，这个过程确实会导致 <code>React</code>  重新创建该子组件实例。这意味着子组件内部的 <code>useState</code> （以及其他钩子的状态）将会被重置，因为每次条件为真且子组件被重新挂载时，都会初始化一个新的状态。</p>\n</li>\n<li>\n<p>例子</p>\n</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ParentComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>showChild<span class=\"token punctuation\">,</span> setShowChild<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setShowChild</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>showChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        Toggle Child</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      </span><span class=\"token punctuation\">&#123;</span>showChild <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ChildComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ChildComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Count: </span><span class=\"token punctuation\">&#123;</span>count<span class=\"token punctuation\">&#125;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Increase</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在这个例子中，每当点击 <code>Toggle Child</code>  按钮时， <code>showChild</code>  的值会切换，从而控制 <code>ChildComponent</code>  的显示和隐藏。如果 <code>ChildComponent</code>  因 <code>showChild</code>  为 <code>false</code>  而卸载，那么它的状态（如这里的 <code>count</code> ）也会丢失。当再次设置 <code>showChild</code>  为 <code>true</code>  时， <code>ChildComponent</code>  会被重新挂载，并且其状态会重新初始化。<br />\n3. 在条件变化时避免子组件及其状态的丢失</p>\n<ul>\n<li>使用持久化存储：例如 <code>localStorage</code>  或 <code>sessionStorage</code>  来保存子组件的状态并在组件重新挂载时恢复。</li>\n<li>将状态提升到父组件：将需要保持的状态移到父组件中管理，并通过属性传递给子组件。这种方法可以让状态在子组件卸载和重新挂载之间得以保持。</li>\n<li>使用 <code>&lt;React.Fragment&gt;</code>  或其他方式避免完全移除组件：比如通过样式控制组件的可见性而不是通过条件渲染来添加或移除组件。</li>\n</ul>\n<h3 id=\"父组件调用子组件的函数\"><a class=\"anchor\" href=\"#父组件调用子组件的函数\">#</a> 父组件调用子组件的函数</h3>\n<ol>\n<li>子组件使用  <code>forwardRef</code>  和  <code>useImperativeHandle</code> <br />\n 首先，在子组件中使用  <code>forwardRef</code>  来接收从父组件传递过来的  <code>ref</code> ，并通过  <code>useImperativeHandle</code>  自定义暴露给父组件的方法。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> forwardRef<span class=\"token punctuation\">,</span> useImperativeHandle<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> Togglable <span class=\"token operator\">=</span> <span class=\"token function\">forwardRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleVisibility</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visible<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 使用 useImperativeHandle 暴露特定方法给父组件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">useImperativeHandle</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        toggleVisibility</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">const</span> hideWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">'none'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">const</span> showWhenVisible <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> visible <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'none'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>hideWhenVisible<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>toggleVisibility<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span>props<span class=\"token punctuation\">.</span>buttonLabel<span class=\"token punctuation\">&#125;</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>showWhenVisible<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                </span><span class=\"token punctuation\">&#123;</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>toggleVisibility<span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">取消</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Togglable<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>父组件创建 <code>ref</code>  并传递给子组件<br />\n在父组件中，创建一个  <code>ref</code>  并通过属性将其传递给子组件。然后，你可以直接通过这个  <code>ref</code>  调用子组件暴露的方法。</li>\n</ol>\n<figure class=\"highlight jsx\"><figcaption data-lang=\"React JSX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> useRef <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Togglable <span class=\"token keyword\">from</span> <span class=\"token string\">'./Togglable'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 假设 Togglable 组件在同一目录下</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">ParentComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">const</span> childRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            </span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 将 ref 传递给子组件 */</span><span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Togglable</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span>childRef<span class=\"token punctuation\">&#125;</span></span> <span class=\"token attr-name\">buttonLabel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>显示/隐藏<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                这是一个可切换显示的内容。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Togglable</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            </span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* 调用子组件中的方法 */</span><span class=\"token punctuation\">&#125;</span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> childRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">toggleVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                从父组件调用切换方法</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ParentComponent<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>forwardRef</code> ：用于让子组件能够接收到父组件传递的  <code>ref</code> 。<br />\n <code>useImperativeHandle</code> ：允许你自定义暴露给父组件的实例属性或方法。在这个例子中，我们只暴露了  <code>toggleVisibility</code>  方法。<br />\n <code>ref</code> ：在父组件中创建并传递给子组件，通过这个  <code>ref</code>  可以直接访问子组件暴露的方法。</p>\n",
            "tags": [
                "React",
                "React",
                "Hook"
            ]
        },
        {
            "id": "https://aynya.github.io/%E7%AB%AF%E5%88%B0%E7%AB%AF%E6%B5%8B%E8%AF%95/",
            "url": "https://aynya.github.io/%E7%AB%AF%E5%88%B0%E7%AB%AF%E6%B5%8B%E8%AF%95/",
            "title": "端到端测试",
            "date_published": "2025-03-18T15:07:53.000Z",
            "content_html": "<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<ol>\n<li>首先将 <code>Cypress</code>  安装到前端作为开发依赖项</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev cypress</pre></td></tr></table></figure><ol start=\"2\">\n<li>然后在 <code>package.json</code>  中添加 <code>scripts</code>  字段，用于运行测试</li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint .\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"preview\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite preview\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json-server -p3001 --watch db.json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vitest run\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"coverage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vitest run --coverage\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"cypress:open\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cypress open\"</span> <span class=\"token comment\">// 添加</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"3\">\n<li><code>Cypress</code>  测试在运行时不会启动系统，需要在后端添加 <code>npm-script</code> ，在测试模式下启动它</li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=production node index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=development nodemon index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=test jest --verbose --runInBand\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"start:test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=test node index.js\"</span> <span class=\"token comment\">// 添加</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>以测试环境运行后端，并使用专属的测试数据库</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run start:test</pre></td></tr></table></figure><h3 id=\"开始测试\"><a class=\"anchor\" href=\"#开始测试\">#</a> 开始测试</h3>\n<ol>\n<li>当前后端都在运行时，用以下命令启动 Cypress</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run cypress:open</pre></td></tr></table></figure><ol>\n<li>在 Cypress 中，选择 <code>E2E</code> ，选择 <code>Chrome</code> ，然后创建一个 <code>test.cy.js</code>  文件</li>\n<li>就可以开始测试了<br />\n笔记测试代码</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'template spec'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:5173'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 登录</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'front page can be opened'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    cy<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Notes'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 查找是否有 Notes</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// it('user can login', function () &#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">//   cy.contains('login').click()</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">//   cy.get('#username').type('root')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">//   cy.get('#password').type('salainen')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">//   cy.get('#login-button').click()</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token comment\">// &#125;)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'when logged in'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 点击登录</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获得用户名输入框后输入用户名</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'salainen'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获得密码输入框后输入密码</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#login-button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 点击登录按钮</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a new note can be created'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'New note'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a note created by cypress'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'save'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      cy<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a note created by cypress'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "React",
                "React",
                "Node.js",
                "测试"
            ]
        },
        {
            "id": "https://aynya.github.io/%E6%B5%8B%E8%AF%95React%E5%BA%94%E7%94%A8/",
            "url": "https://aynya.github.io/%E6%B5%8B%E8%AF%95React%E5%BA%94%E7%94%A8/",
            "title": "测试React应用",
            "date_published": "2025-03-18T09:08:39.000Z",
            "content_html": "<h3 id=\"测试前的准备\"><a class=\"anchor\" href=\"#测试前的准备\">#</a> 测试前的准备</h3>\n<p>使用 Vitest 作为测试框架</p>\n<ol>\n<li>安装 Vitest 和模拟 Web 浏览器的 jsdom 库</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-vitest vitest jsdom</pre></td></tr></table></figure><ol start=\"2\">\n<li>还需要另一个测试库来帮助我们渲染组件进行测试。 <code>react-testing-library</code></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @testing-library/react @testing-library/jest-dom</pre></td></tr></table></figure><ol start=\"3\">\n<li>在 <code>package.json</code>  中添加一个脚本来运行测试</li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vitest run\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>在项目根目录创建一个名为 <code>testSetup.js</code>  的内容<br />\n该函数重置了模拟浏览器的 jsdom</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> afterEach <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vitest'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> cleanup <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'@testing-library/jest-dom/vitest'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>在 <code>vite.config.js</code>  中添加一个 <code>test</code>  配置</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">environment</span><span class=\"token operator\">:</span> <span class=\"token string\">'jsdom'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">globals</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">setupFiles</span><span class=\"token operator\">:</span> <span class=\"token string\">'./testSetup.js'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"6\">\n<li>安装 user-event 来模拟用户行为</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @testing-library/user-event</pre></td></tr></table></figure><h3 id=\"测试组件\"><a class=\"anchor\" href=\"#测试组件\">#</a> 测试组件</h3>\n<p>在对应目录下创建 <code>.test.js</code>  文件，并使用 <code>describe</code>  和 <code>test</code>  来编写测试用例。<br />\n这里采用我的博客进行测试</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> render<span class=\"token punctuation\">,</span> screen <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/react'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Blog <span class=\"token keyword\">from</span> <span class=\"token string\">'./Blog'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> beforeAll<span class=\"token punctuation\">,</span> describe<span class=\"token punctuation\">,</span> expect <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vitest'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> userEvent <span class=\"token keyword\">from</span> <span class=\"token string\">'@testing-library/user-event'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;Blog />'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">const</span> blog <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Test blog'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">'Test author'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'www.test.com'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        container <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span> <span class=\"token comment\">// 渲染组件</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token operator\">&lt;</span>Blog blog<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>blog<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Blog<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>container</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'when the button is clicked, then the event handler is called once'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 创建一个模拟用户</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取按钮</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 点击按钮</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">const</span> div <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.blogDetails'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取 div</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toHaveStyle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'display: none'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 判断 div 是否隐藏</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'when the button is clicked, then the event handler is called once'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> userEvent<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> screen<span class=\"token punctuation\">.</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'view'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDefined</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">.</span><span class=\"token function\">findByText</span><span class=\"token punctuation\">(</span><span class=\"token string\">'likes: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeDefined</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"检查代码的覆盖率\"><a class=\"anchor\" href=\"#检查代码的覆盖率\">#</a> 检查代码的覆盖率</h3>\n<ol>\n<li>在 <code>vitest.config.js</code>  中添加一个 <code>coverage</code>  配置</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// vitest.config.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vitest/config'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token literal-property property\">coverage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token literal-property property\">provider</span><span class=\"token operator\">:</span> <span class=\"token string\">'v8'</span> <span class=\"token comment\">// 或 'istanbul'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>安装覆盖所需依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-D</span> @vitest/coverage-v8</pre></td></tr></table></figure><ol start=\"3\">\n<li>跟新 <code>package.json</code>  的 <code>scripts</code></li>\n</ol>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vitest\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"coverage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vitest run --coverage\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>运行 <code>npm run coverage</code></li>\n</ol>\n",
            "tags": [
                "React",
                "React",
                "测试"
            ]
        },
        {
            "id": "https://aynya.github.io/%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81/",
            "url": "https://aynya.github.io/%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81/",
            "title": "密钥认证",
            "date_published": "2025-03-16T07:23:57.000Z",
            "content_html": "<h3 id=\"密钥认证\"><a class=\"anchor\" href=\"#密钥认证\">#</a> 密钥认证</h3>\n<h4 id=\"安装库\"><a class=\"anchor\" href=\"#安装库\">#</a> 安装库</h4>\n<p>现在我们将在后端实现基于令牌的认证<br />\n首先，我们需要安装一个用于生成令牌的库，这里我们使用 <code>jsonwebtoken</code> 。<br />\n安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> jsonwebtoken</pre></td></tr></table></figure><h4 id=\"登录功能\"><a class=\"anchor\" href=\"#登录功能\">#</a> 登录功能</h4>\n<p>登录功能写在 <code>controllers/login.js</code>  中如下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> bcrypt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bcrypt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> loginRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/user'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>loginRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> username<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token comment\">// 从数据库获取用户</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> username <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\">// 检查用户名和密码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">// 由于密码本身并未存储明文，而是使用 bcrypt 进行加密，所以需要使用 bcrypt.compare 进行比较</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">const</span> passwordCorrect <span class=\"token operator\">=</span> user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token keyword\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>passwordHash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">&amp;&amp;</span> passwordCorrect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'invalid username or password'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 如果密码正确，将通过 `jwt.sign` 方法创建一个 token</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">const</span> userForToken <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">// SECRET 是自定义的密钥，是环境变量在.env 文件中设置，用于加密 token</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>userForToken<span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SECRET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 生成的 token 和用户名在响应体中返回</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  response</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> token<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> loginRouter</pre></td></tr></table></figure><p>将登录代码添加到应用中 <code>app.js</code></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> loginRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./controllers/login'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/login'</span><span class=\"token punctuation\">,</span> loginRouter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>当然不要忘记设置环境变量</strong></p>\n<h4 id=\"实现只有在有效的token下才能post\"><a class=\"anchor\" href=\"#实现只有在有效的token下才能post\">#</a> 实现只有在有效的 token 下才能 post</h4>\n<p>我们将使用 Authorization 头来验证 token。<br />\n实际上如果 token 是字符串 eyJhbGciOiJIUzI1NiIsInR5c2VybmFtZSI6Im1sdXVra2FpIiwiaW ，那么 Authorization 头应该设置为：  <code>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5c2VybmFtZSI6Im1sdXVra2FpIiwiaW</code></p>\n<p>创建新的博客 <code>controllers/blogs.js</code>  修改为：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> jwt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 将 token 从 authorization 头部分离出来</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTokenFrom</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">request</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> authorization <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>authorization <span class=\"token operator\">&amp;&amp;</span> authorization<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bearer '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> authorization<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bearer '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>blogsRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>title <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'title or url missing'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 验证 token</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> decodedToken <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTokenFrom</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SECRET</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>decodedToken<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'token missing or invalid'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>decodedToken<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 通过 userId 找到对应的 user</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">const</span> blog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>likes <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>id</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">const</span> savedBlog <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blog<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  user<span class=\"token punctuation\">.</span>blogs <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>blogs<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>savedBlog<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedBlog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>如果 token 丢失或无效，将引发异常 JsonWebTokenError，在错误处理中间件中添加错误处理程序</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span>  <span class=\"token string\">'JsonWebTokenError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'token missing or invalid'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"限制令牌的有效期\"><a class=\"anchor\" href=\"#限制令牌的有效期\">#</a> 限制令牌的有效期</h4>\n<p>Token 认证之后。API 会对 token 拥有者盲目信任<br />\n我们可以设置 token 的过期时间，在 <code>controllers/login.js</code>  中修改如下</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>loginRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> username<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> username <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> passwordCorrect <span class=\"token operator\">=</span> user <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">:</span> <span class=\"token keyword\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>passwordHash<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">&amp;&amp;</span> passwordCorrect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'invalid username or password'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> userForToken <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\">// token expires in 60*60 seconds, that is, in one hour</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    userForToken<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SECRET</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">expiresIn</span><span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span> <span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 设置 token 过期时间</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  response</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> token<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>令牌过期后，客户端应用需要获取新的令牌。这样就可以避免令牌被窃取后被用于攻击<br />\n当然，也需要在令牌过期的时候给出适当的错误响应：<br />\n在错误处理中间件中添加如下代码：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'TokenExpiredError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'token expired'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "node",
                "express",
                "token",
                "jwt",
                "nodejs"
            ]
        },
        {
            "id": "https://aynya.github.io/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/",
            "url": "https://aynya.github.io/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/",
            "title": "用户管理",
            "date_published": "2025-03-15T08:52:53.000Z",
            "content_html": "<h3 id=\"使用mongo进行用户管理\"><a class=\"anchor\" href=\"#使用mongo进行用户管理\">#</a> 使用 Mongo 进行用户管理</h3>\n<p>在这个博客应用中，用户和博客之间是一对多的关系<br />\n我们使用 <code>mongoose</code>  包来定义用户模型和路由</p>\n<h4 id=\"创建用户模型\"><a class=\"anchor\" href=\"#创建用户模型\">#</a> 创建用户模型</h4>\n<p>在 <code>modules/user.js</code>  中定义用户模型</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> userSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mongoose<span class=\"token punctuation\">.</span>Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">required</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">passwordHash</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token literal-property property\">blogs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">.</span>Types<span class=\"token punctuation\">.</span>ObjectId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token literal-property property\">ref</span><span class=\"token operator\">:</span> <span class=\"token string\">'Blog'</span> <span class=\"token comment\">// 关联到 Blog 模型</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>userSchema<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'toJSON'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function-variable function\">transform</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">document<span class=\"token punctuation\">,</span> returnedObject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        returnedObject<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> returnedObject<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">delete</span> returnedObject<span class=\"token punctuation\">.</span>_id</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">delete</span> returnedObject<span class=\"token punctuation\">.</span>__v</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">delete</span> returnedObject<span class=\"token punctuation\">.</span>passwordHash <span class=\"token comment\">// 不要透露密码哈希</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User'</span><span class=\"token punctuation\">,</span> userSchema<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> User</pre></td></tr></table></figure><h4 id=\"创建用户路由\"><a class=\"anchor\" href=\"#创建用户路由\">#</a> 创建用户路由</h4>\n<p>用户拥有一个唯一的用户名、名字以及一个密码哈希<br />\n安装 <code>bcrypt</code>  包生成密码散列</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> bcrypt</pre></td></tr></table></figure><p>在 <code>controllers/users.js</code>  中定义用户路由</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> bcrypt <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bcrypt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> usersRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/user'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 引入 User 模型</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>usersRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> username<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> password <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">const</span> saltRounds <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">const</span> passwordHash <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> bcrypt<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> saltRounds<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 生成密码哈希</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    username<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    passwordHash<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">const</span> savedUser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 保存到数据库中</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedUser<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> usersRouter</pre></td></tr></table></figure><p>在 <code>app.js</code>  中引入用户路由</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> usersRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./controllers/users'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/users'</span><span class=\"token punctuation\">,</span> usersRouter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h4 id=\"往错误处理中间件添加违反唯一性错误处理逻辑\"><a class=\"anchor\" href=\"#往错误处理中间件添加违反唯一性错误处理逻辑\">#</a> 往错误处理中间件添加违反唯一性错误处理逻辑</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">errorHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'CastError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'malformatted id'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ValidationError'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> error<span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'MongoServerError'</span> <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'E11000 duplicate key error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 违反唯一性</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'expected `username` to be unique'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"更改blog的路由\"><a class=\"anchor\" href=\"#更改blog的路由\">#</a> 更改 blog 的路由</h4>\n<p>在 <code>controllers/blogs.js</code>  中更改路由逻辑<br />\n使得当添加博客时，不仅添加到数据库中，而且添加到用户中</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> blogsRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> Blog <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/blog'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/user'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>blogsRouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">const</span> blogs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Blog<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>blogs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>blogsRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>title <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'title or url missing'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> User<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 通过 userId 找到对应的 user</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">const</span> blog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">likes</span><span class=\"token operator\">:</span> request<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>likes <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>id</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">const</span> savedBlog <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blog<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 先把新的 blogs 添加到 blogs 数据库中</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  user<span class=\"token punctuation\">.</span>blogs <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>blogs<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>savedBlog<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 更新 user 的 blogs 字段</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">await</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 把更新的 user 保存到 user 数据库中</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedBlog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> blogsRouter</pre></td></tr></table></figure><h4 id=\"mongoose连接查询\"><a class=\"anchor\" href=\"#mongoose连接查询\">#</a> Mongoose 连接查询</h4>\n<p>Mongoose 的连接查询是通过 <code>.populate()</code>  方法实现的<br />\n注意这里的 <code>populate</code>  的参数是各个数据库中需要连接的字段</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>blogsRouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">const</span> blogs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Blog<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">populate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>blogs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "node",
                "express",
                "nodejs",
                "mongodb"
            ]
        },
        {
            "id": "https://aynya.github.io/%E6%B5%8B%E8%AF%95%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8/",
            "url": "https://aynya.github.io/%E6%B5%8B%E8%AF%95%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8/",
            "title": "测试后端应用",
            "date_published": "2025-03-14T14:08:35.000Z",
            "content_html": "<h3 id=\"测试后端应用\"><a class=\"anchor\" href=\"#测试后端应用\">#</a> 测试后端应用</h3>\n<h4 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h4>\n<p>更改 <code>package.json</code>  文件，添加 <code>jest</code>  依赖</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=production node index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=development nodemon index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env NODE_ENV=test jest --verbose --runInBand\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这里添加了 <code>jest</code>  依赖，并添加了 <code>test</code>  脚本，用于运行测试用例。<br />\n使用 nodemon 的 npm run dev 脚本中指定应用的模式为 development。我们还指定默认的 npm start 命令将定义模式为 production。<br />\n需要安装 <code>jest</code>  依赖，并安装 <code>cross-env</code>  依赖，用于在 Windows 和 Linux/macOS 系统上运行测试用例。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev cross-env</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev jest</pre></td></tr></table></figure><p><strong>我们需要将将测试和生产环境分开，使用不同的数据库</strong><br />\n在 <code>config.js</code>  添加</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">MONGODB_URI</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'test'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">?</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">TEST_MONGODB_URI</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGODB_URI</span></pre></td></tr></table></figure><p>并更改 <code>.env</code> ，添加测试数据库的 uri</p>\n<p>使用 <code>supertest</code>  包来编写测试 API 的测试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev supertest</pre></td></tr></table></figure><p><strong>注意</strong>输出 HTTP 请求的中间件阻碍了测试执行的输出，向 <code>logger.js</code>  中添加更改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">info</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">error</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"开始编写测试\"><a class=\"anchor\" href=\"#开始编写测试\">#</a> 开始编写测试</h4>\n<p>这里以笔记应用为例</p>\n<ol>\n<li>先创建一个 <code>tests/test_helper.js</code>  文件，用于封装一些重复的数据，如初始化数据库，读取数据库</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> Note <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/note'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> initialNotes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 初始化数据库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'HTML is easy'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Browser can execute only JavaScript'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nonExistingId</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 返回 一个不存在的 id</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'willremovethissoon'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">await</span> note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">await</span> note<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> note<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">notesInDb</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 返回 数据库中的 note</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Note<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">return</span> notes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">note</span> <span class=\"token operator\">=></span> note<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    initialNotes<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    nonExistingId<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    notesInDb</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>创建一个 <code>tests/note_api.test.js</code>  文件，用于测试笔记应用其中结构是先 <code>beforeEach</code>  初始化数据库，再 <code>test</code>  测试，最后 <code>afterAll</code>  关闭数据库连接</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> supertest <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'supertest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> test<span class=\"token punctuation\">,</span> after<span class=\"token punctuation\">,</span> beforeEach <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@jest/globals'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 Jest 的全局函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> assert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> Note <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/note'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> helper <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./test_helper'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/note'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token function\">supertest</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// console.log(helper.initialNotes[0]);</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 在每个测试之前执行操作</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">await</span> Note<span class=\"token punctuation\">.</span><span class=\"token function\">deleteMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> note <span class=\"token keyword\">of</span> helper<span class=\"token punctuation\">.</span>initialNotes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 循环添加，这样就是同步操作</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">let</span> noteObject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">await</span> noteObject<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Note API tests'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'notes are returned as json'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 测试 API</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">await</span> api</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">application\\/json</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a valid note can be added'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 添加测试用例</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">const</span> newNote <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 创建新的笔记</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'async/await simplifies making async calls'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">await</span> api <span class=\"token comment\">// 发送 POST 请求</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>newNote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">application\\/json</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">const</span> notesAtEnd <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">notesInDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取数据库中的所有笔记</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>notesAtEnd<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> helper<span class=\"token punctuation\">.</span>initialNotes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 比较</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">const</span> contents <span class=\"token operator\">=</span> notesAtEnd<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> e<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取所有笔记的 content</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'async/await simplifies making async calls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 包含</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'note without content is not added'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 测试不满足条件的是否添加</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">const</span> newNote <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">await</span> api</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/notes'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>newNote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">const</span> notesAtEnd <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">notesInDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>notesAtEnd<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> helper<span class=\"token punctuation\">.</span>initialNotes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">// 获取单个笔记测试</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a specific note can be viewed'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">const</span> notesAtStart <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">notesInDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从数据库获取所有笔记</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">const</span> noteToView <span class=\"token operator\">=</span> notesAtStart<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取第一个笔记</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">const</span> resultNote <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> api <span class=\"token comment\">// 发送 GET 请求获取笔记</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/api/notes/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>noteToView<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">application\\/json</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>resultNote<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">,</span> noteToView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 比较</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token comment\">// 删除单个笔记测试</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a note can be deleted'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">const</span> notesAtStart <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">notesInDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 删之前</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">const</span> noteToDelete <span class=\"token operator\">=</span> notesAtStart<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">await</span> api</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/api/notes/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>noteToDelete<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">.</span><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token keyword\">const</span> notesAtEnd <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">notesInDb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 删之后</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">const</span> contents <span class=\"token operator\">=</span> notesAtEnd<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>contents<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>noteToDelete<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 不包含删除的笔记</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>notesAtEnd<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> notesAtStart<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token function\">afterAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">await</span> mongoose<span class=\"token punctuation\">.</span>connection<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>在测试结束后就可以对 <code>notes.js</code>  中的 <code>promise</code>  进行修改，改成 <code>async/await</code></li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> notesRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Router</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> Note <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../models/note'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>notesRouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Note<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>notesRouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Note<span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>notesRouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>important <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">const</span> savedNote <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> note<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">201</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>savedNote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>notesRouter<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">await</span> Note<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndDelete</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">204</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>notesRouter<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>body</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">const</span> note <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token literal-property property\">important</span><span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span>important<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  Note<span class=\"token punctuation\">.</span><span class=\"token function\">findByIdAndUpdate</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> note<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">new</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">updatedNote</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>updatedNote<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> notesRouter</pre></td></tr></table></figure><ol start=\"4\">\n<li>当修改为 <code>async/awai</code>  后，需要添加 <code>try...catch</code>  来处理错误，因为 <code>async/await</code>  是 <code>promise</code>  的语法糖，所以 <code>try...catch</code>  可以处理 <code>promise</code>  的错误，可以通过往 <code>app.js</code>  中添加 <code>require('express-async-errors')</code>  来省略<br />\n安装库 <code>npm install express-async-errors</code></li>\n</ol>\n<p>app.js</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils/config'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express-async-errors'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加对 async 函数的支持</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> cors <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> notesRouter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./controllers/notes'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">const</span> middleware <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils/middleware'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./utils/logger'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// ...</span></pre></td></tr></table></figure>",
            "tags": [
                "node",
                "node",
                "express",
                "jest",
                "mongoose"
            ]
        },
        {
            "id": "https://aynya.github.io/node%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/",
            "url": "https://aynya.github.io/node%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/",
            "title": "node的自动化测试",
            "date_published": "2025-03-14T06:41:35.000Z",
            "content_html": "<h3 id=\"node的自动化测试\"><a class=\"anchor\" href=\"#node的自动化测试\">#</a> node 的自动化测试</h3>\n<p>Node 有有一个内置的测试库 <code>node:test</code> <br />\n 测试执行命令： <code>npm script test</code> <br />\n 编写测试脚本让命令更简洁：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string-property property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string-property property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon index.js\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string-property property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node --test\"</span> <span class=\"token comment\">// 添加这个命令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>并创建一个 <code>.test.js</code>  文件，内容类似于：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> test <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:test'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> assert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:assert'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 引入断言库</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> reverse <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../utils/for_testing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reverse</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'reverse of a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 断言是否全等</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'reverse of react'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token string\">'tcaer'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'reverse of saippuakauppias'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'saippuakauppias'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token string\">'saippuakauppias'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>随后我们就可以通过命令 <code>npm test</code>  进行测试，这个命令会自动的找到 <code>.test.js</code>  文件进行测试<br />\n对于测试文件，我们也可以通过 <code>describe</code>  来对测试进行分组，这样我们就可以更好的对测试进行分类</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> test<span class=\"token punctuation\">,</span> describe <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node:test'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> average <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../utils/for_testing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>average</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'average'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'of one value is the value itself'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'of many is calculated right'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'of empty array is zero'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    assert<span class=\"token punctuation\">.</span><span class=\"token function\">strictEqual</span><span class=\"token punctuation\">(</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"接下来是示例\"><a class=\"anchor\" href=\"#接下来是示例\">#</a> 接下来是示例</h3>\n<p>让我们对博客列表应用添加新功能</p>\n<h4 id=\"mostblogs函数返回拥有博客最多的作者\"><a class=\"anchor\" href=\"#mostblogs函数返回拥有博客最多的作者\">#</a> mostBlogs 函数返回拥有博客最多的作者</h4>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mostBlogs</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">blogs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> authors <span class=\"token operator\">=</span> blogs<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> blog</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">[</span>blog<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            acc<span class=\"token punctuation\">[</span>blog<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            acc<span class=\"token punctuation\">[</span>blog<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>authors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> author</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>authors<span class=\"token punctuation\">[</span>author<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> acc<span class=\"token punctuation\">.</span>blogs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> author<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">blogs</span><span class=\"token operator\">:</span> authors<span class=\"token punctuation\">[</span>author<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">blogs</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"接下来让我们对这个函数进行测试\"><a class=\"anchor\" href=\"#接下来让我们对这个函数进行测试\">#</a> 接下来让我们对这个函数进行测试</h5>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'most blogs'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the author with most blogs'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> listHelper<span class=\"token punctuation\">.</span><span class=\"token function\">mostBlogs</span><span class=\"token punctuation\">(</span>blogs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepStrictEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">author</span><span class=\"token operator\">:</span> <span class=\"token string\">'Robert C. Martin'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">blogs</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到的结果将会是</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>▶ <span class=\"token function\">most</span> blogs</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  ✔ the author with <span class=\"token function\">most</span> blogs <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.7147ms<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>✔ <span class=\"token function\">most</span> blogs <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.8951ms<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "node",
                "JS",
                "node",
                "测试"
            ]
        }
    ]
}