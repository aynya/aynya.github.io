<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://gardencavy.site</id>
    <title>ay的博客</title>
    <subtitle>ay的博客</subtitle>
    <icon>http://gardencavy.site/images/favicon.ico</icon>
    <link href="http://gardencavy.site" />
    <author>
      <name>ay</name>
    </author>
    <updated>2025-01-14T16:00:00.000Z</updated>
    <category term="博客" />
    <category term=" 笔记" />
    <entry>
        <id>http://gardencavy.site/java%E7%AC%94%E8%AE%B0/</id>
        <title>java笔记</title>
        <link rel="alternate" href="http://gardencavy.site/java%E7%AC%94%E8%AE%B0/"/>
        <content type="html">&lt;h3 id=&#34;面向对象&#34;&gt;&lt;a href=&#34;#面向对象&#34; class=&#34;headerlink&#34; title=&#34;面向对象&#34;&gt;&lt;/a&gt;面向对象&lt;/h3&gt;&lt;h4 id=&#34;对象&#34;&gt;&lt;a href=&#34;#对象&#34; class=&#34;headerlink&#34; title=&#34;对象&#34;&gt;&lt;/a&gt;对象&lt;/h4&gt;&lt;p&gt;1、对象是啥？如何得到&lt;br&gt;对象就是一种特殊的数据结构。对象是用类new出来的，有了类就可以创建出对象&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; class 类名&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;、变量，用来说明对象可以处理什么数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;、方法，描述对象有什么功能&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;构造器&#34;&gt;&lt;a href=&#34;#构造器&#34; class=&#34;headerlink&#34; title=&#34;构造器&#34;&gt;&lt;/a&gt;构造器&lt;/h4&gt;&lt;p&gt;构造器是什么样子的？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Student&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;构造器有什么特点？&lt;br&gt;创建对象时，对象回去调用构造器&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Student&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;构造器的常见应用场景&lt;br&gt;创建对象时，同时完成对对象成员变量的初始化赋值&lt;/p&gt;
&lt;p&gt;构造器的注意事项&lt;br&gt;1、类默认自带一个&amp;#x3D;&amp;#x3D;无参构造器&amp;#x3D;&amp;#x3D;&lt;br&gt;2、如果为类定义了一个有参数构造器，类默认的无参构造器就&amp;#x3D;&amp;#x3D;没有了&amp;#x3D;&amp;#x3D;，此时如果还想使用无参构造器，就必须手写一个无参构造器出来。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;this关键字&#34;&gt;&lt;a href=&#34;#this关键字&#34; class=&#34;headerlink&#34; title=&#34;this关键字&#34;&gt;&lt;/a&gt;this关键字&lt;/h4&gt;&lt;p&gt;this就是一个变量，可以用在方法中，来拿到当前对象&lt;br&gt;那个对象调用方法，this就指向哪一个对象，也就是拿到哪一个对象&lt;/p&gt;
&lt;p&gt;this可以用来解决对象的成员变量与方法内部变量的名称一样时，导致访问冲突问题的&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;封装&#34;&gt;&lt;a href=&#34;#封装&#34; class=&#34;headerlink&#34; title=&#34;封装&#34;&gt;&lt;/a&gt;封装&lt;/h4&gt;&lt;p&gt;封装就是用类设计对象处理某一个事物的数据时，应该要把处理的数据，以及处理这些数据的方法设计到一个对象中去。&lt;br&gt;面向对象的三大特征：封装，继承，多态&lt;/p&gt;
&lt;p&gt;封装的设计规范：合理隐藏，合理暴露&lt;/p&gt;
&lt;p&gt;公开成员，可以使用public修饰&lt;br&gt;隐藏成员，可以使用private修饰&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;实体类&#34;&gt;&lt;a href=&#34;#实体类&#34; class=&#34;headerlink&#34; title=&#34;实体类&#34;&gt;&lt;/a&gt;实体类&lt;/h4&gt;&lt;p&gt;实体类的成员变量必须私有，且要为他们提供get，set方法；必须有无参构造器&lt;br&gt;仅仅只是一个用来保存数据的java类，可以用它创建对象，保存某个事物的数据&lt;/p&gt;
&lt;p&gt;实体类的应用场景：实体类对应的是软件开发里比较流行的开发方式 数据和数据的业务处理相分离&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;static&#34;&gt;&lt;a href=&#34;#static&#34; class=&#34;headerlink&#34; title=&#34;static&#34;&gt;&lt;/a&gt;static&lt;/h4&gt;&lt;h5 id=&#34;变量&#34;&gt;&lt;a href=&#34;#变量&#34; class=&#34;headerlink&#34; title=&#34;变量&#34;&gt;&lt;/a&gt;变量&lt;/h5&gt;&lt;p&gt;叫静态，可以修饰成员变量、成员方法&lt;/p&gt;
&lt;p&gt;static修饰的成员变量叫类变量（静态成员变量），&amp;#x3D;&amp;#x3D;类名.静态变量&amp;#x3D;&amp;#x3D;（推荐），对象名.静态变量（不推荐）&lt;/p&gt;
&lt;p&gt;无static修饰的成员变量叫实例变量（对象变量），属于对象，每个对象中都有一份。&lt;/p&gt;
&lt;p&gt;静态变量：数据只需要一份，且需要被共享时（访问，修改）&lt;br&gt;实例变量：每个对象都要有一份，数据各不同&lt;/p&gt;
&lt;p&gt;访问自己类中的类变量，可以省略类名不写，在某个类中访问其他类的类变量，必须带类名访问。&lt;/p&gt;
&lt;h5 id=&#34;方法&#34;&gt;&lt;a href=&#34;#方法&#34; class=&#34;headerlink&#34; title=&#34;方法&#34;&gt;&lt;/a&gt;方法&lt;/h5&gt;&lt;p&gt;static修饰的成员方法叫&amp;#x3D;&amp;#x3D;静态方法&amp;#x3D;&amp;#x3D;，属于类，可以直接用类名访问，也可以用对象访问&lt;br&gt;&amp;#x3D;&amp;#x3D;类名.静态方法（推荐）&amp;#x3D;&amp;#x3D;&lt;br&gt;对象名.静态方法（不推荐）&lt;br&gt;无static修饰的成员方法叫&amp;#x3D;&amp;#x3D;实例方法&amp;#x3D;&amp;#x3D;（对象方法），属于对象只能用对象访问&lt;/p&gt;
&lt;p&gt;静态方法可以用来设计工具类&lt;br&gt;工具类中的方法都是&amp;#x3D;&amp;#x3D;静态方法&amp;#x3D;&amp;#x3D;，每个类方法都是用来完成一个功能&lt;br&gt;提高了代码的复用性；调用方便，提高了开发效率&lt;/p&gt;
&lt;p&gt;如果工具类使用实例方法，实例方法需要创建对象来调用，会&amp;#x3D;&amp;#x3D;浪费内存&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;p&gt;工具类不需要创建对象，&amp;#x3D;&amp;#x3D;建议将工具类的构造器私有化&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;p&gt;静态方法中可以直接访问静态成员，不可以直接访问实例成员&lt;br&gt;实例方法中既可以直接访问静态静态成员，也可以直接访问实例成员&lt;br&gt;实例方法中可以出现this关键字，静态方法中不可以出现this关键字&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;继承&#34;&gt;&lt;a href=&#34;#继承&#34; class=&#34;headerlink&#34; title=&#34;继承&#34;&gt;&lt;/a&gt;继承&lt;/h4&gt;&lt;h5 id=&#34;继承-1&#34;&gt;&lt;a href=&#34;#继承-1&#34; class=&#34;headerlink&#34; title=&#34;继承&#34;&gt;&lt;/a&gt;继承&lt;/h5&gt;&lt;p&gt;java中提供一个关键字extends，用这个关键字可以让一个类与另一个类建立起父子关系&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;B&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;子类能够继承父类的&amp;#x3D;&amp;#x3D;非私有成员&amp;#x3D;&amp;#x3D;（成员变量，成员方法）&lt;br&gt;子类的对象是由子类和父类共同完成的&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;权限修饰符&#34;&gt;&lt;a href=&#34;#权限修饰符&#34; class=&#34;headerlink&#34; title=&#34;权限修饰符&#34;&gt;&lt;/a&gt;权限修饰符&lt;/h5&gt;&lt;p&gt;用来限制类中的成员（成员变量，成员方法， 构造器）能够被访问的范围&lt;br&gt;private：只能本类&lt;br&gt;缺省：本类，同一个包中的类&lt;br&gt;protected：本类，同一个包中的类，子孙类中&lt;br&gt;public：任意位置&lt;/p&gt;
&lt;p&gt;修饰符			本类		同一个包中的类		子孙类		任意类&lt;br&gt;private			1                             0                                  0                      0&lt;br&gt;缺省			     1                             1                                  0                      0	&lt;br&gt;protected                   1                             1                                  1                      0&lt;br&gt;public                          1                             1                                  1                      1  &lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;继承的特点&#34;&gt;&lt;a href=&#34;#继承的特点&#34; class=&#34;headerlink&#34; title=&#34;继承的特点&#34;&gt;&lt;/a&gt;继承的特点&lt;/h5&gt;&lt;p&gt;在子类方法中访问其他成员（成员变量，成员方法），是依照&amp;#x3D;&amp;#x3D;就近原则&amp;#x3D;&amp;#x3D;的&lt;br&gt;先在子类局部范围内找，然后子类成员范围内找，然后父类成员范围内找，如果父类范围还没有找到则报错。&lt;/p&gt;
&lt;p&gt;如果出现重名的成员，会优先使用子类，可以通过&amp;#x3D;&amp;#x3D;super.&amp;#x3D;&amp;#x3D;关键字指定访问父类成员。&lt;/p&gt;
&lt;p&gt;java中类是单继承的，一个类只能继承一个直接父类。&lt;/p&gt;
&lt;p&gt;object是所有类的祖宗类。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;方法重写&#34;&gt;&lt;a href=&#34;#方法重写&#34; class=&#34;headerlink&#34; title=&#34;方法重写&#34;&gt;&lt;/a&gt;方法重写&lt;/h5&gt;&lt;p&gt;当子类觉得父类中的某个方法不好用，或者无法满足自己的需求时，子类可以重写一个方法名称，参数列表一样的方法，去覆盖父类的这个方法。&lt;/p&gt;
&lt;p&gt;子类重写父类方法时，访问权限必须大于或等于父类该方法的权限&lt;br&gt;重写的方法返回值类型，必须与被重写方法的返回类型一样，或者范围更小&lt;br&gt;&amp;#x3D;&amp;#x3D;私有方法、静态方法&amp;#x3D;&amp;#x3D; 不能被重写，如果重写会报错。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;子类构造器&#34;&gt;&lt;a href=&#34;#子类构造器&#34; class=&#34;headerlink&#34; title=&#34;子类构造器&#34;&gt;&lt;/a&gt;子类构造器&lt;/h5&gt;&lt;p&gt;子类的全部构造器都会先调用父类的构造器，再执行自己&lt;/p&gt;
&lt;p&gt;默认情况下，子类全部构造器的第一行代码都是super()，他会调用父类的无参数构造器。&lt;br&gt;如果父类没有无参构造器，则我们必须在子类构造器的第一行手写super，指定去调用父类的有参数构造器。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Teacher&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;People&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Teacher&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(a, b, c)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;super&lt;/span&gt;(b, c);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.a = a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h5 id=&#34;this-调用兄弟构造器&#34;&gt;&lt;a href=&#34;#this-调用兄弟构造器&#34; class=&#34;headerlink&#34; title=&#34;this()调用兄弟构造器&#34;&gt;&lt;/a&gt;this()调用兄弟构造器&lt;/h5&gt;&lt;p&gt;在任意类的构造器中，是可以通过this(…)去调用该类的其他构造器的。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Student&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String schoolName;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;(name, &lt;span class=&#34;string&#34;&gt;&amp;quot;hhh&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name, String schoolName)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.schoolName = schoolName;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;this(…), super(…)都只能放在构造器的第一行，因此，有了this(…)就不能写super(…)了，反之亦然&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;多态&#34;&gt;&lt;a href=&#34;#多态&#34; class=&#34;headerlink&#34; title=&#34;多态&#34;&gt;&lt;/a&gt;多态&lt;/h4&gt;&lt;h5 id=&#34;认识多态&#34;&gt;&lt;a href=&#34;#认识多态&#34; class=&#34;headerlink&#34; title=&#34;认识多态&#34;&gt;&lt;/a&gt;认识多态&lt;/h5&gt;&lt;p&gt;多态是在继承&amp;#x2F;实现情况下的一种现象，表现为：对象多态，行为多态&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Student&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1.run();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Teacher&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2.run();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;多态的&amp;#x3D;&amp;#x3D;前提&amp;#x3D;&amp;#x3D;：有继承&amp;#x2F;实现关系；存在父类引用子类对象；&amp;#x3D;&amp;#x3D;存在方法重写&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;p&gt;多态是&amp;#x3D;&amp;#x3D;对象，行为的多态&amp;#x3D;&amp;#x3D;，java中的&amp;#x3D;&amp;#x3D;属性（成员变量）&amp;#x3D;&amp;#x3D;不谈多态。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;多态的好处&#34;&gt;&lt;a href=&#34;#多态的好处&#34; class=&#34;headerlink&#34; title=&#34;多态的好处&#34;&gt;&lt;/a&gt;多态的好处&lt;/h5&gt;&lt;p&gt;在多态形式下，右边对象是解耦合的，更便于扩展和维护&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Student&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1.run();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;定义方法时，使用父类类型的形参，可以接收一切子类对象，扩展性更强，更便利。&lt;/p&gt;
&lt;p&gt;多态下&amp;#x3D;&amp;#x3D;不能使用子类的独有功能&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;多态下的类型转换&#34;&gt;&lt;a href=&#34;#多态下的类型转换&#34; class=&#34;headerlink&#34; title=&#34;多态下的类型转换&#34;&gt;&lt;/a&gt;多态下的类型转换&lt;/h5&gt;&lt;p&gt;自动类型转换：父类 变量名 &amp;#x3D; new 子类()；&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Teacher&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;强制类型转换：子类 变量名 &amp;#x3D; (子类)父类变量&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Teacher&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (Teacher)p;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;存在继承&amp;#x2F;实现关系就可以在编译阶段进行强制类型转换，编译阶段不会报错。&lt;br&gt;运行时，如果发现对象的真实类型与强制转换后的类型不同，就会报&amp;#x3D;&amp;#x3D;类型准换异常&amp;#x3D;&amp;#x3D; (ClassCastException)的错误出来&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;People&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Teacher&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;Student&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (Student) p; &lt;span class=&#34;comment&#34;&gt;// java.lang.ClassCastException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&amp;#x3D;&amp;#x3D;强转前&amp;#x3D;&amp;#x3D;，java建议：使用&amp;#x3D;&amp;#x3D;instanceof&amp;#x3D;&amp;#x3D;关键字，判断当前对象的真实类型，再强制转换。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; Student&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;final&#34;&gt;&lt;a href=&#34;#final&#34; class=&#34;headerlink&#34; title=&#34;final&#34;&gt;&lt;/a&gt;final&lt;/h4&gt;&lt;h5 id=&#34;认识final&#34;&gt;&lt;a href=&#34;#认识final&#34; class=&#34;headerlink&#34; title=&#34;认识final&#34;&gt;&lt;/a&gt;认识final&lt;/h5&gt;&lt;p&gt;final关键字是最终，可以修饰：类、方法、变量&lt;br&gt;修饰类：该类被称为最终类，特点是不能被继承了&lt;br&gt;修饰方法：该方法被称为最终方法，特点是不能被重写了&lt;br&gt;修饰变量：该变量有且仅有被赋值一次。&lt;/p&gt;
&lt;p&gt;final修饰基本类型的变量，变量存储的&amp;#x3D;&amp;#x3D;数据&amp;#x3D;&amp;#x3D;不能被改变&lt;br&gt;final修饰的引用类型的变量，变量存储的&amp;#x3D;&amp;#x3D;地址&amp;#x3D;&amp;#x3D; 不能被改变，但地址指向的对象内容可以改变&lt;/p&gt;
&lt;p&gt;&amp;#x3D;&amp;#x3D;static final&amp;#x3D;&amp;#x3D;修饰的成员变量被称为常量&lt;br&gt;作用：常用于记录系统的配置信息&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Constant&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;SCHOOL_NAME&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;船只教育&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x3D;&amp;#x3D;变量名的命名规范：建议用大写英文单词，多个单词间使用下划线连接起来&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;p&gt;使用常量记录系统配置信息的优势：代码可读性好，可维护性也好。&lt;br&gt;程序编译后，常量会被”宏替换“：出现常量的地方全部会被替换成其字面量。可以保证使用常量和直接使用字面量的性能是一样的。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;单例类（设计模式）&#34;&gt;&lt;a href=&#34;#单例类（设计模式）&#34; class=&#34;headerlink&#34; title=&#34;单例类（设计模式）&#34;&gt;&lt;/a&gt;单例类（设计模式）&lt;/h5&gt;&lt;p&gt;具体问题的最优解决方案，确保一个类只能创建一个对象。&lt;/p&gt;
&lt;p&gt;单例：把类的构造器私有，定义一个静态变量存储类的一个对象，提供一个静态方法返回对象。&lt;/p&gt;
&lt;p&gt;在任务管理器对象时，获取运行时对象。&lt;/p&gt;
&lt;p&gt;饿汉式单例：拿对象前，对象早就创建好了&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; A &lt;span class=&#34;title function_&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;懒汉式单例：拿对象时，才开始创建对象。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;B&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; B b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; B &lt;span class=&#34;title function_&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(b == &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			b = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;B&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h5 id=&#34;枚举类&#34;&gt;&lt;a href=&#34;#枚举类&#34; class=&#34;headerlink&#34; title=&#34;枚举类&#34;&gt;&lt;/a&gt;枚举类&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	X, Y, Z;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;枚举类都是最终类，不可以被继承，枚举类都是继承java.lang.Enum类的&lt;br&gt;枚举类的第一行只能罗列一些名称，这些名称都是常量，并且每个常量会记住枚举类的一个对象&lt;br&gt;枚举类的构造器都是私有的，因此，枚举类对外不能创建对象。&lt;br&gt;编译器对枚举类新增了几个方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;枚举类的常见应用场景&#34;&gt;&lt;a href=&#34;#枚举类的常见应用场景&#34; class=&#34;headerlink&#34; title=&#34;枚举类的常见应用场景&#34;&gt;&lt;/a&gt;枚举类的常见应用场景&lt;/h5&gt;&lt;p&gt;枚举类适合做信息分类和标致&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;抽象类&#34;&gt;&lt;a href=&#34;#抽象类&#34; class=&#34;headerlink&#34; title=&#34;抽象类&#34;&gt;&lt;/a&gt;抽象类&lt;/h5&gt;&lt;p&gt;关键字：&amp;#x3D;&amp;#x3D;abstract&amp;#x3D;&amp;#x3D;，可以用来修饰类，成员方法&lt;br&gt;abstract修饰类，这个类就是抽象类&lt;br&gt;abstract修饰方法，这个方法就是抽象方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; class 类名&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;abstract&lt;/span&gt; 返回值 方法名();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;抽象类中不一定要有抽象方法，有抽象方法的类必须是抽象类&lt;br&gt;类有的成员：成员变量，方法，构造器，抽象类都可以有&lt;br&gt;抽象类的&amp;#x3D;&amp;#x3D;主要特点&amp;#x3D;&amp;#x3D;：抽象类不能创建对象，仅作为一种特殊的父类，让子类继承并实现&lt;br&gt;一个类继承抽象类，必须重写完抽象类的全部抽象方法，否则这个类也必须定义成抽象类。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;抽象类的好处&#34;&gt;&lt;a href=&#34;#抽象类的好处&#34; class=&#34;headerlink&#34; title=&#34;抽象类的好处&#34;&gt;&lt;/a&gt;抽象类的好处&lt;/h5&gt;&lt;p&gt;父类知道每个子类要做的某个行为，但每个子类要做的情况不一样，父类就定义成抽象方法，交给子类去重写实现，设计这样的抽象类，就是为了更好的支持多态。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;模板方法&#34;&gt;&lt;a href=&#34;#模板方法&#34; class=&#34;headerlink&#34; title=&#34;模板方法&#34;&gt;&lt;/a&gt;模板方法&lt;/h5&gt;&lt;p&gt;提供一个方法作为完成某类功能的模板，模板方法封装了每个实现步骤，但允许子类提供特定步骤的实现&lt;br&gt;模板方法设计某事可以：提高代码的复用，并简化子类设计&lt;/p&gt;
&lt;p&gt;写法：&lt;br&gt;1、定义一个抽象类&lt;br&gt;2、在里面定义2个方法&lt;br&gt;一个是&amp;#x3D;&amp;#x3D;模板方法&amp;#x3D;&amp;#x3D;，把共同的实现步骤放里面&lt;br&gt;一个是抽象方法：不确定的步骤，交给&amp;#x3D;&amp;#x3D;具体的子类实现&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;p&gt;模板方法是给子类直接使用的，不能被子类重写，建议使用&amp;#x3D;&amp;#x3D;final关键字&amp;#x3D;&amp;#x3D;修饰模板方法&lt;br&gt;一旦子类重写了模板方法，模板方法就失效了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;接口&#34;&gt;&lt;a href=&#34;#接口&#34; class=&#34;headerlink&#34; title=&#34;接口&#34;&gt;&lt;/a&gt;接口&lt;/h4&gt;&lt;h5 id=&#34;接口概述&#34;&gt;&lt;a href=&#34;#接口概述&#34; class=&#34;headerlink&#34; title=&#34;接口概述&#34;&gt;&lt;/a&gt;接口概述&lt;/h5&gt;&lt;p&gt;java提供了一个关键字interface定义出接口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; interface 接口名&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 成员变量（常量）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 成员方法（抽象方法）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：&amp;#x3D;&amp;#x3D;接口不能创建对象&amp;#x3D;&amp;#x3D;&lt;br&gt;接口是用来被&amp;#x3D;&amp;#x3D;实现的&amp;#x3D;&amp;#x3D;，实现接口的类型称为&amp;#x3D;&amp;#x3D;实现类&amp;#x3D;&amp;#x3D;，一个类可以实现多个接口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;修饰符 class 实现类名 implements 接口&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;、接口&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;、接口&lt;span class=&#34;number&#34;&gt;3.&lt;/span&gt;....&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 实现类实现多个接口，必须重写完全部接口的全部抽象方法，否则实现类需要定义为抽象类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h5 id=&#34;接口好处&#34;&gt;&lt;a href=&#34;#接口好处&#34; class=&#34;headerlink&#34; title=&#34;接口好处&#34;&gt;&lt;/a&gt;接口好处&lt;/h5&gt;&lt;p&gt;弥补了类单继承的不足，一个类同时可以实现多个接口，使类的角色更多，功能更强大&lt;br&gt;让程序可以面向接口编程，更利于程序的解耦合。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;接口新增的三种方法&#34;&gt;&lt;a href=&#34;#接口新增的三种方法&#34; class=&#34;headerlink&#34; title=&#34;接口新增的三种方法&#34;&gt;&lt;/a&gt;接口新增的三种方法&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;A&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 默认方法（实例方法）：使用default修饰，默认会被加public修饰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 只能使用接口的实现类对象调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 私有方法：必须用private修饰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 接口内部调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 类方法，使用static修饰，默认public&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;comment&#34;&gt;// 只能用接口名调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;test3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h5 id=&#34;接口的注意事项&#34;&gt;&lt;a href=&#34;#接口的注意事项&#34; class=&#34;headerlink&#34; title=&#34;接口的注意事项&#34;&gt;&lt;/a&gt;接口的注意事项&lt;/h5&gt;&lt;p&gt;1、接口与接口可以多继承：一个接口可以继承多个接口&lt;br&gt;2、一个接口继承多个接口，如果多个接口中存在方法签名冲突、则此时不支持多继承，也不支持多实现。&lt;br&gt;3、一个类继承了父类，又同时实现了接口，如果父亲中和接口中有同名的默认方法，实现类会先用父类的&lt;br&gt;4、一个类实现了多个接口，如果多个接口中存在同名的默认方法，可以不冲突，这个类方法重写即可。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;接口与抽象类&#34;&gt;&lt;a href=&#34;#接口与抽象类&#34; class=&#34;headerlink&#34; title=&#34;接口与抽象类&#34;&gt;&lt;/a&gt;接口与抽象类&lt;/h5&gt;&lt;p&gt;相同点：&lt;br&gt;1、都是抽象形式，都可以有抽象方法，都不能创建对象。&lt;br&gt;2、都是派生子类形式，抽象类是被子类继承使用，接口是被实现类实现。&lt;br&gt;3、一个类继承抽象类，或者实现接口，都必须重写他们的抽象方法，否则自己称为抽象类或者报错。&lt;br&gt;4、都支持多态，能够实现解耦合&lt;br&gt;不同点：&lt;br&gt;1、抽象类中可以定义类的全部普通成员，接口只能定义常量，抽象方法（JDK8新增的三种方法）&lt;br&gt;2、抽象类只能被类单继承，接口可以被类多实现。&lt;br&gt;3、一个类继承抽象类就不能继承其他类，一个接口实现了接口还可以继承其他类或者实现其他接口&lt;br&gt;4、抽象类体现模板思想，更利于做父类，实现代码的复用&lt;br&gt;5、接口更适合做功能的解耦合，解耦合性更灵活。&lt;/p&gt;
&lt;h4 id=&#34;类中的成分&#34;&gt;&lt;a href=&#34;#类中的成分&#34; class=&#34;headerlink&#34; title=&#34;类中的成分&#34;&gt;&lt;/a&gt;类中的成分&lt;/h4&gt;&lt;h5 id=&#34;代码块&#34;&gt;&lt;a href=&#34;#代码块&#34; class=&#34;headerlink&#34; title=&#34;代码块&#34;&gt;&lt;/a&gt;代码块&lt;/h5&gt;&lt;p&gt;代码块是类的5大成分之一（成员变量，构造器，方法，&amp;#x3D;&amp;#x3D;代码块&amp;#x3D;&amp;#x3D;，内部类）&lt;br&gt;代码块分为两种：&lt;br&gt;静态代码块：&lt;br&gt;	格式：static{}&lt;br&gt;	特点：类加载时自动执行，由于类只会加载一次，所以静态代码块也只会执行一次。&lt;br&gt;	作用：完成类的初始化，例如：对静态变量的初始化赋值。&lt;br&gt;实例代码块：&lt;br&gt;	格式：{}&lt;br&gt;	特点：每次创建对象时，执行实例代码块，并在构造器前执行。&lt;br&gt;	作用：和构造器一样，都是用来完成对象的初始化，例如：对实例变量进行初始化赋值&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;内部类&#34;&gt;&lt;a href=&#34;#内部类&#34; class=&#34;headerlink&#34; title=&#34;内部类&#34;&gt;&lt;/a&gt;内部类&lt;/h5&gt;&lt;p&gt;&amp;#x3D;&amp;#x3D;成员内部类&amp;#x3D;&amp;#x3D;&lt;br&gt;就是类中的一个普通成员，类似前面学过的成员变量，成员方法。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Outer&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Inner&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 创建对象的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;外部类名.内部类名 对象名 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; 外部类(...).new 内部类(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Outer.Inner in  &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Outer&lt;/span&gt;().&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Inner&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成员内部类中访问其他成员的特点：&lt;br&gt;1、成员内部类中可以直接访问外部类的实例成员，静态成员。&lt;br&gt;2、成员内部类的实例方法中，可以直接拿到当前外部类对象，格式是：外部类名.this。&lt;/p&gt;
&lt;p&gt;&amp;#x3D;&amp;#x3D;静态内部类&amp;#x3D;&amp;#x3D;&lt;br&gt;有static修饰的内部类，属于外部类自己特有&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Outer&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Inner&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;外部类.内部类名.对象名 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; 外部类.内部类(...);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Outer.Inner.in = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Outer&lt;/span&gt;.Inner();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&amp;#x3D;&amp;#x3D;匿名内部类&amp;#x3D;&amp;#x3D;&lt;br&gt;是一种特殊的局部内部类&lt;br&gt;所谓匿名：指的是程序员不需要为这个类声明名字，默认有个隐藏的名字。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; 类或接口(参数值...)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	类体(一般是方法重写);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Animal&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;cry&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;特点：匿名内部类本质就是一个子类，并会立即创建出一个子类对象。&lt;br&gt;作用：用于更方便的创建子类对象。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;lambda表达式&#34;&gt;&lt;a href=&#34;#lambda表达式&#34; class=&#34;headerlink&#34; title=&#34;lambda表达式&#34;&gt;&lt;/a&gt;lambda表达式&lt;/h5&gt;&lt;p&gt;可以用于替代某些匿名内部类对象，从而让程序更简洁，可读性更好。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(被重写方法的形参列表) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	被重写方法的代码体;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x3D;&amp;#x3D;注意&amp;#x3D;&amp;#x3D;：lambda表达式只能替代函数式接口的匿名内部类&lt;br&gt;函数式接口：有且仅有一个抽象方法的接口，注意大部分函数式接口上面都会有一个@FunctionalInterface的注释，用来注解用于约束当前接口必须是函数式接口。&lt;/p&gt;
&lt;p&gt;lambda表达式的省略规则：&lt;br&gt;1、参数类型全部可以省略不写&lt;br&gt;2、如果只有一个参数，参数类型省略的同时()也可以省略，但多个参数不能省略()&lt;br&gt;3、如果lambda表达式中只有一行代码，大括号可以不写，同时要省略分号”;”如果这行代码是return语句，也必须去掉return。&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;方法引用&#34;&gt;&lt;a href=&#34;#方法引用&#34; class=&#34;headerlink&#34; title=&#34;方法引用&#34;&gt;&lt;/a&gt;方法引用&lt;/h4&gt;&lt;h5 id=&#34;静态方法引用&#34;&gt;&lt;a href=&#34;#静态方法引用&#34; class=&#34;headerlink&#34; title=&#34;静态方法引用&#34;&gt;&lt;/a&gt;静态方法引用&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;类名::静态方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用场景：如果某个Lambda表达式只有一个静态方法，并且”-&amp;gt;“前后参数的形式一致，就可以使用静态方法引用。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;实例方法引用&#34;&gt;&lt;a href=&#34;#实例方法引用&#34; class=&#34;headerlink&#34; title=&#34;实例方法引用&#34;&gt;&lt;/a&gt;实例方法引用&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;对象名::实例方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用场景：如果某个Lambda表达式里只是通过对象名称调用一个实例方法，并且”-&amp;gt;”前后参数的形式一致，就可以使用实例方法引用。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;特定类的方法应用&#34;&gt;&lt;a href=&#34;#特定类的方法应用&#34; class=&#34;headerlink&#34; title=&#34;特定类的方法应用&#34;&gt;&lt;/a&gt;特定类的方法应用&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;特定类的名称::方法&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用场景：如果某个Lambda表达式只是调用一个特定类型的实例方法，并且前面参数列表中的&amp;#x3D;&amp;#x3D;第一个参数&amp;#x3D;&amp;#x3D;是作为方法的主调，后面的所有参数都是作为该实例方法的入参的，则此时就可以使用特定类型的方法引用。&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;构造器引用&#34;&gt;&lt;a href=&#34;#构造器引用&#34; class=&#34;headerlink&#34; title=&#34;构造器引用&#34;&gt;&lt;/a&gt;构造器引用&lt;/h5&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;类名::&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用场景：如果某个Lambda表达式里只是在创建对象，并且”-&amp;gt;“前后参数情况一致，就可以使用构造器引用。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;常用API&#34;&gt;&lt;a href=&#34;#常用API&#34; class=&#34;headerlink&#34; title=&#34;常用API&#34;&gt;&lt;/a&gt;常用API&lt;/h3&gt;&lt;h4 id=&#34;String-创建字符串对象的方式&#34;&gt;&lt;a href=&#34;#String-创建字符串对象的方式&#34; class=&#34;headerlink&#34; title=&#34;String 创建字符串对象的方式&#34;&gt;&lt;/a&gt;String 创建字符串对象的方式&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;方式一: Java程序中的所有字符串文字(例如”abc”)都为此类的对象.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;方式二: 调用String类的构造器初始化字符串对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;String-提供的常用方法&#34;&gt;&lt;a href=&#34;#String-提供的常用方法&#34; class=&#34;headerlink&#34; title=&#34;String 提供的常用方法&#34;&gt;&lt;/a&gt;String 提供的常用方法&lt;/h4&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回字符串的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取某个索引的字符并返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 将当前字符串转换成字符数组返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;char&lt;/span&gt;[] toCharArray()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 判断当前字符串与另一个字符串的内容一样，一样返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object anObject)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 判断当前字符串与另一个字符串的内容一样，一样返回true(忽略大小写)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;equalsIgnoreCase&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String anotherString)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 根据开始和结束索引来进行截取，得到新的字符串返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; beginIndex)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 使用新的值， 将字符串中的旧值替换，得到新的字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(CharSequence target, CharSequence replacement)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 判断字符串中是否包含了某个字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(CharSequence s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 判断字符串是否以某个字符串内容开头，开头返回true，反之&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String prefik)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 把字符串按照某个字符串内容进行分割，并返回字符串数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String[] split(String regex)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h3 id=&#34;ArrayList集合&#34;&gt;&lt;a href=&#34;#ArrayList集合&#34; class=&#34;headerlink&#34; title=&#34;ArrayList集合&#34;&gt;&lt;/a&gt;ArrayList集合&lt;/h3&gt;&lt;p&gt;常用方法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 创建一个空的集合对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 将指定的元素添加到此集合的末尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(E e)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在此集合中的指定位置插入指定的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index, E element)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回指定元素索引处的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; E &lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 返回集合中元素的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 删除指定索引处的元素，返回被删除的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; E &lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 删除指定的元素，返回删除是否成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object o)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 修改指定索引处的元素，返回被修改的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; E &lt;span class=&#34;title function_&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; index, E element)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
</content>
        <category term="java" scheme="http://gardencavy.site/categories/java/" />
        <category term="java" scheme="http://gardencavy.site/tags/java/" />
        <updated>2025-01-14T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://gardencavy.site/Eng%E7%AC%94%E8%AE%B0/</id>
        <title>Eng笔记</title>
        <link rel="alternate" href="http://gardencavy.site/Eng%E7%AC%94%E8%AE%B0/"/>
        <content type="html">&lt;p&gt;此笔记来自兔老爹b站视频()[&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhZNDExSjdhRz9zcG1faWRfZnJvbT0zMzMuNzg4LnBsYXllci5zd2l0Y2gmdmRfc291cmNlPThkMzkxMWIzZWExYTYwMWJjZGY0MDdhOWRkYTE1YzAxJnA9MiU1RA==&#34;&gt;https://www.bilibili.com/video/BV1XY411J7aG?spm_id_from=333.788.player.switch&amp;amp;vd_source=8d3911b3ea1a601bcdf407a9dda15c01&amp;amp;p=2]&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;语法综述&#34;&gt;&lt;a href=&#34;#语法综述&#34; class=&#34;headerlink&#34; title=&#34;语法综述&#34;&gt;&lt;/a&gt;语法综述&lt;/h3&gt;&lt;h4 id=&#34;动作-动词&#34;&gt;&lt;a href=&#34;#动作-动词&#34; class=&#34;headerlink&#34; title=&#34;动作(动词)&#34;&gt;&lt;/a&gt;动作(动词)&lt;/h4&gt;&lt;p&gt;1、可以独立完成的动词&lt;br&gt;主语+ &amp;#x3D;&amp;#x3D;不及物动词&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Papa Rabbit sleeps.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;兔子睡觉&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;2、有1个动作的承受者&lt;br&gt;主语+&amp;#x3D;&amp;#x3D;单及物动词&amp;#x3D;&amp;#x3D;+宾语&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Papa Rabbit likes you.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;兔子喜欢你&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;3、有2个动作承受者&lt;br&gt;主语 + &amp;#x3D;&amp;#x3D;双及物动词&amp;#x3D;&amp;#x3D; + 间接宾语 + 直接宾语&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Papa Rabbit teaches you English&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;兔子教你英语&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;4、只有1个动作承受(但需补充)&lt;br&gt;主语 + &amp;#x3D;&amp;#x3D;复杂及物动词&amp;#x3D;&amp;#x3D; + 宾语 + (宾语)补语&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sb considers you smart&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;某人认为你很聪明&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;5、非”动作”&lt;br&gt;主语 + &amp;#x3D;&amp;#x3D;系动词&amp;#x3D;&amp;#x3D; + (主语)补语&amp;#x2F;表语&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sb is tall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sb &amp;lt;- tall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;某人看起来高&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;句子&#34;&gt;&lt;a href=&#34;#句子&#34; class=&#34;headerlink&#34; title=&#34;句子&#34;&gt;&lt;/a&gt;句子&lt;/h4&gt;&lt;p&gt;句子成分(8只): 主语、谓语动词、宾语、宾语补语、主语补语、定语、状语、同位语。&lt;/p&gt;
&lt;p&gt;简单句 -&amp;gt; 作主语 -&amp;gt; 主语从句&lt;br&gt;$~~~~~~~~~~~$-&amp;gt; 作宾语 -&amp;gt; 宾语从句&lt;br&gt;$~~~~~~~~~~~$-&amp;gt; 作表语 -&amp;gt; 表语从句&lt;br&gt;$~~~~~~~~~~~$-&amp;gt; 作同位语 -&amp;gt; 同位语从句&lt;br&gt;以上都是&amp;#x3D;&amp;#x3D;名词性&amp;#x3D;&amp;#x3D;从句&lt;br&gt;$~~~~~~~~~~~$-&amp;gt; 作定语 -&amp;gt; 定语从句&lt;br&gt;$~~~~~~~~~~~$-&amp;gt; 作状语 -&amp;gt; 状语从句&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;词性-词类&#34;&gt;&lt;a href=&#34;#词性-词类&#34; class=&#34;headerlink&#34; title=&#34;词性(词类)&#34;&gt;&lt;/a&gt;词性(词类)&lt;/h4&gt;&lt;p&gt;词性(10只): 动词(Verbs)、名词(Nouns)、冠词(Articles)、代词(Pronouns)、形容词(Adjectives)、数词(Numerals)、副词(Adverbs)、介词(Prepositions)、叹词(Interjections)、连词(Conjunctions)&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;谓语动词的”三大本领”&#34;&gt;&lt;a href=&#34;#谓语动词的”三大本领”&#34; class=&#34;headerlink&#34; title=&#34;谓语动词的”三大本领”&#34;&gt;&lt;/a&gt;谓语动词的”三大本领”&lt;/h4&gt;&lt;p&gt;1、动作&amp;#x3D;&amp;#x3D;时间&amp;#x3D;&amp;#x3D;(&amp;#x3D;&amp;#x3D;T&amp;#x3D;&amp;#x3D;ense)&lt;br&gt;2、动作&amp;#x3D;&amp;#x3D;状态&amp;#x3D;&amp;#x3D;(&amp;#x3D;&amp;#x3D;A&amp;#x3D;&amp;#x3D;spect)&lt;br&gt;时间: $~~~~~~~~$动作:&lt;br&gt;现在$~~~~~~~~~~$一般&lt;br&gt;过去$~~~~~~~~~~$完成&lt;br&gt;将来$~~~~~~~~~~$进行&lt;br&gt;过去将来$~~~$完成进行&lt;/p&gt;
&lt;p&gt;以上排列组合可以得到&amp;#x3D;&amp;#x3D;16&amp;#x3D;&amp;#x3D;种可能的时态&lt;/p&gt;
&lt;p&gt;3、表示动作假设、情感…(&amp;#x3D;&amp;#x3D;M&amp;#x3D;&amp;#x3D;ood)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;If I were a rabbit...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(虚拟语气)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;时体气: &amp;#x3D;&amp;#x3D;TAM&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;协助谓语动词的–助动词&#34;&gt;&lt;a href=&#34;#协助谓语动词的–助动词&#34; class=&#34;headerlink&#34; title=&#34;协助谓语动词的–助动词&#34;&gt;&lt;/a&gt;协助谓语动词的–助动词&lt;/h4&gt;&lt;p&gt;eat:&lt;br&gt;$~~~~$吃过了(完成) -&amp;gt; have -&amp;gt; have eaten&lt;br&gt;$~~~~$正在吃(进行) -&amp;gt; be $~~~$-&amp;gt; is eating&lt;br&gt;$~~~~$被吃 $~~~~~~~~~~~~$-&amp;gt;be$~~~~~$-&amp;gt; is eaten&lt;br&gt;$~~~~$有能力吃 $~~~~$ -&amp;gt; can $~~$ -&amp;gt; can eat&lt;br&gt;$~~~~$有可能吃 $~~~~~$-&amp;gt; might -&amp;gt; might eat&lt;br&gt;$~~~~$有义务吃 $~~~~~$-&amp;gt; must $~$-&amp;gt; must eat&lt;br&gt;$~~~~$不吃(否定) $~~~$-&amp;gt; do $~~~~$-&amp;gt; do not eat&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;非谓语动词&#34;&gt;&lt;a href=&#34;#非谓语动词&#34; class=&#34;headerlink&#34; title=&#34;非谓语动词&#34;&gt;&lt;/a&gt;非谓语动词&lt;/h4&gt;&lt;p&gt;非谓语动词通常出现:动词不定式、现在分词、动名词、过去分词&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;动词分类&#34;&gt;&lt;a href=&#34;#动词分类&#34; class=&#34;headerlink&#34; title=&#34;动词分类&#34;&gt;&lt;/a&gt;动词分类&lt;/h3&gt;&lt;p&gt;实义动词&lt;br&gt;$~~~~$按动作承受着分&lt;br&gt;$~~~~$$~~~~$及物动词&lt;br&gt;$~~~~$$~~~~$不及物动词&lt;br&gt;$~~~~$按动作状态分&lt;br&gt;$~~~~$$~~~~$动作动词&lt;br&gt;$~~~~$$~~~~$状态动词&lt;br&gt;(连)系动词&lt;br&gt;助动词&lt;br&gt;情态动词&lt;br&gt;非谓语动词&lt;br&gt;$~~~~$不定式&lt;br&gt;$~~~~$过去分词&lt;br&gt;$~~~~$现在分词&lt;br&gt;$~~~~$动名词&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;动词时态&#34;&gt;&lt;a href=&#34;#动词时态&#34; class=&#34;headerlink&#34; title=&#34;动词时态&#34;&gt;&lt;/a&gt;动词时态&lt;/h3&gt;&lt;h4 id=&#34;一般现在时态&#34;&gt;&lt;a href=&#34;#一般现在时态&#34; class=&#34;headerlink&#34; title=&#34;一般现在时态&#34;&gt;&lt;/a&gt;一般现在时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;动词原形&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;动词原型 + s(第三人称单数)&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I eat carrots. 我吃胡萝卜(并未特别指出状态)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;She eats carrots.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;1、表达事实&#34;&gt;&lt;a href=&#34;#1、表达事实&#34; class=&#34;headerlink&#34; title=&#34;1、表达事实&#34;&gt;&lt;/a&gt;1、表达事实&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I eat carrots. 我吃胡萝卜(事实陈述)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The sun rises in the east. 太阳从东边升起&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;2、表达习惯-重复的动作&#34;&gt;&lt;a href=&#34;#2、表达习惯-重复的动作&#34; class=&#34;headerlink&#34; title=&#34;2、表达习惯&amp;#x2F;重复的动作&#34;&gt;&lt;/a&gt;2、表达习惯&amp;#x2F;重复的动作&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I play basketball. 我打篮球(我有这个习惯)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;3、表示预计发生的事&#34;&gt;&lt;a href=&#34;#3、表示预计发生的事&#34; class=&#34;headerlink&#34; title=&#34;3、表示预计发生的事&#34;&gt;&lt;/a&gt;3、表示预计发生的事&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The bus leaves at 8PM every day.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;公交车每晚八点离站&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;现在进行时态&#34;&gt;&lt;a href=&#34;#现在进行时态&#34; class=&#34;headerlink&#34; title=&#34;现在进行时态&#34;&gt;&lt;/a&gt;现在进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词be的变位 + 动词的现在分词&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;现在分词&#34;&gt;&lt;a href=&#34;#现在分词&#34; class=&#34;headerlink&#34; title=&#34;现在分词&#34;&gt;&lt;/a&gt;现在分词&lt;/h5&gt;&lt;p&gt;通常: + ing&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如: looking(看), smelling(闻), tasting(品尝)...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;有些动词需要改变拼写, 如: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;write -&amp;gt; writing, 不是writeing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hit -&amp;gt; hitting, 不是hiting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;die -&amp;gt; dying, 不是dieing&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;现在完成时态&#34;&gt;&lt;a href=&#34;#现在完成时态&#34; class=&#34;headerlink&#34; title=&#34;现在完成时态&#34;&gt;&lt;/a&gt;现在完成时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词have的变位 + 动词的过去分词&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;过去分词&#34;&gt;&lt;a href=&#34;#过去分词&#34; class=&#34;headerlink&#34; title=&#34;过去分词&#34;&gt;&lt;/a&gt;过去分词&lt;/h5&gt;&lt;p&gt;通常: + ed&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如: looked(看), smelled(闻), tasted(品尝)...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;有些动词是&amp;quot;不规则变化&amp;quot;, 如: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;eat -&amp;gt; eaten; eat, give see, fall -&amp;gt; eaten, given, seen, fallen&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bring -&amp;gt; brought; bring, buy, fight, think -&amp;gt; brought, bought, fought, thought&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;feel -&amp;gt; felt; feel, keep, sleep, leave -&amp;gt; felt, kept, slept, left&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;过去分词 !&amp;#x3D; 过去式&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I have eaten carrots. 我吃过胡萝卜&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;现在完成进行时态&#34;&gt;&lt;a href=&#34;#现在完成进行时态&#34; class=&#34;headerlink&#34; title=&#34;现在完成进行时态&#34;&gt;&lt;/a&gt;现在完成进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;have的变位 + been + 动词的现在分词&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I eat carrots.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;I have been eating carrots. 我在吃胡萝卜(不但吃了一些, 还要接着吃)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;一般过去时态&#34;&gt;&lt;a href=&#34;#一般过去时态&#34; class=&#34;headerlink&#34; title=&#34;一般过去时态&#34;&gt;&lt;/a&gt;一般过去时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;+ 动词过去式&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;过去式&#34;&gt;&lt;a href=&#34;#过去式&#34; class=&#34;headerlink&#34; title=&#34;过去式&#34;&gt;&lt;/a&gt;过去式&lt;/h5&gt;&lt;p&gt;通常: + ed&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;如: looked(看), smelled(闻), tasted(品尝)...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有些动词是”不规则变化”, 如: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;动词原型&lt;/th&gt;
&lt;th&gt;动词过去式&lt;/th&gt;
&lt;th&gt;动词过去分词&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;do&lt;/td&gt;
&lt;td&gt;did&lt;/td&gt;
&lt;td&gt;done&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;go&lt;/td&gt;
&lt;td&gt;went&lt;/td&gt;
&lt;td&gt;gone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;take&lt;/td&gt;
&lt;td&gt;tooke&lt;/td&gt;
&lt;td&gt;taken&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bring&lt;/td&gt;
&lt;td&gt;brought&lt;/td&gt;
&lt;td&gt;brought&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blow&lt;/td&gt;
&lt;td&gt;blew&lt;/td&gt;
&lt;td&gt;blown&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin&lt;/td&gt;
&lt;td&gt;began&lt;/td&gt;
&lt;td&gt;begun&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speak&lt;/td&gt;
&lt;td&gt;spoke&lt;/td&gt;
&lt;td&gt;spoken&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The rabbit ate a carrot. 兔子吃了胡萝卜(只知道兔子过去某个时刻正在吃胡萝卜)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h5 id=&#34;过去的习惯动作&#34;&gt;&lt;a href=&#34;#过去的习惯动作&#34; class=&#34;headerlink&#34; title=&#34;过去的习惯动作&#34;&gt;&lt;/a&gt;过去的习惯动作&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I used to play basketball. (我曾经常打篮球)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;过去进行时态&#34;&gt;&lt;a href=&#34;#过去进行时态&#34; class=&#34;headerlink&#34; title=&#34;过去进行时态&#34;&gt;&lt;/a&gt;过去进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词be的变位 + 动词的现在分词&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The rabbit is eating a carrot. -&amp;gt; The rabbit was eating a carrot.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这兔子在过去某个时间点处在正在吃胡萝卜的过程中&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;现在完成时态-vs-一般过去时态&#34;&gt;&lt;a href=&#34;#现在完成时态-vs-一般过去时态&#34; class=&#34;headerlink&#34; title=&#34;现在完成时态 vs. 一般过去时态&#34;&gt;&lt;/a&gt;现在完成时态 vs. 一般过去时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;一般过去时态更注重于: &amp;#x3D;&amp;#x3D;动作有没有发生&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;li&gt;现在完成时态更注重于: &amp;#x3D;&amp;#x3D;动作完成了吗(有影响)&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;一般过去时态-vs-过去进行时态&#34;&gt;&lt;a href=&#34;#一般过去时态-vs-过去进行时态&#34; class=&#34;headerlink&#34; title=&#34;一般过去时态 vs. 过去进行时态&#34;&gt;&lt;/a&gt;一般过去时态 vs. 过去进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;一般过去时态可以看成&amp;#x3D;&amp;#x3D;一张照片&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;li&gt;过去进行时态可以看成&amp;#x3D;&amp;#x3D;一段视频&amp;#x3D;&amp;#x3D;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;过去完成时态&#34;&gt;&lt;a href=&#34;#过去完成时态&#34; class=&#34;headerlink&#34; title=&#34;过去完成时态&#34;&gt;&lt;/a&gt;过去完成时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词have的变位&amp;#x3D;&amp;#x3D; + 动词的过去分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;He tried to find me yesterday afternoon, but I had already gone to Shanghai&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对于他试图找我那个时间点(昨天下午)来说, 过去某一点(昨天下午之前)我已经离开了, 去上海了, 所以影响就是: 他找不到我&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;过去完成进行时态&#34;&gt;&lt;a href=&#34;#过去完成进行时态&#34; class=&#34;headerlink&#34; title=&#34;过去完成进行时态&#34;&gt;&lt;/a&gt;过去完成进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词have的变位&amp;#x3D;&amp;#x3D; + been + 动词的现在分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The rabbit has been eating a carrot. -&amp;gt; The rabbit had been eating a carrot.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;兔子在过去的某个时间点已经吃了胡萝卜一段时间，并且后面还要吃。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;一般将来时态&#34;&gt;&lt;a href=&#34;#一般将来时态&#34; class=&#34;headerlink&#34; title=&#34;一般将来时态&#34;&gt;&lt;/a&gt;一般将来时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;will&amp;#x3D;&amp;#x3D; + 动词原型&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;将来某个时间点发生的动作-说话者确定会发生的&#34;&gt;&lt;a href=&#34;#将来某个时间点发生的动作-说话者确定会发生的&#34; class=&#34;headerlink&#34; title=&#34;将来某个时间点发生的动作(说话者确定会发生的)&#34;&gt;&lt;/a&gt;将来某个时间点发生的动作(说话者确定会发生的)&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;The sun will rise again tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;太阳明天也会照常升起&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;将来进行时态&#34;&gt;&lt;a href=&#34;#将来进行时态&#34; class=&#34;headerlink&#34; title=&#34;将来进行时态&#34;&gt;&lt;/a&gt;将来进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;will + &amp;#x3D;&amp;#x3D;be&amp;#x3D;&amp;#x3D; + 动词的现在分词&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;将来某个时间，某个动作是在进行过程&#34;&gt;&lt;a href=&#34;#将来某个时间，某个动作是在进行过程&#34; class=&#34;headerlink&#34; title=&#34;将来某个时间，某个动作是在进行过程&#34;&gt;&lt;/a&gt;将来某个时间，某个动作是在进行过程&lt;/h5&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I will be eating a carrot for lunch tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我明天午饭会在吃胡萝卜这个动作过程中。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;将来完成时态&#34;&gt;&lt;a href=&#34;#将来完成时态&#34; class=&#34;headerlink&#34; title=&#34;将来完成时态&#34;&gt;&lt;/a&gt;将来完成时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;will + have&amp;#x3D;&amp;#x3D; + 动词的过去分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I will have finished making the video by 4PM tomorrow, so I can publish it after that.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;对于明天下午4点的那个时间点来说，我在那之前完成做视频，对明天下午四点钟有影响，影响是我可以发视频了。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;将来完成进行时态&#34;&gt;&lt;a href=&#34;#将来完成进行时态&#34; class=&#34;headerlink&#34; title=&#34;将来完成进行时态&#34;&gt;&lt;/a&gt;将来完成进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;will + 助动词have的变位&amp;#x3D;&amp;#x3D; + been + 动词的现在分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I will have been eating carrots for 2 hours by 3PM tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我确定明天下午三点钟时，我不但已经吃了两个小时胡萝卜，而且还要接着吃。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;一般过去将来时态&#34;&gt;&lt;a href=&#34;#一般过去将来时态&#34; class=&#34;headerlink&#34; title=&#34;一般过去将来时态&#34;&gt;&lt;/a&gt;一般过去将来时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;would&amp;#x3D;&amp;#x3D; + 动词原型&lt;/li&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;助动词be的过去变位 + going + to&amp;#x3D;&amp;#x3D; + 动词原型&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I said I would eat a carrot for lunch.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我(之前)说过我会午饭吃根胡萝卜(对于我之前说的话来说是在将来)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;过去将来进行时态&#34;&gt;&lt;a href=&#34;#过去将来进行时态&#34; class=&#34;headerlink&#34; title=&#34;过去将来进行时态&#34;&gt;&lt;/a&gt;过去将来进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;would&amp;#x3D;&amp;#x3D; + be + 动词的现在分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I said I would be eating a carrot at 1PM tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我之前说我明天下午一点会在吃胡萝卜的这个过程中。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;过去将来完成时态&#34;&gt;&lt;a href=&#34;#过去将来完成时态&#34; class=&#34;headerlink&#34; title=&#34;过去将来完成时态&#34;&gt;&lt;/a&gt;过去将来完成时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;would&amp;#x3D;&amp;#x3D; + have + 动词的过去分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I said I would have eaten a carrot by 1PM tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我之前说我明天下午1点会已经做完吃胡萝卜这个动作。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;hr&gt;
&lt;h4 id=&#34;过去将来完成进行时态&#34;&gt;&lt;a href=&#34;#过去将来完成进行时态&#34; class=&#34;headerlink&#34; title=&#34;过去将来完成进行时态&#34;&gt;&lt;/a&gt;过去将来完成进行时态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x3D;&amp;#x3D;would&amp;#x3D;&amp;#x3D; + have + been + 动词的现在分词&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;I said I would have been eating lunch for 2 hours by 1PM tomorrow.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;我之前说明天下午一点时在吃中饭的过程中，之前吃了两个小时，之后还要吃&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h4 id=&#34;时态汇总&#34;&gt;&lt;a href=&#34;#时态汇总&#34; class=&#34;headerlink&#34; title=&#34;时态汇总&#34;&gt;&lt;/a&gt;时态汇总&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;一般&lt;/th&gt;
&lt;th&gt;进行&lt;/th&gt;
&lt;th&gt;完成&lt;/th&gt;
&lt;th&gt;完成进行&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;现在&lt;/td&gt;
&lt;td&gt;一般现在时态&lt;/td&gt;
&lt;td&gt;现在进行时态&lt;/td&gt;
&lt;td&gt;现在完成时态&lt;/td&gt;
&lt;td&gt;现在完成进行时态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;eat&amp;#x2F;eats&lt;/td&gt;
&lt;td&gt;am&amp;#x2F;is&amp;#x2F;are eating&lt;/td&gt;
&lt;td&gt;has&amp;#x2F;have eaten&lt;/td&gt;
&lt;td&gt;has&amp;#x2F;have been eating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去&lt;/td&gt;
&lt;td&gt;一般过去时态&lt;/td&gt;
&lt;td&gt;过去进行时态&lt;/td&gt;
&lt;td&gt;过去完成时态&lt;/td&gt;
&lt;td&gt;过去完成进行时态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ate&lt;/td&gt;
&lt;td&gt;was&amp;#x2F;were eating&lt;/td&gt;
&lt;td&gt;had eaten&lt;/td&gt;
&lt;td&gt;had been eating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;将来&lt;/td&gt;
&lt;td&gt;一般将来时态&lt;/td&gt;
&lt;td&gt;将来进行时态&lt;/td&gt;
&lt;td&gt;将来完成时态&lt;/td&gt;
&lt;td&gt;将来完成进行时态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;will eat&lt;/td&gt;
&lt;td&gt;will be eating&lt;/td&gt;
&lt;td&gt;will have eaten&lt;/td&gt;
&lt;td&gt;will have been eating&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;过去将来&lt;/td&gt;
&lt;td&gt;一般过去将来时态&lt;/td&gt;
&lt;td&gt;过去将来进行时态&lt;/td&gt;
&lt;td&gt;过去将来完成时态&lt;/td&gt;
&lt;td&gt;过去将来完成进行时态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;would eat&lt;/td&gt;
&lt;td&gt;would be eating&lt;/td&gt;
&lt;td&gt;would have eaten&lt;/td&gt;
&lt;td&gt;would have been eating&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
</content>
        <category term="English" scheme="http://gardencavy.site/categories/English/" />
        <category term="English" scheme="http://gardencavy.site/tags/English/" />
        <updated>2025-01-14T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://gardencavy.site/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://gardencavy.site/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Quick-Start&#34;&gt;&lt;a href=&#34;#Quick-Start&#34; class=&#34;headerlink&#34; title=&#34;Quick Start&#34;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&#34;Create-a-new-post&#34;&gt;&lt;a href=&#34;#Create-a-new-post&#34; class=&#34;headerlink&#34; title=&#34;Create a new post&#34;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;Run-server&#34;&gt;&lt;a href=&#34;#Run-server&#34; class=&#34;headerlink&#34; title=&#34;Run server&#34;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;Generate-static-files&#34;&gt;&lt;a href=&#34;#Generate-static-files&#34; class=&#34;headerlink&#34; title=&#34;Generate static files&#34;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;Deploy-to-remote-sites&#34;&gt;&lt;a href=&#34;#Deploy-to-remote-sites&#34; class=&#34;headerlink&#34; title=&#34;Deploy to remote sites&#34;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-01-13T10:41:34.161Z</updated>
    </entry>
</feed>
